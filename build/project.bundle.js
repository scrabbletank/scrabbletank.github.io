!function(e){var t={};function s(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(i,a,function(t){return e[t]}.bind(null,a));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/build/",s(s.s=1)}([function(e,t){e.exports=void 0},function(e,t,s){"use strict";s.r(t);s(0);class i extends Phaser.Scene{constructor(e=[0,0],t="myScene"){super(t),this.position=e}relativeX(e=0){return this.position[0]+e}relativeY(e=0){return this.position[1]+e}enableScene(){}disableScene(){}registerEvent(e,t){}preload(){}create(){}}class a{constructor(e,t,s,i,a,n,r="courier20",o=20){this.boundingBox=e.add.rectangle(s,i,a,n,2236962).setOrigin(0),this.boundingBox.strokeColor=12303291,this.boundingBox.isStroked=!0,this.boundingBox.lineWidth=2,this.text=e.add.bitmapText(s+a/2,i+n/2,r,t,o,1).setOrigin(.5),this.boundingBox.setDepth(99),this.text.setDepth(100)}setVisible(e){this.boundingBox.setVisible(e),this.text.setVisible(e)}destroy(){this.boundingBox.destroy(),this.text.destroy()}}var n=5,r=100,o=101,h=102,l=103,c=104,d=105,u=106,g=107,p=108,m=109,y=110,v=111,b=112,f=0,x=1,w=2,k=3,T=4,C=5,B=0,M=1,R=2,D=3,H=4,I=5,L=["Wood","Leather","Metal","Fiber","Stone","Crystal"],S=0,_=1,P=2,E=[0,2,2,3,3,4,4,5,6],A=.66,G=.4,U=1,F=7,O=7,W=5,Y=.1,q=.2,V=.01,N=.01,X=.04,K=.44,z=.03,j=.55,Q=.77,J=1.15,Z=1.02,$=50,ee=50,te=2,se=400,ie=1.2,ae=.0025,ne=80,re=.75,oe=8e4,he=13,le=8,ce=2500,de=.5,ue=1.03,ge=.09,pe=10,me=4,ye=1.66,ve=1.5,be=50,fe=.05,xe=1.75,we=25,ke=25,Te=0,Ce=1,Be=2,Me=3,Re=4,De=5,He=6,Ie=6e4,Le=1e3,Se=100,_e=.9,Pe=90,Ee=3600,Ae=2,Ge=.95,Ue=1.5,Fe=["Primas","Twin","Threed","Tera","Pentas","Hexat","Septus","Octor","Novum","Deccan","Hendeka","Dodecan","Zenith"],Oe=1e3,We=24e3,Ye=672e3,qe=8736e3,Ve=6e4,Ne={"0001":0,"0010":1,"0011":2,"0100":3,"0101":4,"0110":5,"0111":6,1e3:7,1001:8,1010:9,1011:10,1100:11,1101:12,1110:13,1111:14};class Xe{static getDistance(e,t,s,i){return Math.sqrt(Math.pow(s-e,2)+Math.pow(i-t,2))}static randint(e,t){return Math.floor(e+Math.random()*(t-e))}static pointInList(e,t,s){for(var i=0;i<s.length;i++)if(s[i].x===e&&s[i].y===t)return!0;return!1}static numberString(e){var t=new Intl.NumberFormat("en-US").format(e);return t.length>=20?t=t.substr(0,t.length-16)+"T":t.length>=16?t=t.substr(0,t.length-12)+"B":t.length>=12?t=t.substr(0,t.length-8)+"M":t.length>=8&&(t=t.substr(0,t.length-4)+"K"),t}static nearestPointsInList(e,t,s,i){for(var a=[],n=0;n<s.length;n++)a.push([n,Xe.getDistance(e,t,s[n].x,s[n].y)]);return a.sort((function(e,t){return e[1]-t[1]})),a.slice(0,i)}static nearestPointInList(e,t,s,i=!1){for(var a=0,n=this.getDistance(e,t,s[0].x,s[0].y),r=1;r<s.length;r++){var o=this.getDistance(e,t,s[r].x,s[r].y);if(o<n){if(!0===i&&0===o)continue;a=r,n=o}}return[a,n]}static sumList(e){for(var t=0,s=0;s<e.length;s++)t+=e[s];return t}static canCraft(e,t){for(var s=0;s<t.length;s++)if(t[s]<e[s])return!1;return!0}static getBonusText(e,t){var s=t>=0?"+":"";switch(e){case"health":return s+Math.floor(t)+" Health";case"damageMin":return s+Math.floor(t)+" Min Damage";case"damageMax":return s+Math.floor(t)+" Max Damage";case"strength":return s+Math.floor(t)+" Strength";case"dexterity":return s+Math.floor(t)+" Dexterity";case"agility":return s+Math.floor(t)+" Agility";case"endurance":return s+Math.floor(t)+" Endurance";case"recovery":return s+Math.floor(t)+" Recovery";case"defense":return s+Math.floor(t)+" Defense";case"accuracy":return s+Math.floor(t)+" Accuracy";case"hit":return s+Math.floor(t)+" Hit";case"evasion":return s+Math.floor(t)+" Evasion";case"critDamage":return s+Math.floor(100*t)+"% Crit Damage";case"critChance":return s+Math.floor(100*t)+"% Crit Chance";case"healthRegen":return s+Math.floor(10*t)/10+"/s HP Regen";case"armor":return s+Math.floor(t)+" Armor"}}static getCostText(e,t){switch(e){case 0:return Xe.numberString(Math.floor(t))+" Wood";case 1:return Xe.numberString(Math.floor(t))+" Leather";case 2:return Xe.numberString(Math.floor(t))+" Metal";case 3:return Xe.numberString(Math.floor(t))+" Fiber";case 4:return Xe.numberString(Math.floor(t))+" Stone";case 5:return Xe.numberString(Math.floor(t))+" Crystal"}}static processText(e,t){for(var s=e.split("\n"),i="",a=0;a<s.length;a++)if(s[a].length<t)i+=s[a]+(a<s.length-1?"\n":"");else{for(var n=0,r=t;r<s[a].length;){for(;r>n&&" "!==s[a][r];)r--;i+=s[a].substring(n,r)+"\n",n=r+1,r=Math.min(n+t,s[a].length)}n<s[a].length&&(i+=s[a].substring(n,s[a].length)),a!==s.length-1&&(i+="\n")}return i}static colorLerp(e,t,s){var i=Phaser.Display.Color.IntegerToRGB(e),a=Phaser.Display.Color.IntegerToRGB(t);return Phaser.Display.Color.GetColor(i.r+(a.r-i.r)*s,i.g+(a.g-i.g)*s,i.b+(a.b-i.b)*s)}static yieldHelper(e,t){for(var s=0,i=0;i<t.length;i++)if(t[i].type===e){s=t[i].rate;break}return s}}class Ke{constructor(){return Ke.instance||(this.moonlight=0,this.challengePoints=0,this.moonperks={str:{name:"Moon's Strength",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:0}},dex:{name:"Moon's Dexterity",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:1}},agi:{name:"Moon's Agility",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:2}},end:{name:"Moon's Endurance",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:3}},rec:{name:"Moon's Recovery",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:4}},def:{name:"Moon's Defense",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:5}},acc:{name:"Moon's Accuracy",level:0,maxLevel:-1,requires:[],cost:[7,2,1.025],texture:{sprite:"moonicons",tile:6}},vault:{name:"Hero's Vault",level:0,maxLevel:-1,requires:[],cost:[60,30,1.25],texture:{sprite:"moonicons",tile:9}},nightmarket:{name:"Night Market",level:0,maxLevel:-1,requires:[],cost:[35,45,1.2],texture:{sprite:"moonicons",tile:22}},hardenedvillagers:{name:"Hardened Villagers",level:0,maxLevel:5,requires:[],cost:[40,25,1.5],texture:{sprite:"moonicons",tile:11}},shadow:{name:"Shadow's Blessing",level:0,maxLevel:-1,requires:[],cost:[10,15,1.08],texture:{sprite:"moonicons",tile:12}},runes:{name:"Moon Runes",level:0,maxLevel:1,requires:[],cost:[1e3,0,0],texture:{sprite:"moonicons",tile:8}},direbeasts:{name:"Dire Beasts",level:0,maxLevel:1,requires:[],cost:[250,0,0],texture:{sprite:"moonicons",tile:13}},heartofdarkness:{name:"Heart of Darkness",level:0,maxLevel:-1,requires:[],cost:[100,100,1.25],texture:{sprite:"moonicons",tile:10}},blackirongear:{name:"Blackiron Gear",level:0,maxLevel:-1,requires:["heartofdarkness"],cost:[30,80,1.25],texture:{sprite:"moonicons",tile:10}},runelands:{name:"Runelands",level:0,maxLevel:-1,requires:["runes"],cost:[300,150,1.3],texture:{sprite:"moonicons",tile:8}},moonlightworkers:{name:"Moonlight Workers",level:0,maxLevel:-1,requires:["hardenedvillagers"],cost:[100,100,1.3],texture:{sprite:"moonicons",tile:19}},heropouch:{name:"Hero's Pouch",level:0,maxLevel:-1,requires:["vault"],cost:[35,45,1.1],texture:{sprite:"moonicons",tile:9}},moonwine:{name:"Moonwine",level:0,maxLevel:2,requires:["nightmarket"],cost:[500,0,5],texture:{sprite:"moonicons",tile:14}},metal:{name:"Shadow's Metal",level:0,maxLevel:-1,requires:["str"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:26}},leather:{name:"Shadow's Leather",level:0,maxLevel:-1,requires:["dex"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:25}},fiber:{name:"Shadow's Fiber",level:0,maxLevel:-1,requires:["agi"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:27}},stone:{name:"Shadow's Stone",level:0,maxLevel:-1,requires:["end"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:28}},wood:{name:"Shadow's Wood",level:0,maxLevel:-1,requires:["rec"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:24}},crystal:{name:"Shadow's Crystal",level:0,maxLevel:-1,requires:["def"],cost:[25,5,1.1],texture:{sprite:"moonicons",tile:29}},gold:{name:"Shadow's Gold",level:0,maxLevel:-1,requires:["acc"],cost:[120,30,1.125],texture:{sprite:"moonicons",tile:30}},discovery:{name:"Discovery",level:0,maxLevel:-1,requires:["moonlightworkers"],cost:[150,100,1.25],texture:{sprite:"moonicons",tile:15}},shadow2:{name:"Shadow's Chosen",level:0,maxLevel:-1,requires:["shadow"],cost:[75,75,1.1],texture:{sprite:"moonicons",tile:20}},runes3:{name:"Corrupted Runes",level:0,maxLevel:-1,requires:["runelands"],cost:[400,200,1.1],texture:{sprite:"moonicons",tile:8}},soulbound:{name:"Soulbound",level:0,maxLevel:-1,requires:["blackirongear"],cost:[250,100,1.1],texture:{sprite:"moonicons",tile:21}}},this.challenges={time:{name:"A Matter of Years",completions:0,maxCompletions:5,unlocked:!0,fastestTime:0},forge:{name:"Forged Ahead",completions:0,maxCompletions:5,unlocked:!1,fastestTime:0},explore:{name:"Giant Lands",completions:0,maxCompletions:5,unlocked:!1,fastestTime:0},buildings:{name:"Lazy Townsfolk",completions:0,maxCompletions:5,unlocked:!1,fastestTime:0},talent:{name:"Talentless",completions:0,maxCompletions:5,unlocked:!1,fastestTime:0},megamonsters:{name:"Mega Monsters",completions:0,maxCompletions:5,unlocked:!1,fastestTime:0}},Ke.instance=this),Ke.instance}static getInstance(){return Ke.instance?Ke.instance:new Ke}static getMoonlightEarned(e,t){return Math.floor(e*Math.pow(Ue,t))}getChallengeFromName(e){switch(e){case"A Matter of Years":return this.challenges.time;case"Forged Ahead":return this.challenges.forge;case"Giant Lands":return this.challenges.explore;case"Lazy Townsfolk":return this.challenges.buildings;case"Talentless":return this.challenges.talent;case"Mega Monsters":return this.challenges.megamonsters}}getShadowBonus(){return 1+.1*this.moonperks.shadow.level}getMoteSoftCap(){return ne+40*this.moonperks.blackirongear.level}_haveMoonlightRequirements(e){for(var t=0;t<e.requires.length;t++)if(0===this.moonperks[e.requires[t]].level)return!1;return!0}levelUpPerk(e){if(!(e.level>=e.maxLevel&&-1!==e.maxLevel)){var t=Math.floor((e.cost[0]+e.cost[1]*e.level)*Math.pow(e.cost[2],e.level));this.moonlight<t||!1===this._haveMoonlightRequirements(e)||(this.moonlight-=t,e.level+=1)}}save(){var e=[];for(const t in this.moonperks)e.push([t,this.moonperks[t].level]);var t=[];for(const e in this.challenges)t.push([e,this.challenges[e].completions,this.challenges[e].unlocked,this.challenges[e].fastestTime]);return{ml:this.moonlight,mp:e,cp:this.challengePoints,c:t}}load(e,t){this.moonlight=e.ml;for(var s=0;s<e.mp.length;s++)void 0!==this.moonperks[e.mp[s][0]]&&(this.moonperks[e.mp[s][0]].level=e.mp[s][1]);this.challengePoints=e.cp;for(s=0;s<e.c.length;s++)this.challenges[e.c[s][0]].completions=e.c[s][1],this.challenges[e.c[s][0]].unlocked=e.c[s][2],this.challenges[e.c[s][0]].fastestTime=e.c[s][3]}}class ze{constructor(){return ze.instance||(this.unlocks={gearTab:!1,exploreTab:!1,combatTab:!1,townTab:!1,talentsTab:!1,worldTab:!1,infuseUI:!1,resourceUI:!1,craftingUI:!1,buildings:!1,motes:!1,runes:!1},this.exploreUnlocks=[{count:1,text:"Well that's everything I can see in this area. If I want to keep searching I'll need to leave this weirdly square land and find another square to explore. You think you saw a town in the distance towards the north, but you could be seeing things."},{count:5,text:"You've seen a lot of what this world has to offer by now, and most of it wants to kill you. The people in the town seem nice though, and many of them have been wanting some way to help out. With the lands sort of safe to walk again they can get back to working.\n\nThe only problem is they don't have anything to build with so they want you to bring them some from the monsters you've been killing."},{count:10,text:"Your surprised at how easy this has been going. Sure, every day is a new battle for your life against horrible shadow monsters, but the tile's you've cleared seem way more vibrant and full of life.\n\nSome of the townsfolk have been worried that the mists will return but the odds of that happening have got to be astronomically low. Just to get them off your back you told them to give you some kind of alert on the Region tab if something goes wrong. Hah! Like that will ever happen."},{count:30,text:"From what the townsfolk have told me there's a barrier preventing people from leaving this region. I wonder what happens after I explore every tile there is to explore?"},{count:70,text:"How many years has it been since I started this journey? All the days sort of melt together into one long blur of monster slaying. You swear it's only been like, 1, 2 days tops though."}],this.killUnlocks=[{count:1,text:"What the hell was that? It looked like a normal beast, but like, made of shadows? Is this whole land filled with these monsters?"},{count:5,text:"You're starting to get the hang of this, although your starting to wonder what happened to the previous owner of this gear..."},{count:100,text:"You did it, you've killed your 100th monster. This accomplishment fills you with pride for a moment before you shrug and move onto the next one."}],this.shadeUnlocks=[{count:50,text:"These strange monsters have been leaving behind these shadowy.. things. I think I'll call them shade. It's strange, but I'm pretty sure it wants me to do something with it."},{count:400,text:"Now that I've collected enough of this shade stuff, I think I can do something even better with it, I just need enough of it all in one place."},{count:5e3,text:"I've found a load of this shade stuff, where is it all coming from?"}],this.resourceUnlocks=[{count:25,text:"I've noticed some monsters leave behind more than just shadows. things like wood, stone and metal.... Definitely things they shouldn't have inside them. You have enough now that you could try and improve your gear with them. Slapping some metal onto the end of your sword should do the trick."},{count:100,text:"You have so many resources your not sure what to do with them. Maybe its time to try your hand at making some new gear? You've strapped enough garbage around your broken sword that it's more of a club now then anyhting. You don't have a forge or tools, but it can't be harder than upgrading your gear."},{count:1e3,text:"So let me get this straight. It costs, what, 30-40 resources to craft a sword, but hundreds to make it a little sharper? The townsfolk assure me this is normal, but I'm starting to think they just want me to bring them free resources."}],this.statPointUnlocks=[{count:1,text:"You finally got enough of that shade to try something. You grab a handful of the stuff and try squeezing it into a ball only to find it slip from your hands and enter your chest! You look around and see '+1 Stat Point' appear above your head. You're not sure what that means, but you feel stronger than you did before! You're pretty sure you'll need even more shade to do this again, but at least you found one use for it."},{count:25,text:"You're not entirely sure what this shade is doing, but boy do you feel strong!"},{count:50,text:"You've been infusing a lot of shade lately, is there a limit to how much your body can take?"},{count:100,text:"doesn't seem like it. At least 100 isn't the limit."},{count:300,text:"I've lost count. By all measures my abilities shouldn't be humanly possible, yet I'm still finding monsters stronger than me."}],this.deathUnlocks=[{count:1,text:"It was bound to happen eventually, you're not exactly adventurer material. You open your eyes, wondering where the next stage of existence will take you... and it looks like, wilderness? Wait a minute, you know this place! This is where you died! Or not? You pick yourself up and dust off your clothes, turns out your injuries aren't as bad as you thought.\n\nLooking over your gear it seems you lost some of your shade, is that what those things were after?"},{count:5,text:"I guess I should be happy these things aren't killing me, but getting knocked out this many times can't be good for me."},{count:12,text:"I feel like I'm not paying enough attention, wandering around thinking about what I should do next, how my gear is doing, then suddenly BAM! Ambushed by a literal whale and knocked unconscious."}],this.loreUnlocks={},this.loreTexts={},this.exploresUnlocked=0,this.killsUnlocked=0,this.shadesUnlocked=0,this.resourceUnlocked=0,this.statPointUnlocked=0,this.deathUnlocked=0,this.counts={tilesExplored:0,monsterKills:0,shadeGained:0,resourcesGained:0,statPointsGained:0,deaths:0},this.persistentUnlocks={challenges:!1,autoExplore:!1},this.totalCounts={tilesExplored:0,monsterKills:0,shadeGained:0,resourcesGained:0,statPointsGained:0,deaths:0,timesGated:0},this.onUnlockHandlers=[],ze.instance=this),ze.instance}static getInstance(){return ze.instance?ze.instance:new ze}rebirth(){this.unlocks={gearTab:!1,exploreTab:!1,combatTab:!1,townTab:!1,talentsTab:Ke.getInstance().challenges.talent.completions>0,worldTab:!1,infuseUI:!1,resourceUI:!1,craftingUI:!1,buildings:!1,motes:!1,runes:!1},this.exploresUnlocked=0,this.killsUnlocked=0,this.shadesUnlocked=0,this.resourceUnlocked=0,this.statPointUnlocked=0,this.deathUnlocked=0,this.counts={tilesExplored:0,monsterKills:0,shadeGained:0,resourcesGained:0,statPointsGained:0,deaths:0},this.totalCounts.timesGated+=1,this.persistentUnlocks.autoExplore=!0}_onUnlock(e,t,s){for(var i=0;i<this.onUnlockHandlers.length;i++)this.onUnlockHandlers[i](e,t,s)}addOnUnlockHandler(e){this.onUnlockHandlers.push(e)}registerTileExplored(){this.counts.tilesExplored+=1,this.totalCounts.tilesExplored+=1;for(var e=this.exploresUnlocked;e<this.exploreUnlocks.length;e++)this.exploreUnlocks[e].count<=this.counts.tilesExplored&&(this._onUnlock(f,this.exploreUnlocks[e].count,this.exploreUnlocks[e].text),this.exploresUnlocked=e+1)}registerMonsterKill(){this.counts.monsterKills+=1,this.totalCounts.monsterKills+=1;for(var e=this.killsUnlocked;e<this.killUnlocks.length;e++)this.killUnlocks[e].count<=this.counts.monsterKills&&(this._onUnlock(x,this.killUnlocks[e].count,this.killUnlocks[e].text),this.killsUnlocked=e+1)}registerShadeGain(e){this.counts.shadeGained+=e,this.totalCounts.shadeGained+=e;for(var t=this.shadesUnlocked;t<this.shadeUnlocks.length;t++)this.shadeUnlocks[t].count<=this.counts.shadeGained&&(this._onUnlock(w,this.shadeUnlocks[t].count,this.shadeUnlocks[t].text),this.shadesUnlocked=t+1)}registerResourceGain(e){this.counts.resourcesGained+=Xe.sumList(e),this.totalCounts.resourcesGained+=Xe.sumList(e);for(var t=this.resourceUnlocked;t<this.resourceUnlocks.length;t++)this.resourceUnlocks[t].count<=this.counts.resourcesGained&&(this._onUnlock(k,this.resourceUnlocks[t].count,this.resourceUnlocks[t].text),this.resourceUnlocked=t+1)}registerStatPointGain(e){this.counts.statPointsGained+=e,this.totalCounts.statPointsGained+=e;for(var t=this.statPointUnlocked;t<this.statPointUnlocks.length;t++)this.statPointUnlocks[t].count<=this.counts.statPointsGained&&(this._onUnlock(T,this.statPointUnlocks[t].count,this.statPointUnlocks[t].text),this.statPointUnlocked=t+1)}registerDeath(e){this.counts.deaths+=e,this.totalCounts.deaths+=e;for(var t=this.deathUnlocked;t<this.deathUnlocks.length;t++)this.deathUnlocks[t].count<=this.counts.deaths&&(this._onUnlock(C,this.deathUnlocks[t].count,this.deathUnlocks[t].text),this.deathUnlocked=t+1)}registerLore(e){void 0!==this.loreUnlocks[e]&&!1===this.loreUnlocks[e]&&(this._onUnlock(v,0,this.loreTexts[e]),this.loreUnlocks[e]=!0)}registerFeatureUnlocked(e,t){switch(e){case r:this.unlocks.gearTab=!0;break;case o:this.unlocks.exploreTab=!0;break;case h:this.unlocks.combatTab=!0;break;case l:this.unlocks.townTab=!0;break;case p:this.unlocks.talentsTab=!0;break;case c:this.unlocks.infuseUI=!0;break;case d:this.unlocks.resourceUI=!0;break;case u:this.unlocks.craftingUI=!0;break;case g:this.unlocks.buildings=!0;break;case y:this.unlocks.motes=!0;break;case m:this.unlocks.worldTab=!0;break;case b:this.unlocks.runes=!0}this._onUnlock(e,0,t)}save(){return{un:this.unlocks,eun:this.exploresUnlocked,kun:this.killsUnlocked,sun:this.shadesUnlocked,run:this.resourceUnlocked,stun:this.statPointUnlocked,dun:this.deathUnlocked,count:this.counts,tcount:this.totalCounts,pun:this.persistentUnlocks}}load(e,t){this.unlocks=e.un,this.exploresUnlocked=e.eun,this.killsUnlocked=e.kun,this.shadesUnlocked=e.sun,this.resourceUnlocked=e.run,this.statPointUnlocked=e.stun,this.deathUnlocked=e.dun,this.counts=e.count,this.totalCounts=e.tcount,this.persistentUnlocks=e.pun}}class je{constructor(){this.stats={strength:5,dexterity:5,agility:5,endurance:5,recovery:5,defense:5,accuracy:5,hit:40,evasion:40,critDamage:1},this.statBonuses={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},this.hitAnim="claws",this.critAnim="clawscrit",this.level=0,this.currentHealth=25,this.attackCooldown=0,this.attackSpeed=1500,this.stunTimer=0,this.name="",this.xpReward=0,this.drops=[],this.motes=0,this.icon={sprite:"enemyicons",tile:8},this.traits=[],this.shieldValue=0,this.shieldCooldown=0,this.healthChangedHandlers=[],this.attackCooldownChangedHandlers=[]}MaxHealth(){var e=this.statBonuses.health+this.Endurance()*W;return Math.floor(e)}Strength(){var e=this.stats.strength+this.statBonuses.strength;return Math.floor(e)}Dexterity(){var e=this.stats.dexterity+this.statBonuses.dexterity;return Math.floor(e)}Agility(){var e=this.stats.agility+this.statBonuses.agility;return Math.floor(e)}Endurance(){var e=this.stats.endurance+this.statBonuses.endurance;return Math.floor(e)}Recovery(){var e=this.stats.recovery+this.statBonuses.recovery;return Math.floor(e)}Defense(){var e=this.stats.defense+this.statBonuses.defense;return Math.floor(e)}Accuracy(){var e=this.stats.accuracy+this.statBonuses.accuracy;return Math.floor(e)}Hit(){var e=this.stats.hit+this.statBonuses.hit+this.Dexterity()*F;return Math.floor(e)}Evasion(){var e=this.stats.evasion+this.statBonuses.evasion+this.Agility()*O;return Math.floor(e)}CritChance(){var e=this.statBonuses.critChance;return Math.floor(100*e)/100}CritDamage(){var e=.25+this.stats.critDamage+this.statBonuses.critDamage+this.Accuracy()*X;return e=Math.pow(e,j),Math.floor(100*e)/100}DamageMin(){var e=this.statBonuses.damageMin+this.Strength()*G;return Math.floor(Math.max(1,e))}DamageMax(){var e=this.statBonuses.damageMax+this.Strength()*U;return Math.floor(Math.max(1,e))}HealthRegen(){var e=this.statBonuses.healthRegen+this.Recovery()*Y;return Math.floor(10*e)/10}Armor(){var e=this.Defense()*q+this.statBonuses.armor*(1+this.Defense()*V);return Math.floor(e)}AttackSpeed(){return this.attackSpeed}registerEvent(e,t){"onHealthChanged"===e?this.healthChangedHandlers.push(t):"onAttackCooldownChanged"===e&&this.attackCooldownChangedHandlers.push(t)}_onHealthChanged(){for(var e=0;e<this.healthChangedHandlers.length;e++)this.healthChangedHandlers[e](this.currentHealth)}_onAttackCooldownChanged(){for(var e=0;e<this.attackCooldownChangedHandlers.length;e++)this.attackCooldownChangedHandlers[e](this.attackCooldown)}canAttack(){return this.attackCooldown>=this.AttackSpeed()}takeDamage(e,t,s=!1){var i=e;if(this.shieldValue>0){var a=Math.min(this.shieldValue,i);this.shieldValue-=a,i-=a}return!1===s&&(i=Math.max(1,i-this.Armor())),this.currentHealth-=i,this._onHealthChanged(),i}rollDamage(){return Xe.randint(this.DamageMin(),this.DamageMax()+1)}tickRegen(e,t=!0){var s=this.currentHealth;this.currentHealth=Math.min(this.MaxHealth(),this.currentHealth+this.HealthRegen()*(e/1e3)*1),s!=this.currentHealth&&this._onHealthChanged()}tickAttackCooldown(e,t){if(this.stunTimer>0)this.stunTimer-=e;else{var s=this.attackCooldown;this.attackCooldown=Math.min(this.attackSpeed,this.attackCooldown+e*t),s!=this.attackCooldown&&this._onAttackCooldownChanged();var i=this.findTrait(De);void 0!==i&&(this.shieldCooldown-=e,this.shieldCooldown<=0&&(this.shieldValue=this.Armor()*i.level,this.shieldCooldown=7e3))}}attack(e,t=!1){var s=this.rollDamage();!0===t&&(s*=this.CritDamage());var i=e.takeDamage(s,t);this.attackCooldown=0;var a=this.findTrait(He);return void 0!==a&&Math.random()<1-Math.pow(.92,a.level)&&(this.attackCooldown=this.attackSpeed/2),this._onAttackCooldownChanged(),i}equip(e){var t=e.getStatBonuses();for(const e in t)this.statBonuses[e]+=t[e]}unequip(e){var t=e.getStatBonuses();for(const e in t)this.statBonuses[e]-=t[e]}setMonsterStats(e,t,s,i,a,n,r,o){this.level=a;var h=a-1,l=Math.max(0,h),c=h*J,d=Math.pow(Z,l);this.stats.strength=(this.stats.strength+c)*t.strength*d,this.stats.dexterity=(this.stats.dexterity+c)*t.dexterity*d,this.stats.agility=(this.stats.agility+c)*t.agility*d,this.stats.endurance=(this.stats.endurance+c)*t.endurance*d,this.stats.recovery=(this.stats.recovery+c)*t.recovery*d,this.stats.defense=(this.stats.defense+c)*t.defense*d,this.stats.accuracy=(this.stats.accuracy+c)*t.accuracy*d,this.statBonuses.armor=this.Armor()*(t.armor-1),this.statBonuses.healthRegen=this.HealthRegen()*(t.healthRegen-1),this.statBonuses.damageMin=this.DamageMin()*(t.damageMin-1),this.statBonuses.damageMax=this.DamageMax()*(t.damageMax-1),this.statBonuses.hit=this.Hit()*(t.hit-1),this.statBonuses.evasion=this.Evasion()*(t.evasion-1),this.statBonuses.health=this.MaxHealth()*(t.health-1),this.statBonuses.critChance=i,this.attackSpeed=s,this.attackCooldown=0,this.currentHealth=this.MaxHealth(),this.name=a<1?"Weak "+e:e;var u=n+Ke.getInstance().moonperks.shadow2.level;this.xpReward=u+u/4*h,this.xpReward=this.xpReward*(1+.05*Ke.getInstance().challenges.megamonsters.completions),this.drops=r,this.icon=o}findTrait(e){for(var t=0;t<this.traits.length;t++)if(this.traits[t].type===e)return this.traits[t]}applyTraits(){for(var e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0,xpReward:0,motes:0},t=0;t<this.traits.length;t++){var s=this.traits[t];switch(s.type){case Te:e.strength+=this.Strength()*(.2*s.level),e.dexterity+=this.Dexterity()*(.2*s.level),e.agility+=this.Agility()*(.2*s.level),e.endurance+=this.Endurance()*(.2*s.level),e.recovery+=this.Recovery()*(.2*s.level),e.defense+=this.Defense()*(.2*s.level),e.accuracy+=this.Accuracy()*(.2*s.level),e.xpReward+=this.xpReward*(.75*s.level),e.motes+=s.level+Math.floor(this.level/5);break;case Be:e.damageMin+=this.DamageMin()*(.1*s.level),e.damageMax+=this.DamageMax()*(.1*s.level),e.health+=this.MaxHealth()*(.25*s.level),this.attackSpeed=1.15*this.attackSpeed;break;case Me:e.evasion+=this.Evasion()*(.25*s.level),this.attackSpeed=.85*this.attackSpeed;break;case Re:this.critChance=2*this.critChance,e.damageMin+=this.DamageMin()*(.05*s.level),e.damageMax+=this.DamageMax()*(.05*s.level),e.critDamage+=this.CritDamage()*(.05*s.level);break;case He:e.hit+=this.Hit()*(.2*s.level),e.healthRegen+=this.HealthRegen()*(.1*s.level)}e.xpReward+=this.xpReward*(1+.01*Ke.getInstance().challenges.megamonsters.completions*s.level)}for(const t in this.statBonuses)this.statBonuses[t]+=e[t];this.xpReward+=e.xpReward,this.motes+=e.motes,this.currentHealth=this.MaxHealth()}addTrait(e,t){var s=this.findTrait(e);void 0===s?(s={type:e,level:t},this.traits.push(s)):s.level+=t}}var Qe={};Qe.wolf={name:"Wolf",scaleBlock:{strength:.85,dexterity:1.3,agility:1,endurance:.7,recovery:1,defense:.9,accuracy:1.3,armor:1.5,health:1,healthRegen:1,damageMin:1.3,damageMax:1.33,hit:1,evasion:1.3},attackSpeed:1100,critChance:.3,shadeBase:18,rewards:[{type:B,amount:1},{type:M,amount:1.3},{type:D,amount:.6}],icon:{sprite:"enemyicons",tile:2}},Qe.bear={name:"Bear",scaleBlock:{strength:1.3,dexterity:.8,agility:.8,endurance:1.4,recovery:1.2,defense:1.2,accuracy:.8,armor:1.8,health:1.2,healthRegen:1,damageMin:.9,damageMax:1.35,hit:1,evasion:1},attackSpeed:1800,critChance:.14,shadeBase:26,rewards:[{type:R,amount:.9},{type:D,amount:1.1},{type:H,amount:1.8}],icon:{sprite:"enemyicons",tile:5}},Qe.plant={name:"Plant",scaleBlock:{strength:.85,dexterity:1.2,agility:1.2,endurance:1.2,recovery:1,defense:1,accuracy:1,armor:1.7,health:.8,healthRegen:1.3,damageMin:1,damageMax:1.125,hit:1.2,evasion:1},attackSpeed:1350,critChance:.1,shadeBase:18,rewards:[{type:B,amount:1.8},{type:D,amount:1},{type:I,amount:.5}],icon:{sprite:"enemyicons",tile:3}},Qe.slime={name:"Slime",scaleBlock:{strength:.825,dexterity:1,agility:1.2,endurance:1,recovery:1.2,defense:.9,accuracy:.8,armor:1.25,health:1,healthRegen:2.3,damageMin:1,damageMax:1.05,hit:1,evasion:1.2},attackSpeed:1200,critChance:.1,shadeBase:15,rewards:[{type:B,amount:1},{type:R,amount:1.2},{type:H,amount:.8},{type:I,amount:1.4}],icon:{sprite:"enemyicons",tile:0}},Qe.bloom={name:"Bloom",scaleBlock:{strength:1,dexterity:1.4,agility:.6,endurance:1,recovery:1.2,defense:1,accuracy:.6,armor:1.5,health:1,healthRegen:1.4,damageMin:1.1,damageMax:1.1,hit:1,evasion:1.2},attackSpeed:1100,critChance:.17,shadeBase:16,rewards:[{type:B,amount:.8},{type:M,amount:.8},{type:D,amount:1.6}],icon:{sprite:"enemyicons",tile:4}},Qe.goblin={name:"Goblin",scaleBlock:{strength:.72,dexterity:1.2,agility:1.6,endurance:.8,recovery:.8,defense:1,accuracy:1.4,armor:1.1,health:1,healthRegen:.8,damageMin:1.3,damageMax:1.4,hit:.9,evasion:1.2},attackSpeed:1200,critChance:.4,shadeBase:14,rewards:[{type:B,amount:1.2},{type:R,amount:1.4},{type:I,amount:.6}],icon:{sprite:"enemyicons",tile:12}},Qe.formation={name:"Formation",scaleBlock:{strength:1.1,dexterity:1.1,agility:.8,endurance:1.1,recovery:1.1,defense:1.1,accuracy:1.1,armor:2.9,health:1,healthRegen:1,damageMin:1.1,damageMax:1.1,hit:1.1,evasion:1.1},attackSpeed:1300,critChance:.11,shadeBase:24,rewards:[{type:R,amount:1.6},{type:H,amount:1.8},{type:I,amount:2.2}],icon:{sprite:"enemyicons",tile:10}},Qe.whale={name:"Whale",scaleBlock:{strength:1.5,dexterity:.85,agility:.55,endurance:1.5,recovery:1.5,defense:.9,accuracy:.8,armor:1.5,health:1.5,healthRegen:1.5,damageMin:1.5,damageMax:1.55,hit:1,evasion:1},attackSpeed:2300,critChance:.1,shadeBase:32,rewards:[{type:B,amount:2.4},{type:M,amount:2},{type:R,amount:1.4}],icon:{sprite:"enemyicons",tile:6}},Qe.fish={name:"Fish",scaleBlock:{strength:.9,dexterity:1.1,agility:1.4,endurance:1,recovery:.8,defense:1.2,accuracy:1,armor:1.4,health:1,healthRegen:1,damageMin:1,damageMax:1.1,hit:1,evasion:1.3},attackSpeed:1100,critChance:.17,shadeBase:18,rewards:[{type:M,amount:1.4},{type:D,amount:1.1},{type:I,amount:.8}],icon:{sprite:"enemyicons",tile:7}},Qe.lizard={name:"Lizard",scaleBlock:{strength:1.5,dexterity:1.4,agility:.7,endurance:1.3,recovery:.6,defense:1.4,accuracy:1,armor:1.95,health:1.3,healthRegen:1,damageMin:1.15,damageMax:1.15,hit:1.1,evasion:1.2},attackSpeed:1600,critChance:.14,shadeBase:28,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:13}},Qe.gateguardian={name:"Gate Guardian",scaleBlock:{strength:1.65,dexterity:1.1,agility:.8,endurance:1.5,recovery:1.5,defense:1,accuracy:.6,armor:2.7,health:1.2,healthRegen:1,damageMin:1.2,damageMax:1.3,hit:1,evasion:1},attackSpeed:1900,critChance:.19,shadeBase:40,rewards:[{type:B,amount:1},{type:M,amount:1},{type:R,amount:1},{type:D,amount:1},{type:H,amount:1},{type:I,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.elk={name:"Elk",scaleBlock:{strength:1.1,dexterity:1.5,agility:1.2,endurance:1.2,recovery:.7,defense:1,accuracy:.5,armor:1.6,health:1.15,healthRegen:1,damageMin:1,damageMax:1.2,hit:1,evasion:1},attackSpeed:1500,critChance:.15,shadeBase:20,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:1}},Qe.drake={name:"Drake",scaleBlock:{strength:1.4,dexterity:1.1,agility:1.1,endurance:1.5,recovery:1,defense:1.5,accuracy:1,armor:2,health:1,healthRegen:1,damageMin:1.25,damageMax:1.35,hit:1,evasion:1.2},attackSpeed:1750,critChance:.17,shadeBase:36,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.cactus={name:"Cactus",scaleBlock:{strength:.9,dexterity:1.2,agility:.7,endurance:.9,recovery:1.3,defense:1.4,accuracy:1,armor:2.1,health:1.2,healthRegen:1.5,damageMin:.9,damageMax:1.05,hit:1,evasion:.9},attackSpeed:1400,critChance:.31,shadeBase:24,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:11}},Qe.moss={name:"Moss",scaleBlock:{strength:1.3,dexterity:1.2,agility:1,endurance:1.2,recovery:1.5,defense:1.9,accuracy:1,armor:1.6,health:1,healthRegen:1.5,damageMin:1.1,damageMax:1.2,hit:1,evasion:.9},attackSpeed:1750,critChance:.21,shadeBase:34,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.lion={name:"Lion",scaleBlock:{strength:1.4,dexterity:.9,agility:1.4,endurance:1.5,recovery:1,defense:1.2,accuracy:1.4,armor:1.5,health:1.3,healthRegen:.9,damageMin:1.3,damageMax:1.5,hit:1,evasion:1.1},attackSpeed:2200,critChance:.21,shadeBase:34,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.gnoll={name:"Gnoll",scaleBlock:{strength:1.1,dexterity:1.5,agility:1.2,endurance:1.1,recovery:.5,defense:1.1,accuracy:1.2,armor:2.2,health:1.1,healthRegen:1,damageMin:1.2,damageMax:1.3,hit:1,evasion:1},attackSpeed:1300,critChance:.1,shadeBase:26,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.coyote={name:"Coyote",scaleBlock:{strength:1,dexterity:1.5,agility:1.4,endurance:1,recovery:1,defense:1,accuracy:1.6,armor:1.4,health:1.1,healthRegen:1,damageMin:1.15,damageMax:1.2,hit:1.1,evasion:1},attackSpeed:1200,critChance:.25,shadeBase:26,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}},Qe.catfish={name:"Catfish",scaleBlock:{strength:1.2,dexterity:1.1,agility:1.7,endurance:1,recovery:1,defense:1.2,accuracy:1.3,armor:1.3,health:1,healthRegen:1,damageMin:.95,damageMax:1.2,hit:1.2,evasion:1},attackSpeed:1150,critChance:.27,shadeBase:24,rewards:[{type:M,amount:2},{type:D,amount:1.6},{type:H,amount:1}],icon:{sprite:"enemyicons",tile:9}};class Je{static GetCreatureByName(e,t){var s=new je;return s.setMonsterStats(Qe[e].name,Qe[e].scaleBlock,Qe[e].attackSpeed,Qe[e].critChance,t,Qe[e].shadeBase,Qe[e].rewards,Qe[e].icon),s}}class Ze extends je{constructor(e){super(),this.player=e,this.moonData=new Ke,this.secondWindCooldown=0,this.secondWindDuration=0,this.hitCounter=0,this.encounterCounter=0}rebirth(){this.stats={strength:5+this.moonData.moonperks.str.level,dexterity:5+this.moonData.moonperks.dex.level,agility:5+this.moonData.moonperks.agi.level,endurance:5+this.moonData.moonperks.end.level,recovery:5+this.moonData.moonperks.rec.level,defense:5+this.moonData.moonperks.def.level,accuracy:5+this.moonData.moonperks.acc.level,hit:40,evasion:40,critDamage:1},this.statBonuses={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},this.hitAnim="claws",this.critAnim="clawscrit",this.level=0,this.currentHealth=25,this.attackCooldown=0,this.secondWindCooldown=0,this.secondWindDuration=0,this.hitCounter=0,this.encounterCounter=0}MaxHealth(){var e=this.statBonuses.health+this.Endurance()*W;return e+=this.Endurance()*this.player.getTalentLevel("end"),e+=e*this.player.runeBonuses.healthPercent,Math.floor(e)}Strength(){var e=this.stats.strength+this.statBonuses.strength+this.player.runeBonuses.strFlat;return e*=1+.01*(this.moonData.moonperks.str.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.strPercent,Math.floor(e)}Dexterity(){var e=this.stats.dexterity+this.statBonuses.dexterity+this.player.runeBonuses.dexFlat;return e*=1+.01*(this.moonData.moonperks.dex.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.dexPercent,Math.floor(e)}Agility(){var e=this.stats.agility+this.statBonuses.agility+this.player.runeBonuses.agiFlat;return e*=1+.01*(this.moonData.moonperks.agi.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.agiPercent,Math.floor(e)}Endurance(){var e=this.stats.endurance+this.statBonuses.endurance+this.player.runeBonuses.endFlat;return e*=1+.01*(this.moonData.moonperks.end.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.endPercent,Math.floor(e)}Recovery(){var e=this.stats.recovery+this.statBonuses.recovery+this.player.runeBonuses.recFlat;return e*=1+.01*(this.moonData.moonperks.rec.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.recPercent,Math.floor(e)}Defense(){var e=this.stats.defense+this.statBonuses.defense+this.player.runeBonuses.defFlat;return e*=1+.01*(this.moonData.moonperks.def.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.defPercent,Math.floor(e)}Accuracy(){var e=this.stats.accuracy+this.statBonuses.accuracy+this.player.runeBonuses.accFlat;return e*=1+.01*(this.moonData.moonperks.acc.level+Ke.getInstance().challengePoints),e+=e*this.player.runeBonuses.accPercent,Math.floor(e)}Hit(){var e=this.stats.hit+this.statBonuses.hit+this.Dexterity()*F;return e+=this.Dexterity()*this.player.getTalentLevel("dex"),e*=1+.04*this.player.getTalentLevel("hit"),e+=e*this.player.runeBonuses.hitPercent,Math.floor(e)}Evasion(){var e=this.stats.evasion+this.statBonuses.evasion+this.Agility()*O;return e+=this.Agility()*this.player.getTalentLevel("agi"),e*=1+.04*this.player.getTalentLevel("evasion"),e+=e*this.player.runeBonuses.evaPercent,Math.floor(e)}CritChance(){var e=this.statBonuses.critChance;return e+=.01*this.player.getTalentLevel("crit"),e+=this.player.runeBonuses.critChance,Math.floor(100*e)/100}CritDamage(){var e=.25+this.stats.critDamage+this.statBonuses.critDamage+this.Accuracy()*X;return e+=this.Accuracy()*this.player.getTalentLevel("acc")*.005,e=Math.pow(e,j),e+=e*this.player.runeBonuses.critPercent,Math.floor(100*e)/100}DamageMin(){var e=this.statBonuses.damageMin*(1+Math.pow(this.Strength(),Q+this.player.runeBonuses.weaponScaling)*N)+this.Strength()*G;return e+=this.Strength()*this.player.getTalentLevel("str")*.07*G,e+=this.statBonuses.damageMin*this.player.runeBonuses.weaponPercent,Math.floor(Math.max(1,e))}DamageMax(){var e=this.statBonuses.damageMax*(1+Math.pow(this.Strength(),Q+this.player.runeBonuses.weaponScaling)*N)+this.Strength()*U;return e+=this.Strength()*this.player.getTalentLevel("str")*.07*U,e+=this.statBonuses.damageMax*this.player.runeBonuses.weaponPercent,Math.floor(Math.max(1,e))}HealthRegen(){var e=this.statBonuses.healthRegen+this.Recovery()*Y;return e+=this.Recovery()*this.player.getTalentLevel("rec")*.08*Y,e+=e*this.player.runeBonuses.regenPercent,Math.floor(10*e)/10}Armor(){var e=this.Defense()*q+this.statBonuses.armor*(1+Math.pow(this.Defense(),Q+this.player.runeBonuses.armorScaling)*V);return e+=this.Defense()*this.player.getTalentLevel("def")*.13*q,e+=this.statBonuses.armor*this.player.runeBonuses.armorPercent,Math.floor(e)}AttackSpeed(){return this.attackSpeed/(1+this.player.runeBonuses.baseAttackSpeed)}takeDamage(e,t,s=!1){if(this.player.getTalentLevel("dodge")>0&&(this.hitCounter-=1,this.hitCounter<=0))return this.hitCounter=he-this.player.getTalentLevel("dodge"),0;var i=e;return!0===t&&(i*=Math.pow(.92,this.player.runeBonuses.enemyCrit),i=Math.max(2,i-.05*this.Endurance()*this.player.getTalentLevel("resilient"))),Math.random()<.05*this.player.getTalentLevel("parry")&&(i/=2),Math.random()<=.2&&(i=Math.max(1,i-this.Armor()*(.25*this.player.getTalentLevel("block")))),i=super.takeDamage(i,t,s),this.player.getTalentLevel("secondwind")>0&&this.secondWindCooldown<=0&&this.currentHealth<this.MaxHealth()/2&&(this.secondWindDuration=1e4,this.secondWindCooldown=oe-1e4*this.player.getTalentLevel("secondwind")),this.currentHealth<=0&&this.player.getTalentLevel("defydeath")>0&&this.encounterCounter<=0&&(this.currentHealth=1,this.encounterCounter=le-this.player.getTalentLevel("defydeath")),i}tickRegen(e,t=!0){var s=this.currentHealth,i=1,a=this.HealthRegen();!1===t&&(a+=this.player.runeBonuses.OOCRegen,i=1+.25*this.player.getTalentLevel("quickrecovery")),this.secondWindDuration>0&&(this.secondWindDuration-=e,i*=3),this.currentHealth=Math.min(this.MaxHealth(),this.currentHealth+a*(e/1e3)*i),s!=this.currentHealth&&this._onHealthChanged()}heal(e){this.currentHealth=Math.min(this.MaxHealth(),this.currentHealth+e)}attack(e,t=!1){Math.random()<.05*this.player.getTalentLevel("stun")&&(e.stunTimer=500);var s=this.rollDamage();!0===t&&(s*=this.CritDamage(),Math.random()<.01*this.player.getTalentLevel("doublecrit")*this.CritChance()&&(s*=2));var i=e.takeDamage(s,t);return this.attackCooldown=0,Math.random()<.05*this.player.getTalentLevel("followthrough")&&(this.attackCooldown=this.AttackSpeed()/2),this._onAttackCooldownChanged(),i}cleave(e,t=!1){Math.random()<.05*this.player.getTalentLevel("stun")&&(e.stunTimer=500);var s=this.Strength()*this.player.getTalentLevel("cleave")*.2;return!0===t&&(s*=this.CritDamage(),Math.random()<.01*this.player.getTalentLevel("doublecrit")*this.CritChance()&&(s*=2)),e.takeDamage(s,t)}save(){return{stat:this.stats,ha:this.hitAnim,ca:this.critAnim,chp:this.currentHealth,acd:this.attackCooldown}}load(e,t){this.stats=e.stat,this.hitAnim=e.ha,this.critAnim=e.ca,this.currentHealth=e.chp,this.attackCooldown=e.acd}}var $e={Tyr:{dropRate:30,getBonus:e=>({weaponPercent:.03*e}),Eld:{Tak:{getBonus:e=>({strTalents:e,strPercent:.05*e,weaponScaling:.01*e})}}},Vel:{dropRate:30,getBonus:e=>({evaPercent:.04*e})},El:{dropRate:30,getBonus:e=>({hitPercent:.04*e}),Run:{Est:{getBonus:e=>({dexTalents:e,dexPercent:.05*e,baseAttackSpeed:.05*e})}}},Ley:{dropRate:30,getBonus:e=>({regenPercent:.04*e}),Eld:{Quil:{getBonus:e=>({recTalents:e,recPercent:.05*e,OOCRegen:7*e})}}},Kor:{dropRate:30,getBonus:e=>({armorPercent:.05*e})},Sok:{dropRate:30,getBonus:e=>({critPercent:.05*e}),Ryn:{Zel:{getBonus:e=>({accTalents:e,accPercent:.05*e,critScaling:.01*e})}}},Ber:{dropRate:30,getBonus:e=>({healthPercent:.03*e}),Eld:{Urd:{getBonus:e=>({endTalents:e,endPercent:.05*e,healthPercent:.1*e})}},Zel:{Kor:{getBonus:e=>({healthPercent:.1*e,critChance:.01*e})}},Ryn:{Zel:{Sok:{getBonus:e=>({enemyCrit:e,endPercent:.05*e,accPercent:.05*e})}}}},Eid:{dropRate:30,getBonus:e=>({exploreSpeed:.15*e}),Eld:{getBonus:e=>({friendshipMulti:e})}},Ryn:{dropRate:20,getBonus:e=>({critChance:.01*e})},Eld:{dropRate:20,getBonus:e=>({lootFlat:e}),Rath:{getBonus:e=>({moteChance:.005*e})},Ryn:{getBonus:e=>({lootTalent:5*e})}},Rath:{dropRate:20,getBonus:e=>({shadeFlat:10*e})},Run:{dropRate:20,getBonus:e=>({baseAttackSpeed:.05*e})},Tak:{dropRate:50,getBonus:e=>({strFlat:5*e})},Est:{dropRate:50,getBonus:e=>({dexFlat:5*e})},Lem:{dropRate:50,getBonus:e=>({agiFlat:5*e}),Run:{Vel:{getBonus:e=>({agiTalents:e,agiPercent:.05*e,evaPercent:.1*e})}}},Urd:{dropRate:50,getBonus:e=>({endFlat:5*e})},Lah:{dropRate:50,getBonus:e=>({defFlat:5*e}),Eld:{Kor:{getBonus:e=>({defTalents:e,defPercent:.05*e,armorScaling:.01*e})}}},Quil:{dropRate:50,getBonus:e=>({recFlat:5*e}),Ley:{Lah:{getBonus:e=>({regenOnKill:e})}}},Zel:{dropRate:50,getBonus:e=>({accFlat:5*e})}};class et{static getRuneTexture(e){switch(e){case"Tyr":return{sprite:"runeicons",tile:1};case"Vel":return{sprite:"runeicons",tile:2};case"El":return{sprite:"runeicons",tile:3};case"Ley":return{sprite:"runeicons",tile:4};case"Kor":return{sprite:"runeicons",tile:5};case"Sok":return{sprite:"runeicons",tile:6};case"Ber":return{sprite:"runeicons",tile:7};case"Eid":return{sprite:"runeicons",tile:8};case"Ryn":return{sprite:"runeicons",tile:9};case"Eld":return{sprite:"runeicons",tile:10};case"Rath":return{sprite:"runeicons",tile:11};case"Run":return{sprite:"runeicons",tile:12};case"Tak":return{sprite:"runeicons",tile:13};case"Est":return{sprite:"runeicons",tile:14};case"Lem":return{sprite:"runeicons",tile:15};case"Urd":return{sprite:"runeicons",tile:16};case"Lah":return{sprite:"runeicons",tile:17};case"Quil":return{sprite:"runeicons",tile:18};case"Zel":return{sprite:"runeicons",tile:19}}return{sprite:"runeicons",tile:0}}static getBonusForRune(e){return void 0!==$e[e.word]&&void 0!==$e[e.word].getBonus?$e[e.word].getBonus(e.level):{}}static getUpgradeCost(e){return Math.round((100+200*Math.floor(Math.pow(e.level-1,1.5)))*Math.pow(.93,Ke.getInstance().moonperks.runes3.level))}static getRandomRuneAtLevel(e){var t=Xe.randint(0,670);for(const s in $e){if(t<=$e[s].dropRate)return{word:s,level:e};t-=$e[s].dropRate}return{word:"Tak",level:e}}static getRuneWordsAndBonuses(e){for(var t=[],s=0;s<e.length;){for(var i=-1,a=$e,n=void 0,r=s;r<e.length&&void 0!==a[e[r].word];r++)void 0!==a[e[r].word].getBonus&&(i=r,n=a[e[r].word].getBonus),a=a[e[r].word];if(-1!==i){var o="",h=0;for(r=s;r<=i;r++)o+=e[r].word,h+=e[r].level;h=Math.floor(h/(i-s+1)),t.push({word:o,level:h,bonus:n(h)}),s=i+1}else s+=1}return t}}class tt{constructor(e,t,s,i,a,n){this.tier=t,this.slotType=s,this.name=e,this.statBonuses=i,this.statsPerLevel={critChance:0},this._totalBonuses=i,this.level=0,this.costs=a,this.costsPerLevel=n,this.motesFused=0,this.runes=[],this.compiledRunes=[],this._runeBonuses={};for(const e in this.statBonuses)"critChance"!==e&&(this.statsPerLevel[e]=.25*this.statBonuses[e]);for(var r=0;r<E[t];r++)this.runes.push({word:"Empty",level:0})}bringToLevel(e){for(var t=this.level;t<e;t++){if(t-1>=0)for(const e in this.statBonuses)this.statBonuses[e]+=this.statsPerLevel[e]*Math.ceil((t+1)/5);for(var s=0;s<this.costs.length;s++)this.costs[s]+=this.costsPerLevel[s]*(t+1)}this.level=e,this._calculateStats()}getMotePower(){var e=Ke.getInstance().getMoteSoftCap();return(Math.min(e,this.motesFused)+Math.pow(Math.max(0,this.motesFused-e),re))*ae}_calculateStats(){this._totalBonuses={};var e=1+this.getMotePower();for(const t in this.statBonuses)0!==this.statBonuses[t]&&(this._totalBonuses[t]=this.statBonuses[t]>0?this.statBonuses[t]*e:this.statBonuses[t])}_calculateRuneBonuses(){this.compiledRunes=et.getRuneWordsAndBonuses(this.runes),this._runeBonuses={};for(var e=0;e<this.compiledRunes.length;e++)for(const t in this.compiledRunes[e].bonus)void 0===this._runeBonuses[t]&&(this._runeBonuses[t]=0),this._runeBonuses[t]+=this.compiledRunes[e].bonus[t]}fuseMotes(e){this.motesFused+=e,this._calculateStats()}destroyRune(e){e<0||e>=this.runes.length||(this.runes[e]={word:"Empty",level:0},this._calculateRuneBonuses())}addRune(e,t){t<0||t>=this.runes.length||(this.runes[t]=e,this._calculateRuneBonuses())}getStatBonuses(){return this._totalBonuses}getRuneBonuses(){return this._runeBonuses}save(){return{lv:this.level,mote:this.motesFused,rn:this.runes}}load(e,t){this.motesFused=e.mote,this.runes=void 0===e.rn?[]:e.rn,this.bringToLevel(e.lv),this._calculateRuneBonuses()}}class st{constructor(){return st.instance||(this.gear=[],this._initGear(),st.instance=this),st.instance}static getInstance(){return st.instance?st.instance:new st}save(){for(var e=[],t=0;t<this.gear.length;t++)e.push(this.gear[t].save());return{gear:e,ta:this.tiersAvailable}}load(e,t){for(var s=0;s<e.gear.length;s++)this.gear[s].load(e.gear[s],t);this.tiersAvailable=e.ta}rebirth(){this._initGear()}getGearByName(e){for(var t=0;t<this.gear.length;t++)if(this.gear[t].name===e)return this.gear[t]}_isEquipedItem(e){switch(e.slotType){case S:return void 0!==at.getInstance().weapon&&e.name===at.getInstance().weapon.name;case _:return void 0!==at.getInstance().armor&&e.name===at.getInstance().armor.name;case P:return void 0!==at.getInstance().trinket&&e.name===at.getInstance().trinket.name}}upgradeGear(e){for(var t=at.getInstance(),s=e.tier<=0?1:t.craftingCosts[e.tier-1],i=[],a=0;a<e.costs.length;a++)i.push(e.costs[a]*s);!1!==Xe.canCraft(i,t.resources[Math.max(0,e.tier-1)])&&(t.spendResource(i,Math.max(0,e.tier-1)),this._isEquipedItem(e)?(t.unequip(e.slotType),e.bringToLevel(e.level+1),t.equip(e)):e.bringToLevel(e.level+1))}fuseGear(e,t){var s=at.getInstance();this._isEquipedItem(e)?(s.unequip(e.slotType),e.fuseMotes(t),s.equip(e)):e.fuseMotes(t),s.addMote(-t)}_initGear(){this.gear=[],this.tiersAvailable=0;var e={health:0,damageMin:1,damageMax:1,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,0,0,0,0,0],s=[5,0,10,0,0,0];this.gear.push(new tt("Broken Sword",0,S,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:1},t=[0,0,0,0,0,0],s=[0,10,0,5,0,0];this.gear.push(new tt("Old Leathers",0,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:1,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,0,0,0,0,0],s=[10,0,0,0,5,0];this.gear.push(new tt("Barrel Lid",0,P,e,t,s)),this.gear[0].bringToLevel(1),this.gear[1].bringToLevel(1),this.gear[2].bringToLevel(1);e={health:0,damageMin:2,damageMax:4,strength:0,dexterity:1,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:.05,healthRegen:0,armor:0},t=[10,0,25,5,0,0],s=[6,0,15,4,0,5];this.gear.push(new tt("Iron Sword",1,S,e,t,s));e={health:0,damageMin:1,damageMax:5,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:.05,critChance:.07,healthRegen:0,armor:0},t=[20,0,15,5,0,0],s=[13,0,9,3,0,5];this.gear.push(new tt("Iron Axe",1,S,e,t,s));e={health:0,damageMin:1,damageMax:2.75,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:15,evasion:5,critDamage:0,critChance:.15,healthRegen:0,armor:0},t=[5,0,20,10,0,5],s=[3,0,14,8,0,5];this.gear.push(new tt("Dagger",1,S,e,t,s));e={health:0,damageMin:3,damageMax:5.25,strength:1,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:-15,evasion:0,critDamage:0,critChance:.05,healthRegen:0,armor:0},t=[10,10,0,0,0,20],s=[8,8,0,0,0,14];this.gear.push(new tt("Crystal Hammer",1,S,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:6,evasion:12,critDamage:0,critChance:0,healthRegen:0,armor:1},t=[0,10,0,30,0,0],s=[0,5,0,20,0,5];this.gear.push(new tt("Cloak",1,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:1.5,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:2},t=[0,30,0,10,0,0],s=[0,20,0,5,0,5];this.gear.push(new tt("Hide Armor",1,_,e,t,s));e={health:7,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:-7,critDamage:0,critChance:0,healthRegen:0,armor:3},t=[0,10,30,0,0,0],s=[0,5,20,0,0,5];this.gear.push(new tt("Half Plate",1,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:2,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:1},t=[30,0,10,0,0,0],s=[17,0,10,0,0,8];this.gear.push(new tt("Wooden Shield",1,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:.4,armor:0},t=[0,0,10,0,25,5],s=[0,0,7,0,20,8];this.gear.push(new tt("Warm Stone",1,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:1.3,agility:1.3,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:.05,healthRegen:0,armor:0},t=[0,20,0,10,0,10],s=[0,15,0,7,0,13];this.gear.push(new tt("Wolf-Tooth Necklace",1,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:1.45,hit:15,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,15,0,20,0,5],s=[0,10,0,17,0,8];this.gear.push(new tt("Gloves",1,P,e,t,s));e={health:0,damageMin:10,damageMax:18,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:-30,evasion:40,critDamage:0,critChance:.12,healthRegen:0,armor:0},t=[25,0,25,0,0,0],s=[14,0,14,0,0,7];this.gear.push(new tt("Great Spear",2,S,e,t,s));e={health:0,damageMin:7,damageMax:14,strength:1.5,dexterity:4,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:.12,healthRegen:0,armor:0},t=[15,0,25,10,0,0],s=[9,0,14,5,0,7];this.gear.push(new tt("Steel Sword",2,S,e,t,s));e={health:0,damageMin:6,damageMax:10,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:50,evasion:0,critDamage:.1,critChance:.17,healthRegen:0,armor:0},t=[5,0,20,15,0,10],s=[4,0,15,9,0,7];this.gear.push(new tt("Hunting Dagger",2,S,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:30,evasion:65,critDamage:0,critChance:0,healthRegen:0,armor:4},t=[0,15,0,35,0,0],s=[0,9,0,19,0,7];this.gear.push(new tt("Thief Garb",2,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:4,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:6},t=[0,35,0,15,0,0],s=[0,19,0,9,0,7];this.gear.push(new tt("Hunting Leathers",2,_,e,t,s));e={health:20,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:-35,critDamage:0,critChance:0,healthRegen:0,armor:8},t=[0,0,35,15,0,0],s=[0,0,19,9,0,7];this.gear.push(new tt("Full Plate",2,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:2,recovery:0,defense:4,accuracy:5,hit:0,evasion:0,critDamage:0,critChance:.03,healthRegen:0,armor:0},t=[0,10,0,0,30,10],s=[0,8,0,0,22,10];this.gear.push(new tt("Lucky Rock",2,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:4,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:40,critDamage:0,critChance:0,healthRegen:0,armor:1},t=[0,30,0,15,0,5],s=[0,19,0,11,0,10];this.gear.push(new tt("Boots of Speed",2,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:6,accuracy:0,hit:-19,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:1.5},t=[0,15,0,10,25,0],s=[0,8,0,6,16,10];this.gear.push(new tt("Heavy Bracers",2,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:3,dexterity:3,agility:3,endurance:3,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,10,25,0,0,15],s=[0,8,17,0,0,15];this.gear.push(new tt("Adventurer's Medallion",2,P,e,t,s));e={health:0,damageMin:24,damageMax:50,strength:0,dexterity:0,agility:5,endurance:0,recovery:6,defense:0,accuracy:0,hit:-37,evasion:48,critDamage:.15,critChance:.14,healthRegen:0,armor:0},t=[0,10,35,0,20,0],s=[0,7,17,0,11,10];this.gear.push(new tt("Thunder Spear",3,S,e,t,s));e={health:0,damageMin:23,damageMax:38,strength:0,dexterity:6,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:57,evasion:0,critDamage:0,critChance:.14,healthRegen:0,armor:0},t=[15,0,40,0,0,10],s=[8,0,22,0,0,15];this.gear.push(new tt("Ardent Blade",3,S,e,t,s));e={health:0,damageMin:17,damageMax:24,strength:8,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:76,evasion:0,critDamage:.1,critChance:.17,healthRegen:0,armor:0},t=[0,25,25,15,0,0],s=[0,15,15,5,0,10];this.gear.push(new tt("Dire Claw",3,S,e,t,s));e={health:0,damageMin:2,damageMax:3.75,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:170,critDamage:0,critChance:0,healthRegen:0,armor:11},t=[0,20,0,45,0,0],s=[0,10,0,25,0,10];this.gear.push(new tt("Assassin Cloak",3,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:4,recovery:7,defense:0,accuracy:0,hit:100,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:16},t=[0,45,0,20,0,0],s=[0,25,0,10,0,10];this.gear.push(new tt("Beastmaster Vest",3,_,e,t,s));e={health:43,damageMin:0,damageMax:0,strength:4,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:-36,evasion:-144,critDamage:0,critChance:0,healthRegen:0,armor:22},t=[0,20,45,0,0,0],s=[0,10,25,0,0,10];this.gear.push(new tt("Lizardscale Armor",3,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:9,agility:0,endurance:0,recovery:0,defense:0,accuracy:6,hit:0,evasion:0,critDamage:0,critChance:.07,healthRegen:0,armor:0},t=[0,40,0,15,0,10],s=[0,27,0,10,0,13];this.gear.push(new tt("Wolf Gloves",3,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:211,evasion:33,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,0,0,0,35,30],s=[0,0,0,0,24,26];this.gear.push(new tt("Hyperstone",3,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:10,accuracy:0,hit:0,evasion:-54,critDamage:0,critChance:0,healthRegen:0,armor:5},t=[15,10,40,0,0,0],s=[9,6,22,0,0,13];this.gear.push(new tt("Tower Shield",3,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:10,dexterity:0,agility:0,endurance:6,recovery:0,defense:0,accuracy:0,hit:-38,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:0},t=[0,35,0,20,10,0],s=[0,18,0,13,6,13];this.gear.push(new tt("Ogre Belt",3,P,e,t,s));e={health:0,damageMin:47,damageMax:97,strength:13,dexterity:0,agility:0,endurance:5,recovery:0,defense:0,accuracy:0,hit:-74,evasion:0,critDamage:0,critChance:.16,healthRegen:0,armor:0},t=[0,10,35,0,20,0],s=[0,7,17,0,11,10];this.gear.push(new tt("Giant's Axe",4,S,e,t,s));e={health:0,damageMin:46,damageMax:73,strength:0,dexterity:0,agility:9,endurance:0,recovery:0,defense:0,accuracy:0,hit:147,evasion:0,critDamage:.18,critChance:.17,healthRegen:0,armor:0},t=[15,0,40,0,0,10],s=[8,0,22,0,0,15];this.gear.push(new tt("Elven Longsword",4,S,e,t,s));e={health:0,damageMin:39,damageMax:54,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:9,hit:230,evasion:0,critDamage:0,critChance:.19,healthRegen:3,armor:0},t=[0,25,25,15,0,0],s=[0,15,15,5,0,10];this.gear.push(new tt("Sacrificial Dagger",4,S,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:8,agility:8,endurance:0,recovery:0,defense:8,accuracy:0,hit:0,evasion:190,critDamage:0,critChance:0,healthRegen:0,armor:20},t=[0,20,0,45,0,0],s=[0,10,0,25,0,10];this.gear.push(new tt("Spellweave Robe",4,_,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:11,dexterity:0,agility:0,endurance:0,recovery:8,defense:0,accuracy:0,hit:100,evasion:0,critDamage:0,critChance:0,healthRegen:0,armor:29},t=[0,45,0,20,0,0],s=[0,25,0,10,0,10];this.gear.push(new tt("Dire Bear Cloak",4,_,e,t,s));e={health:68,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:13,accuracy:0,hit:-50,evasion:-210,critDamage:0,critChance:0,healthRegen:0,armor:38},t=[0,20,45,0,0,0],s=[0,10,25,0,0,10];this.gear.push(new tt("Ancient Armor",4,_,e,t,s));e={health:-24,damageMin:0,damageMax:0,strength:15,dexterity:15,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:.25,critChance:0,healthRegen:-1.3,armor:0},t=[0,40,0,15,0,10],s=[0,27,0,10,0,13];this.gear.push(new tt("Demonic Sigil",4,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:10,accuracy:7,hit:0,evasion:-60,critDamage:0,critChance:0,healthRegen:0,armor:8},t=[0,0,0,0,35,30],s=[0,0,0,0,24,26];this.gear.push(new tt("Mirror Shield",4,P,e,t,s));e={health:0,damageMin:7.5,damageMax:10.5,strength:0,dexterity:0,agility:0,endurance:0,recovery:0,defense:0,accuracy:0,hit:0,evasion:0,critDamage:0,critChance:0,healthRegen:1,armor:0},t=[15,10,40,0,0,0],s=[9,6,22,0,0,13];this.gear.push(new tt("Dragonbone Charm",4,P,e,t,s));e={health:0,damageMin:0,damageMax:0,strength:0,dexterity:9,agility:9,endurance:5,recovery:0,defense:0,accuracy:5,hit:0,evasion:0,critDamage:0,critChance:.05,healthRegen:0,armor:0},t=[0,35,0,20,10,0],s=[0,18,0,13,6,13];this.gear.push(new tt("Spirit Ring",4,P,e,t,s))}}class it{constructor(){return it.instance||(this.minGateRegion=0,this.regionSize=[9,11],this.regionDifficultyIncrease=20,this.maxGearTier=8,this.maxResourceTier=8,this.buildingsAllowed=!0,this.gearAllowed=!0,this.gearCostMulti=1,this.maxRunTime=-1,this.exploreSpeed=1,this.talentsEnabled=!0,this.challengeName="",this.startingTraits=0,this.fixedTraits=[],it.instance=this),it.instance}static getInstance(){return it.instance?it.instance:new it}reset(){this.minGateRegion=0,this.regionSize=[9,11],this.regionDifficultyIncrease=20,this.maxGearTier=8,this.maxResourceTier=8,this.buildingsAllowed=!0,this.gearAllowed=!0,this.gearCostMulti=1,this.maxRunTime=-1,this.exploreSpeed=1,this.talentsEnabled=!0,this.challengeName="",this.startingTraits=0,this.fixedTraits=[]}setupChallenge(e){switch(this.reset(),this.challengeName=e.name,e.name){case"A Matter of Years":this.minGateRegion=1,this.maxRunTime=qe*(9-2*e.completions);break;case"Forged Ahead":this.minGateRegion=1,this.gearCostMulti=10+10*e.completions;break;case"Giant Lands":this.regionSize=[5,7],this.minGateRegion=e.completions,this.exploreSpeed=.04,this.fixedTraits=[{type:Be,level:2+2*e.completions}];break;case"Lazy Townsfolk":this.minGateRegion=2+e.completions,this.buildingsAllowed=!1;break;case"Talentless":this.minGateRegion=2+e.completions,this.talentsEnabled=!1;break;case"Mega Monsters":this.minGateRegion=3+e.completions,this.startingTraits=4+2*e.completions}}save(){return{mgr:this.minGateRegion,rs:this.regionSize,rdi:this.regionDifficultyIncrease,mgt:this.maxGearTier,mrt:this.maxResourceTier,ba:this.buildingsAllowed,ga:this.gearAllowed,gcm:this.gearCostMulti,mrun:this.maxRunTime,es:this.exploreSpeed,te:this.talentsEnabled,cn:this.challengeName,st:this.startingTraits,ft:this.fixedTraits}}load(e){this.minGateRegion=e.mgr,this.regionSize=e.rs,this.regionDifficultyIncrease=e.rdi,this.maxGearTier=e.mgt,this.maxResourceTier=e.mrt,this.buildingsAllowed=e.ba,this.gearAllowed=e.ga,this.gearCostMulti=e.gcm,this.maxRunTime=e.mrun,this.exploreSpeed=e.es,this.talentsEnabled=e.te,this.challengeName=e.cn,this.startingTraits=e.st,this.fixedTraits=e.ft}}class at{constructor(){return at.instance||(this.statBlock=new Ze(this),this.statChangedHandlers=[],this.resourceChangedHandlers=[],this.talentChangedHandlers=[],this._init(),at.instance=this),at.instance}static getInstance(){return at.instance?at.instance:new at}_init(){this.shade=0,this.statPoints=3,this.talentPoints=Ke.getInstance().challenges.talent.completions,this.statLevel=1,this.talentLevel=1,this.nextStatCost=$,this.nextTalentCost=se,this.resources=[[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],this.craftingCosts=[1,1,1,1,1,1,1,1];for(var e=0;e<this.craftingCosts.length;e++)this.craftingCosts[e]=this.craftingCosts[e]*it.getInstance().gearCostMulti,this.craftingCosts[e]=this.craftingCosts[e]*Math.pow(.925,Ke.getInstance().challenges.forge.completions);this.resourceTierReached=0,this.gold=0,this.motes=0,this.challengeExploreMulti=1+.25*Ke.getInstance().challenges.explore.completions,this.weapon=void 0,this.armor=void 0,this.trinket=void 0,this.talents={str:{name:"Strength",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:0}},dex:{name:"Dexterity",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:1}},agi:{name:"Agility",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:2}},end:{name:"Endurance",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:3}},rec:{name:"Recovery",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:4}},def:{name:"Defense",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:5}},acc:{name:"Accuracy",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:6}},cleave:{name:"Cleave",level:0,maxLevel:5,requires:["str"],texture:{sprite:"icons",tile:8}},hit:{name:"Hit",level:0,maxLevel:-1,requires:["dex"],texture:{sprite:"icons",tile:9}},evasion:{name:"Evasion",level:0,maxLevel:-1,requires:["agi"],texture:{sprite:"icons",tile:10}},resilient:{name:"Resilient",level:0,maxLevel:10,requires:["end"],texture:{sprite:"icons",tile:11}},quickrecovery:{name:"Quick Recovery",level:0,maxLevel:12,requires:["rec"],texture:{sprite:"icons",tile:12}},block:{name:"Block",level:0,maxLevel:12,requires:["def"],texture:{sprite:"icons",tile:13}},crit:{name:"Critical",level:0,maxLevel:15,requires:["acc"],texture:{sprite:"icons",tile:14}},stun:{name:"Stunning Hit",level:0,maxLevel:5,requires:["cleave"],texture:{sprite:"icons",tile:16}},followthrough:{name:"Follow Through",level:0,maxLevel:5,requires:["hit"],texture:{sprite:"icons",tile:17}},dodge:{name:"Dodge",level:0,maxLevel:5,requires:["evasion"],texture:{sprite:"icons",tile:18}},defydeath:{name:"Defy Death",level:0,maxLevel:5,requires:["resilient"],texture:{sprite:"icons",tile:19}},secondwind:{name:"Second Wind",level:0,maxLevel:5,requires:["quickrecovery"],texture:{sprite:"icons",tile:20}},parry:{name:"Parry",level:0,maxLevel:5,requires:["block"],texture:{sprite:"icons",tile:21}},doublecrit:{name:"Double Crit",level:0,maxLevel:5,requires:["crit"],texture:{sprite:"icons",tile:22}},bounty:{name:"Bounty",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:7}},explorer:{name:"Explorer",level:0,maxLevel:-1,requires:[],texture:{sprite:"icons",tile:15}},guardian:{name:"Guardian",level:0,maxLevel:5,requires:[],texture:{sprite:"icons",tile:39}},governance:{name:"Governance",level:0,maxLevel:10,requires:[],texture:{sprite:"icons",tile:38}}},this.runeBonuses={strPercent:0,strFlat:0,strTalents:0,dexPercent:0,dexFlat:0,dexTalents:0,agiPercent:0,agiFlat:0,agiTalents:0,endPercent:0,endFlat:0,endTalents:0,recPercent:0,recFlat:0,recTalents:0,defPercent:0,defFlat:0,defTalents:0,accPercent:0,accFlat:0,accTalents:0,hitPercent:0,evaPercent:0,regenPercent:0,weaponPercent:0,armorPercent:0,critPercent:0,healthPercent:0,weaponScaling:0,armorScaling:0,baseAttackSpeed:0,OOCRegen:0,enemyCrit:0,exploreSpeed:0,friendshipMulti:0,critChance:0,lootFlat:0,lootTalent:0,moteChance:0,shadeFlat:0,regenOnKill:0},this.runes=[]}rebirth(){this.statBlock.rebirth(),this._init()}increaseStat(e,t){var s=Math.min(this.statPoints,t);if(0!=s){switch(this.statPoints-=s,e){case"str":this.statBlock.stats.strength+=s;break;case"dex":this.statBlock.stats.dexterity+=s;break;case"agi":this.statBlock.stats.agility+=s;break;case"end":this.statBlock.stats.endurance+=s;break;case"rec":this.statBlock.stats.recovery+=s;break;case"def":this.statBlock.stats.defense+=s;break;case"acc":this.statBlock.stats.accuracy+=s}this._onStatChanged()}}_onStatChanged(){for(var e=0;e<this.statChangedHandlers.length;e++)this.statChangedHandlers[e]()}_onResourcesChanged(){for(var e=0;e<this.resourceChangedHandlers.length;e++)this.resourceChangedHandlers[e]()}_onTalentChanged(){for(var e=0;e<this.talentChangedHandlers.length;e++)this.talentChangedHandlers[e]()}registerEvent(e,t){"onStatChanged"===e?this.statChangedHandlers.push(t):"onResourcesChanged"===e?this.resourceChangedHandlers.push(t):"onTalentChanged"===e&&this.talentChangedHandlers.push(t)}earnableMoonlight(e){return Ke.getMoonlightEarned(this.statLevel-1+3*(this.talentLevel-1),e)}getExploreMulti(){return(1+this.runeBonuses.exploreSpeed+.2*this.talents.explorer.level)*(1+z*Math.pow(this.statBlock.Agility(),K))*this.challengeExploreMulti}getStatCost(e){for(var t=0,s=0;s<e;s++)t+=$+ee*(this.statLevel-1+s);return t}getTalentCost(e){for(var t=0,s=.008*Ke.getInstance().challenges.talent.completions,i=0;i<e;i++)t+=se*Math.pow(ie-s,this.talentLevel-1+i);return t}getTalentLevel(e){if(void 0===this.talents[e])return 0;switch(e){case"str":case"cleave":case"stun":return this.talents[e].level+this.runeBonuses.strTalents;case"dex":case"hit":case"followthrough":return this.talents[e].level+this.runeBonuses.dexTalents;case"agi":case"evasion":case"dodge":return this.talents[e].level+this.runeBonuses.agiTalents;case"end":case"resilient":case"defydeath":return this.talents[e].level+this.runeBonuses.endTalents;case"rec":case"quickrecovery":case"secondwind":return this.talents[e].level+this.runeBonuses.recTalents;case"def":case"block":case"parry":return this.talents[e].level+this.runeBonuses.defTalents;case"acc":case"crit":case"doublecrit":return this.talents[e].level+this.runeBonuses.accTalents;case"bounty":return this.talents[e].level+this.runeBonuses.lootTalent}return this.talents[e].level}buyStat(e){for(var t=0;t<e;t++)this.statPoints+=te,this.shade-=this.nextStatCost,this.nextStatCost=$+ee*this.statLevel,this.statLevel+=1}buyTalent(e){for(var t=Ke.getInstance().challenges.talent.completions>0?.02:0,s=0;s<e;s++)this.talentPoints+=1,this.shade-=this.nextTalentCost,this.nextTalentCost=se*Math.pow(ie-t,this.talentLevel),this.talentLevel+=1;this._onTalentChanged()}levelTalent(e){(e.level<e.maxLevel||-1===e.maxLevel)&&(e.level+=1,this.talentPoints-=1,this._onTalentChanged())}addResource(e,t){this.resourceTierReached=Math.max(this.resourceTierReached,t);for(var s=0;s<e.length;s++)this.resources[t][s]+=e[s];this._onResourcesChanged()}spendResource(e,t){for(var s=0;s<e.length;s++)this.resources[t][s]=Math.max(0,this.resources[t][s]-e[s]);this._onResourcesChanged()}addGold(e){var t=new ut;this.gold=Math.min(t.getGoldCap(),this.gold+e),this._onResourcesChanged()}addMote(e){this.motes+=e,this._onResourcesChanged()}addRune(e){this.runes.push(e)}removeRune(e){e<0||e>=this.runes.length||this.runes.splice(e,1)}equip(e){switch(e.slotType){case S:void 0!==this.weapon&&this.unequip(S),this.weapon=e,this.statBlock.equip(this.weapon);break;case _:void 0!==this.armor&&this.unequip(_),this.armor=e,this.statBlock.equip(this.armor);break;case P:void 0!==this.trinket&&this.unequip(P),this.trinket=e,this.statBlock.equip(this.trinket)}var t=e.getRuneBonuses();for(const e in t)this.runeBonuses[e]+=t[e];this._onStatChanged()}unequip(e){var t={};switch(e){case S:this.statBlock.unequip(this.weapon),t=this.weapon.getRuneBonuses(),this.weapon=void 0;break;case _:this.statBlock.unequip(this.armor),t=this.armor.getRuneBonuses(),this.armor=void 0;break;case P:this.statBlock.unequip(this.trinket),t=this.trinket.getRuneBonuses(),this.trinket=void 0}for(const e in t)this.runeBonuses[e]-=t[e];this._onStatChanged()}applyForgeUpgrade(e){for(var t=0;t<e;t++)this.craftingCosts[t]=this.craftingCosts[t]*Ge}save(){return{stats:this.statBlock.save(),shade:this.shade,sp:this.statPoints,tp:this.talentPoints,spl:this.statLevel,tpl:this.talentLevel,nsp:this.nextStatCost,ntp:this.nextTalentCost,res:this.resources,rtr:this.resourceTierReached,crf:this.craftingCosts,gold:this.gold,mote:this.motes,talents:this.talents,runes:this.runes,w:void 0===this.weapon?"":this.weapon.name,a:void 0===this.armor?"":this.armor.name,t:void 0===this.trinket?"":this.trinket.name}}load(e,t){this.statBlock.load(e.stats,t),this.shade=e.shade,this.statPoints=e.sp,this.talentPoints=e.tp,this.statLevel=e.spl,this.talentLevel=e.tpl,this.nextStatCost=e.nsp,this.nextTalentCost=e.ntp,this.resources=e.res,this.resourceTierReached=e.rtr,this.craftingCosts=e.crf,this.gold=e.gold,this.motes=e.mote,this.talents=e.talents,this.runes=void 0===e.runes?[]:e.runes;var s=st.getInstance();""!==e.w&&this.equip(s.getGearByName(e.w)),""!==e.a&&this.equip(s.getGearByName(e.a)),""!==e.t&&this.equip(s.getGearByName(e.t))}}class nt{static getTechGoldCost(e,t){var s=e.level,i=e.goldCosts[0],a=s*e.goldCosts[1],n=Math.pow(s*e.goldCosts[2],ve),r=Math.pow(ye,t-1);return 5*Math.floor((i+a+n)/5*r)}static getTechResourceCost(e,t){for(var s=e.level,i=[],a=0;a<e.resources.length;a++){var n=e.resources[a][0],r=s*e.resources[a][1],o=Math.pow(s*e.resources[a][2],ve),h=Math.pow(ye,t-1);i.push(5*Math.floor((n+r+o)/5*h))}return i}constructor(e){var t=new Ke;this.currentPopulation=50,this.maxPopulation=100,this.tavernPopulation=0,this.tier=e,this.economyMulti=1,this.bountyMulti=1,this.productionMulti=1,this.exploreMulti=1,this.townDefenseBonus=0,this.goldCapBonus=100*t.moonperks.heropouch.level,this.baseIncome=de+.1*t.moonperks.vault.level,this.buildingIncome=0,this.townExplored=!1,this.researchEnabled=!1,this.alchemyEnabled=!1,this.friendship=0,this.friendshipLevel=0,this.friendshipToNext=25,this.buildings={forge:{name:"Forge",level:0,maxLevel:-1,requires:[],goldCosts:[50,25,15],resources:[[0,0,0],[0,0,0],[10,10,5],[0,0,0],[10,10,5],[0,0,0]]},guilds:{name:"Guilds",level:0,maxLevel:-1,requires:[],goldCosts:[100,50,25],resources:[[0,0,0],[10,10,5],[0,0,0],[10,10,5],[0,0,0],[10,10,5]]},townhall:{name:"Town Hall",level:0,maxLevel:-1,requires:[],goldCosts:[50,30,15],resources:[[15,10,8],[0,0,0],[0,0,0],[0,0,0],[10,10,5],[0,0,0]]}},this.upgrades={reinforcedhouses:{name:"Reinforced Houses",level:0,maxLevel:5,requires:[],goldCosts:[75,75,40],resources:[[0,0,0],[0,0,0],[20,20,10],[0,0,0],[40,40,20],[0,0,0]]},banking:{name:"Banking",level:0,maxLevel:-1,requires:[],goldCosts:[20,20,15],resources:[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[15,15,8],[10,10,5]]},mapmaking:{name:"Map Making",level:0,maxLevel:-1,requires:[],goldCosts:[25,25,15],resources:[[0,0,0],[10,10,5],[0,0,0],[5,5,5],[0,0,0],[0,0,0]]},tavern:{name:"Tavern",level:0,maxLevel:3,requires:[],goldCosts:[250,150,50],resources:[[150,150,40],[0,0,0],[0,0,0],[0,0,0],[100,100,35],[0,0,0]]},market:{name:"Market",level:0,maxLevel:3,requires:[],goldCosts:[400,250,60],resources:[[150,150,30],[75,75,30],[0,0,0],[75,75,30],[100,100,35],[75,75,30]]}}}increaseTechLevel(e){switch(e.level+=1,e.name){case"Forge":for(var t=new at,s=0;s<this.tier;s++)t.craftingCosts[s]=t.craftingCosts[s]*Ge;break;case"Guilds":this.productionMulti+=.1;break;case"Town Hall":this.bountyMulti+=.1;break;case"Reinforced Houses":this.townDefenseBonus+=1,ut.getInstance().getCurrentRegion().handleReinforcedHouses();break;case"Banking":this.economyMulti+=.05,this.goldCapBonus+=50;break;case"Map Making":this.exploreMulti+=.1}}increaseMaxPop(e){this.maxPopulation+=e}calculateEconMulti(e){this.economyMulti=1+e+.05*this.upgrades.banking.level}getTownIncome(){var e=new at;return(Math.floor(this.currentPopulation)*this.baseIncome+this.buildingIncome)*this.economyMulti*(1+.04*e.getTalentLevel("governance"))}getGoldCap(){var e=new at;return(this.currentPopulation*pe+this.goldCapBonus)*this.economyMulti*(1+.04*e.getTalentLevel("governance"))}getMaxPopulation(){return this.maxPopulation+this.tavernPopulation}getMarketLevel(){return this.upgrades.market.level}getTavernLevel(){return this.upgrades.tavern.level}setTavernPopulation(e){this.tavernPopulation=e}addFriendship(e){this.friendship+=e,this.friendship>=this.friendshipToNext&&(this.friendshipLevel+=1,this._calcFriendshipToNext())}getFriendshipBonus(){return 1+this.friendshipLevel*fe}_calcFriendshipToNext(){this.friendshipToNext=we+Math.floor(Math.pow(this.friendshipLevel*ke,xe)/ke)*ke}endOfDay(){}endOfWeek(){!0===this.townExplored&&(this.currentPopulation=Math.min(this.getMaxPopulation(),this.currentPopulation*ue),at.getInstance().addGold(this.getTownIncome()))}save(){var e=[];for(const t in this.buildings)e.push([t,this.buildings[t].level]);var t=[];for(const e in this.upgrades)t.push([e,this.upgrades[e].level]);return{cp:this.currentPopulation,mp:this.maxPopulation,t:this.tier,em:this.economyMulti,bm:this.bountyMulti,pm:this.productionMulti,exm:this.exploreMulti,bi:this.baseIncome,bld:e,up:t,gc:this.goldCapBonus,te:this.townExplored,re:this.researchEnabled,fr:this.friendship,frl:this.friendshipLevel,alc:this.alchemyEnabled}}load(e,t){this.currentPopulation=e.cp,this.maxPopulation=e.mp,this.tier=e.t,this.economyMulti=e.em,this.bountyMulti=e.bm,this.productionMulti=e.pm,this.exploreMulti=e.exm,this.baseIncome=e.bi,this.goldCapBonus=e.gc,this.townExplored=e.te,this.researchEnabled=e.re,this.friendship=e.fr,this.friendshipLevel=e.frl,this.alchemyEnabled=e.alc,this._calcFriendshipToNext();for(var s=0;s<e.bld.length;s++)this.buildings[e.bld[s][0]].level=e.bld[s][1];for(s=0;s<e.up.length;s++)this.upgrades[e.up[s][0]].level=e.up[s][1]}}var rt={TILE_TYPES:{mountain:{name:"Mountains",enemies:["wolf","bear","goblin","formation"],clr:[140,110,0],explorationNeeded:3e4,yields:[{type:B,rate:1.25},{type:R,rate:2.25},{type:H,rate:1.5},{type:I,rate:1}]},drakemountain:{name:"Drake Mountains",enemies:["wolf","bear","goblin","formation","drake"],clr:[130,30,30],explorationNeeded:23500,yields:[{type:R,rate:2.25},{type:H,rate:2.25},{type:I,rate:1.5}]},forest:{name:"Forest",enemies:["wolf","bear","plant","bloom","slime","goblin"],clr:[0,160,0],explorationNeeded:14e3,yields:[{type:B,rate:1.75},{type:M,rate:1.25},{type:D,rate:1.5}]},wode:{name:"Wode",enemies:["wolf","bear","plant","bloom","slime","elk"],clr:[0,130,30],explorationNeeded:17500,yields:[{type:B,rate:2.25},{type:M,rate:1},{type:D,rate:1.5},{type:I,rate:.6}]},ancientforest:{name:"Ancient Forest",enemies:["bear","moss","plant","elk","bloom"],clr:[0,90,0],explorationNeeded:22e3,yields:[{type:B,rate:2.5},{type:D,rate:1.25},{type:H,rate:1},{type:I,rate:1}]},plains:{name:"Plains",enemies:["slime","goblin","lizard","bloom"],clr:[20,220,20],explorationNeeded:9e3,yields:[{type:B,rate:.9},{type:M,rate:2.5},{type:D,rate:1.25},{type:H,rate:.75}]},savanna:{name:"Savanna",enemies:["gnoll","lion","coyote","lizard","bloom"],clr:[190,190,60],explorationNeeded:15e3,yields:[{type:B,rate:.75},{type:M,rate:1.5},{type:D,rate:2},{type:H,rate:1.25}]},desert:{name:"Desert",enemies:["formation","coyote","slime","cactus"],clr:[220,190,140],explorationNeeded:13500,yields:[{type:B,rate:.75},{type:H,rate:1.75},{type:I,rate:2}]},hills:{name:"Hills",enemies:["slime","goblin","lizard","bloom","formation"],clr:[130,190,50],explorationNeeded:12500,yields:[{type:M,rate:1},{type:H,rate:2.75},{type:I,rate:.75}]},plateau:{name:"Plateau",enemies:["elk","goblin","lizard","cactus","wolf"],clr:[200,120,40],explorationNeeded:13500,yields:[{type:M,rate:3},{type:H,rate:2},{type:D,rate:.75}]},lake:{name:"Lake",enemies:["whale","slime","bear","fish"],clr:[20,40,170],explorationNeeded:25500,yields:[]},oasis:{name:"Oasis",enemies:["catfish","fish","coyote","cactus"],clr:[0,140,190],explorationNeeded:17e3,yields:[]},swamp:{name:"Swamp",enemies:["lizard","slime","goblin","bloom"],clr:[0,110,90],explorationNeeded:20500,yields:[{type:B,rate:1},{type:M,rate:1.5},{type:D,rate:2.25},{type:I,rate:.7}]},town:{name:"Town",enemies:["wolf"],clr:[230,230,230],explorationNeeded:10,yields:[]},mysticgate:{name:"Mystic Gate",enemies:["gateguardian"],clr:[153,50,204],explorationNeeded:3e4,yields:[]}},REGION_TYPES:{temperate:{name:"Temperate",points:[{terrain:"mountain",power:[7,12],amount:2},{terrain:"mountain",power:[3,7],amount:3},{terrain:"forest",power:[6,11],amount:2},{terrain:"forest",power:[4,9],amount:1},{terrain:"wode",power:[5,10],amount:2},{terrain:"wode",power:[3,8],amount:2},{terrain:"plains",power:[4,9],amount:5},{terrain:"lake",power:[4,9],amount:3},{terrain:"swamp",power:[3,8],amount:2},{terrain:"swamp",power:[5,10],amount:1},{terrain:"hills",power:[3,8],amount:5}]},mountains:{name:"Mountains",points:[{terrain:"mountain",power:[7,12],amount:3},{terrain:"mountain",power:[3,7],amount:4},{terrain:"forest",power:[4,9],amount:3},{terrain:"wode",power:[5,10],amount:2},{terrain:"wode",power:[3,6],amount:4},{terrain:"plateau",power:[3,7],amount:4},{terrain:"lake",power:[4,9],amount:3},{terrain:"hills",power:[3,8],amount:4},{terrain:"drakemountain",power:[5,8],amount:3}]},desert:{name:"Desert",points:[{terrain:"mountain",power:[3,6],amount:4},{terrain:"forest",power:[3,5],amount:4},{terrain:"plateau",power:[3,6],amount:3},{terrain:"oasis",power:[3,5],amount:3},{terrain:"hills",power:[3,6],amount:3},{terrain:"savanna",power:[3,5],amount:5},{terrain:"desert",power:[7,10],amount:5}]},forest:{name:"Forest",points:[{terrain:"mountain",power:[7,12],amount:2},{terrain:"forest",power:[6,9],amount:4},{terrain:"wode",power:[5,8],amount:3},{terrain:"plains",power:[4,6],amount:2},{terrain:"ancientforest",power:[5,7],amount:4},{terrain:"lake",power:[8,11],amount:2},{terrain:"swamp",power:[4,9],amount:3},{terrain:"hills",power:[3,8],amount:2}]},hills:{name:"Hills",points:[{terrain:"mountain",power:[4,7],amount:1},{terrain:"forest",power:[3,6],amount:3},{terrain:"plateau",power:[3,7],amount:4},{terrain:"plains",power:[4,6],amount:3},{terrain:"lake",power:[6,8],amount:2},{terrain:"savanna",power:[3,5],amount:3},{terrain:"hills",power:[4,7],amount:3}]}}};class ot{static getBuildingByName(e){switch(e){case"wood":return new ht("Lumberyard","wood",1,{sprite:"bldicons",tile:0,w:32,h:32},[0,5,0,10,15,0],25,5);case"leather":return new ht("Hunter's Lodge","leather",1,{sprite:"bldicons",tile:1,w:32,h:32},[20,0,10,0,0,0],25,5);case"metal":return new ht("Mine","metal",1,{sprite:"bldicons",tile:2,w:32,h:32},[10,0,0,0,15,5],25,5);case"fiber":return new ht("Herbalist's Hut","fiber",1,{sprite:"bldicons",tile:3,w:32,h:32},[15,10,0,0,0,5],25,5);case"stone":return new ht("Quarry","stone",1,{sprite:"bldicons",tile:4,w:32,h:32},[10,0,20,0,0,0],25,5);case"crystal":return new ht("Crystal Loom","crystal",1,{sprite:"bldicons",tile:5,w:32,h:32},[10,0,5,0,15,0],25,5);case"house":return new ht("Town House","house",1,{sprite:"bldicons",tile:6,w:32,h:32},[5,5,5,5,5,0],10,5);case"watchtower":return new ht("Watch Tower","watchtower",1,{sprite:"bldicons",tile:7,w:32,h:32},[25,0,0,0,40,0],40,5);case"market":return new ht("Market","market",1,{sprite:"bldicons",tile:32,w:32,h:32},[20,10,0,10,10,10],50,5);case"tavern":return new ht("Tavern","tavern",1,{sprite:"bldicons",tile:33,w:32,h:32},[20,5,0,15,0,5],50,5);case"road":return new ht("Road","road",1,{sprite:"roadicons",tile:0,w:32,h:32},[5,0,0,0,3,0],5,7);case"docks":return new ht("Docks","docks",1,{sprite:"bldicons",tile:34,w:32,h:32},[15,10,0,0,10,0],50,5);case"town":return new ht("Town","town",3,{sprite:"roadicons",tile:38,w:50,h:50},[15,10,0,0,10,0],50,5);case"alchemy":return new ht("Alchemy Lab","alchemy",1,{sprite:"bldicons",tile:35,w:32,h:32},[10,0,20,0,10,15],150,5)}}}class ht{constructor(e,t,s,i,a,n,r){this.name=e,this.regName=t,this.tier=s,this.texture=i,this.resourceCosts=a,this.goldCost=n,this.costMulti=r}increaseCosts(){for(var e=0;e<this.resourceCosts.length;e++)this.resourceCosts[e]=this.resourceCosts[e]*this.costMulti;this.goldCost=this.goldCost*this.costMulti}save(){return{t:this.tier,reg:this.regName}}static loadFromFile(e,t){for(var s=ot.getBuildingByName(e.reg),i=s.tier;i<=e.t;i++)s.increaseCosts();return s.tier=e.t,s}static getTooltip(e,t,s){var i=ut.getInstance().getCurrentRegion(),a=1+e.defense*Ke.getInstance().moonperks.moonlightworkers.level*.01;switch(t){case"Lumberyard":var n=s*Xe.yieldHelper(B,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Wood at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Hunter's Lodge":n=s*Xe.yieldHelper(M,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Leather at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Mine":n=s*Xe.yieldHelper(R,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Metal at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Herbalist's Hut":n=s*Xe.yieldHelper(D,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Fiber at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Quarry":n=s*Xe.yieldHelper(H,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Stone at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Crystal Loom":n=s*Xe.yieldHelper(I,e.yields)*a*e.roadBonus*i.townData.productionMulti;return"Produces "+Math.floor(100*n)/100+" Crystal at the end of each day. Production at "+Math.floor(100*e.roadBonus)+"% based on distance to roads.";case"Town House":return"Increases the Town's max population by "+5*s+".";case"Watch Tower":return"Increases the defense of all tiles within 2 tiles of this watch tower by "+2*s+".";case"Market":var r=Xe.nearestPointInList(e.x,e.y,i.markets,!0),o=7+Ke.getInstance().moonperks.nightmarket.level,h=Math.max(0,Math.min(o,r[1]/me*o))*s/100;return"Increases the Town's economy by "+Math.floor(1e4*h)/100+"%, based on distance to the Town and other Markets.";case"Tavern":h=0;for(var l=0,c=Math.max(0,e.y-1);c<Math.min(i.height,e.y+1+1);c++)for(var d=Math.max(0,e.x-1);d<Math.min(i.width,e.x+1+1);d++)Math.abs(c-e.y)+Math.abs(d-e.x)<=1&&void 0!==i.map[c][d].building&&"Town House"===i.map[c][d].building.name&&(h+=.02,l+=1);return"Increases the Town's population by "+l+" and economy by "+Math.floor(s*h*100)+"%, based on nearby Town Houses.";case"Road":return"Most buildings must be built adjacent to roads. Production buildings get a boost being adjacent to a road, and produce nothing when more than "+s+" tiles away.";case"Docks":h=2*s*i.townData.economyMulti;return"Docks don't need roads and enables roads to be built beside them. Increases gold earned per week by "+Math.floor(h)+".";case"Alchemy Lab":return"Through strange magic converts "+[1,5,13,33,77][s-1]+" of all resources into "+[.05,.3,.9,3,8][s-1]+" of resources of the next highest tier each day."}}}class lt{constructor(e=65280,t=0,s=0){this.regName="plains",this.explored=!1,this.revealed=!1,this.difficulty=0,this.amountExplored=0,this.isInvaded=!1,this.invasionPower=0,this.invasionFights=0,this.building=void 0,this.defense=0,this.hasRune=!1,this.x=t,this.y=s,this.name="",this.exploreSpeed=1,this.color=e,this.borderColor=[255,255,255],this.explorationNeeded=1e3,this.enemies=[],this.yields=[],this.roadDist=-1,this.roadBonus=0,this.roadBuildable=!1,this.dockBuildable=!1,this.houseBuildable=!1,this.parent=void 0}save(){return{exp:this.explored,rev:this.revealed,dif:this.difficulty,rn:this.regName,ae:this.amountExplored,in:this.isInvaded,ip:this.invasionPower,if:this.invasionFights,bld:void 0===this.building?"":this.building.save(),def:this.defense,hr:this.hasRune,x:this.x,y:this.y}}static loadFromSave(e,t){var s=new lt;return s.regName=e.rn,s.explored=e.exp,s.revealed=e.rev,s.difficulty=e.dif,s.amountExplored=e.ae,s.isInvaded=e.in,s.invasionPower=e.ip,s.invasionFights=e.if,s.building=""===e.bld?void 0:ht.loadFromFile(e.bld,t),s.defense=e.def,s.hasRune=void 0!==e.hr&&e.hr,s.x=e.x,s.y=e.y,s}init(e,t,s,i){var a=rt.TILE_TYPES[e];this.regName=e,this.difficulty=t,this.exploreSpeed=1+t*ge,this.color=a.clr,this.name=a.name,this.enemies=a.enemies,this.explorationNeeded=a.explorationNeeded;var n=s+it.getInstance().regionDifficultyIncrease,r=Math.min(1,Math.max(0,t-s)/n);this.borderColor=[255,255-(r>.5?255*(r-.5)*2:0),255-Math.min(255,255*r*2)],this.yields=[];for(var o=0;o<a.yields.length;o++){var h=a.yields[o].rate;switch(a.yields[o].type){case R:h*=1+.05*Ke.getInstance().moonperks.metal.level;break;case M:h*=1+.05*Ke.getInstance().moonperks.leather.level;break;case D:h*=1+.05*Ke.getInstance().moonperks.fiber.level;break;case H:h*=1+.05*Ke.getInstance().moonperks.stone.level;break;case B:h*=1+.05*Ke.getInstance().moonperks.wood.level;break;case I:h*=1+.05*Ke.getInstance().moonperks.crystal.level}this.yields.push({type:a.yields[o].type,rate:h})}this.parent=i}sighting(){this.isInvaded=!0,this.invasionPower=0,this.invasionFights=5}invade(){this.isInvaded=!1,this.invasionPower=0,this.amountExplored=0,this.invasionFights=0,this.explored=!1,this.revealed=!0}getInvasionMulti(){return Math.min(5,Math.floor(Math.max(0,Math.log2(this.invasionPower/Ie))))}getFriendshipReward(){return 1+.05*(this.difficulty-this.parent.regionLevel*it.getInstance().regionDifficultyIncrease)}explore(e){if(!0===this.explored)return!1;var t=at.getInstance().getExploreMulti()*it.getInstance().exploreSpeed*ut.getInstance().getCurrentRegion().townData.exploreMulti;return t/=this.exploreSpeed,this.amountExplored+=e*t,this.amountExplored>=this.explorationNeeded&&!1===this.explored}incInvasionPower(e){if(this.getInvasionMulti()<5){var t=e+this.defense,s=Math.max(.1,1+.1*(this.difficulty-t));this.invasionPower+=We*s}}generateMonsters(){var e=[];if(!0===this.isInvaded){var t=this.difficulty+this.getInvasionMulti();e.push(Je.GetCreatureByName(this.enemies[Xe.randint(0,this.enemies.length)],t)),e.push(Je.GetCreatureByName(this.enemies[Xe.randint(0,this.enemies.length)],this.difficulty-1)),e.push(Je.GetCreatureByName(this.enemies[Xe.randint(0,this.enemies.length)],this.difficulty-1))}else for(var s=this.difficulty<30?1:2,i=(this.difficulty<5?2:3)+(this.difficulty>15?1:0),a=this.difficulty>0?Xe.randint(s,i):1,n=0;n<a;n++){var r=Xe.randint(0,this.enemies.length);e.push(Je.GetCreatureByName(this.enemies[r],this.difficulty)),Ke.getInstance().moonperks.direbeasts.level>0&&Math.random()<.05&&e[n].addTrait("Dire",1);for(var o=0;o<this.parent.traits.length;o++)e[n].addTrait(this.parent.traits[o].type,this.parent.traits[o].level);e[n].applyTraits()}return e}}class ct{constructor(e=8,t=8,s,i,a,n=!1){if(this.tileChangedHandler=void 0,this.sightingHandler=void 0,this.resourcesPerDay=[0,0,0,0,0,0],this.taverns=[],this.roads=[],this.markets=[],this.productionBuildings=[],this.alchemyDrain=0,this.alchemyGain=0,!0===n)return!0;this.width=e,this.height=t,this.regionLevel=s,this.townData=new nt(s+1),this.tilesExplored=0,this.sightings=[],this.sightingsDelay=0,this.invasionCounter=0,this.worldHeight=350,this.type=i,this.map=[];for(var r=0;r<t;r++){for(var o=[],h=0;h<e;h++)o.push(new lt(0,h,r));this.map.push(o)}this.traits=a;var l=[];for(r=0;r<rt.REGION_TYPES[i].points.length;r++)for(var c=rt.REGION_TYPES[i].points[r],d=0;d<c.amount;d++)l.push({x:Xe.randint(0,e),y:Xe.randint(0,t),power:Xe.randint(c.power[0],c.power[1]),terrainData:c.terrain});this.generateTerrain(l),this._init()}save(){for(var e=[],t=0;t<this.height;t++){for(var s=[],i=0;i<this.width;i++)s.push(this.map[t][i].save());e.push(s)}return{w:this.width,h:this.height,rl:this.regionLevel,td:this.townData.save(),te:this.tilesExplored,map:e,sight:this.sightings,sd:this.sightingsDelay,ic:this.invasionCounter,wh:this.worldHeight,type:this.type,tr:this.traits}}static loadFromSave(e,t){var s=new ct(0,0,0,"temperate",[],!0);s.width=e.w,s.height=e.h,s.regionLevel=e.rl,s.townData=new nt(1),s.townData.load(e.td),s.tilesExplored=e.te,s.sightings=e.sight,s.sightingsDelay=e.sd,s.invasionCounter=e.ic,s.worldHeight=e.wh,s.type=e.type,s.traits=e.tr,s.map=[];for(var i=0;i<e.map.length;i++){for(var a=[],n=0;n<e.map[i].length;n++){var r=lt.loadFromSave(e.map[i][n],t);r.init(r.regName,r.difficulty,s.regionLevel*it.getInstance().regionDifficultyIncrease,s),a.push(r)}s.map.push(a)}return s._init(),s}generateTerrain(e){var t=this.regionLevel*it.getInstance().regionDifficultyIncrease,s=t+it.getInstance().regionDifficultyIncrease,i=[Math.floor(this.width/2),this.height-3],a=[i[0]+Math.floor(2*Math.random())];a.push(i[1]+2-Math.abs(i[0]-a[0]));var n,r=[];r.push({x:i[0],y:i[1],power:t-2}),r.push({x:a[0],y:a[1],power:t-4});for(var o=0;o<8;o++){for(var h=Xe.randint(0,this.width),l=Xe.randint(0,this.height);Xe.pointInList(h,l,r);)h=Xe.randint(0,this.width),l=Xe.randint(0,this.height);var c=t+Xe.getDistance(h,l,i[0],i[1])/(.7*this.height)*it.getInstance().regionDifficultyIncrease;r.push({x:h,y:l,power:c+Xe.randint(-4,4)})}for(o=0;o<this.height;o++)for(var d=0;d<this.width;d++){var u=Xe.nearestPointsInList(d,o,e,2),g=void 0;g=e[u[0][0]].power/(1+u[0][1])>e[u[1][0]].power/(1+u[1][1])?e[u[0][0]].terrainData:e[u[1][0]].terrainData,u=Xe.nearestPointInList(d,o,r);var p=t+Xe.getDistance(d,o,i[0],i[1])/(.79*this.height)*it.getInstance().regionDifficultyIncrease,m=Math.max(t,Math.min(s-1,Math.floor(p+(r[u[0]].power-p)/(2+u[1]))));this.map[o][d].init(g,m,t,this)}if(this.regionLevel>=it.getInstance().minGateRegion){var y=[],v=0,b=[0,0];for(o=0;o<this.height;o++)for(d=0;d<this.width;d++)this.map[o][d].difficulty>=s-1&&y.push([o,d]),this.map[o][d].difficulty>v&&(b[0]=o,b[1]=d,v=this.map[o][d].difficulty);y.push(b),n=y[Xe.randint(0,y.length)],this.map[n[0]][n[1]].init("mysticgate",s,t,this)}var f=Ke.getInstance().moonperks.runes.level>0?5:0;f+=Ke.getInstance().moonperks.runelands.level;var x=(e,t)=>!(!1!==this.map[t][e].hasRune||e===i[0]&&t===i[1]||e===n[1]&&t===n[0]);for(o=0;o<f;o++){var w=Xe.randint(0,this.width),k=Xe.randint(0,this.height);if(!0===x(w,k))this.map[k][w].hasRune=!0;else{var T=k*this.width+w;for(d=0;d<20;d++){var C=(T+d)%(this.width*this.height);if(!0===x(w=C%this.width,k=Math.floor(C/this.width))){this.map[k][w].hasRune=!0;break}}}}this.map[i[1]][i[0]].init("town",t,t,this),this.map[i[1]][i[0]].building=ot.getBuildingByName("town"),this.placeBuilding(i[0],i[1],ot.getBuildingByName("town")),this.map[a[1]][a[0]].revealed=!0}onTileChanged(e){this.tileChangedHandler=e}removeHandlers(){this.tileChangedHandler=void 0,this.sightingHandler=void 0}onSighting(e){this.sightingHandler=e}_onTileChanged(e){void 0!==this.tileChangedHandler&&this.tileChangedHandler(e)}getExplorePercent(){return this.tilesExplored/(this.width*this.height)}isExplorable(e,t){return this.map[t][e].revealed}exploreTile(e,t){if(!0===this.map[t][e].revealed&&!0!==this.map[t][e].explored){if(this.tilesExplored+=1,this.map[t][e].explored=!0,this.townData.addFriendship(10*Ke.getInstance().moonperks.discovery.level),!0===this.map[t][e].hasRune){this.map[t][e].hasRune=!1;var s=et.getRandomRuneAtLevel(this.regionLevel+1);at.getInstance().addRune(s)}"Town"===this.map[t][e].name&&(this.townData.townExplored=!0),this.tilesExplored>=10&&(this.townData.researchEnabled=!0),t>0&&(this.map[t-1][e].revealed=!0,this._onTileChanged(this.map[t-1][e])),t<this.height-1&&(this.map[t+1][e].revealed=!0,this._onTileChanged(this.map[t+1][e])),e>0&&(this.map[t][e-1].revealed=!0,this._onTileChanged(this.map[t][e-1])),e<this.width-1&&(this.map[t][e+1].revealed=!0,this._onTileChanged(this.map[t][e+1]))}return this.regionLevel>0&&this.regionLevel<=8&&!1===ut.getInstance().getRegion(this.regionLevel-1).townData.alchemyEnabled&&(ut.getInstance().getRegion(this.regionLevel-1).townData.alchemyEnabled=!0,ze.getInstance().registerFeatureUnlocked(v,"You recieved a letter from the previous town. A mysterious old man came through and taught them the magic of alchemy. You may now build alchemy labs to convert tier "+(this.regionLevel-1)+" resources to tier "+this.regionLevel+" resources at a horribly inefficient rate! Thanks mysterious old man!")),this._onTileChanged(this.map[t][e]),this.map[t][e]}_invade(){this.invasionCounter=0;var e=this.sightings[Xe.randint(0,this.sightings.length)];this.map[e[0]][e[1]].invade(),null!=this.map[e[0]][e[1]].building&&this.destroyBuilding(e[1],e[0]),this.townData.currentPopulation=this.townData.currentPopulation*_e,this.tilesExplored-=1,this.endSighting(e[1],e[0])}_addSighting(){var e=Math.min(Pe*(1+this.sightings.length*Ae),Ee),t=Math.min(2*e,Ee);this.sightingsDelay=1e3*Xe.randint(e,t);for(var s=[],i=1;i<this.height-1;i++)for(var a=1;a<this.width-1;a++)if(!1!==this.map[i][a].explored&&"Town"!==this.map[i][a].name&&"Mystic Gate"!==this.map[i][a].name&&!0!==this.map[i][a].isInvaded){for(var n=!1,r=-1;r<2;r++)for(var o=-1;o<2;o++)!0===this.map[i+r][a+o].revealed&&!1===this.map[i+r][a+o].explored&&(n=!0);!0===n&&s.push([i,a])}if(!(s.length<=0)){var h=s[Xe.randint(0,s.length)];this.sightings.push(h),this.map[h[0]][h[1]].sighting(),void 0!==this.sightingHandler&&this.sightingHandler()}}endSighting(e,t){this.map[t][e].isInvaded=!1,this.map[t][e].invasionPower=0,this.invasionCounter=Math.max(0,this.invasionCounter-Se),this.sightings=this.sightings.filter(e=>!0===this.map[e[0]][e[1]].isInvaded),this._onTileChanged(this.map[t][e])}_canDock(e,t){return t>0&&this.map[t-1][e].name!=this.map[t][e].name||t<this.height-1&&this.map[t+1][e].name!=this.map[t][e].name||e>0&&this.map[t][e-1].name!=this.map[t][e].name||e<this.width-1&&this.map[t][e+1].name!=this.map[t][e].name}_init(){this.roads=[],this.markets=[{x:Math.floor(this.width/2),y:this.height-3}],this.taverns=[],this.productionBuildings=[];for(var e=0;e<this.height;e++)for(var t=0;t<this.width;t++)void 0!==this.map[e][t].building&&("Road"===this.map[e][t].building.name||"Town"===this.map[e][t].building.name?this.roads.push([e,t]):"Market"===this.map[e][t].building.name?this.markets.push({x:t,y:e}):"Tavern"===this.map[e][t].building.name?this.taverns.push([e,t]):"Town House"!==this.map[e][t].building.name&&this.productionBuildings.push([e,t])),"Lake"!==this.map[e][t].name&&"Oasis"!==this.map[e][t].name||(this.map[e][t].dockBuildable=this._canDock(t,e));this._calculateTileBonuses()}_calculateTileBonuses(){var e=0,t=0;this.townData.buildingIncome=0,this.resourcesPerDay=[0,0,0,0,0,0],this.alchemyDrain=0,this.alchemyGain=0;for(var s=0;s<this.height;s++)for(var i=0;i<this.width;i++)this.map[s][i].roadDist=-1,this.map[s][i].roadBonus=0,this.map[s][i].roadBuildable=!1,this.map[s][i].houseBuildable=!1;var a=[[1,.5,0],[1.25,.75,.25],[1.5,1,.5]];for(s=0;s<this.roads.length;s++)for(var n=3,r=this.map[this.roads[s][0]][this.roads[s][1]].building.tier,o=Math.max(0,this.roads[s][0]-n);o<Math.min(this.height,this.roads[s][0]+n+1);o++)for(var h=Math.max(0,this.roads[s][1]-n);h<Math.min(this.width,this.roads[s][1]+n+1);h++){var l=Math.abs(o-this.roads[s][0])+Math.abs(h-this.roads[s][1]);Math.abs(o-this.roads[s][0])+Math.abs(h-this.roads[s][1])<=n&&(this.map[o][h].roadDist=-1===this.map[o][h].roadDist?l:Math.min(this.map[o][h].roadDist,l),this.map[o][h].roadBuildable=this.map[o][h].roadDist<=1,this.map[o][h].roadBonus=Math.max(this.map[o][h].roadBonus,a[r-1][l-1]),this.map[o][h].houseBuildable=this.map[o][h].houseBuildable||Math.abs(o-this.roads[s][0])<=1&&Math.abs(h-this.roads[s][1])<=1)}var c=Math.floor(this.width/2),d=this.height-3;this.map[d][c-1].roadBuildable=!0,this.map[d][c+1].roadBuildable=!0,this.map[d-1][c].roadBuildable=!0,this.map[d+1][c].roadBuildable=!0;for(s=1;s<this.markets.length;s++){var u=10+Ke.getInstance().moonperks.nightmarket.level,g=(r=this.map[this.markets[s].y][this.markets[s].x].building.tier,Xe.nearestPointInList(this.markets[s].x,this.markets[s].y,this.markets,!0));e+=Math.max(0,Math.min(u,g[1]/me*u))*r/100}for(s=0;s<this.taverns.length;s++){n=1+Ke.getInstance().moonperks.moonwine.level;var p=0;for(r=this.map[this.taverns[s][0]][this.taverns[s][1]].building.tier,o=Math.max(0,this.taverns[s][0]-n);o<Math.min(this.height,this.taverns[s][0]+n+1);o++)for(h=Math.max(0,this.taverns[s][1]-n);h<Math.min(this.width,this.taverns[s][1]+n+1);h++)Math.abs(o-this.taverns[s][0])+Math.abs(h-this.taverns[s][1])<=n&&void 0!==this.map[o][h].building&&"Town House"===this.map[o][h].building.name&&(p+=.02,t+=1);e+=p*r}var m=[1,1.25,1.5,1.75,2];for(s=0;s<this.productionBuildings.length;s++){switch((b=this.map[this.productionBuildings[s][0]][this.productionBuildings[s][1]]).building.name){case"Docks":b.y>0&&(this.map[b.y-1][b.x].roadBuildable=!0,this.map[b.y-1][b.x].houseBuildable=!0,this.map[b.y-1][b.x].roadBonus=Math.max(this.map[b.y-1][b.x].roadBonus,m[b.building.tier-1])),b.y<this.height-1&&(this.map[b.y+1][b.x].roadBuildable=!0,this.map[b.y+1][b.x].houseBuildable=!0,this.map[b.y+1][b.x].roadBonus=Math.max(this.map[b.y+1][b.x].roadBonus,m[b.building.tier-1])),b.x>0&&(this.map[b.y][b.x-1].roadBuildable=!0,this.map[b.y][b.x-1].houseBuildable=!0,this.map[b.y][b.x-1].roadBonus=Math.max(this.map[b.y][b.x-1].roadBonus,m[b.building.tier-1])),b.x<this.width-1&&(this.map[b.y][b.x+1].roadBuildable=!0,this.map[b.y][b.x+1].houseBuildable=!0,this.map[b.y][b.x+1].roadBonus=Math.max(this.map[b.y][b.x+1].roadBonus,m[b.building.tier-1]))}}var y=[1,5,13,33,77],v=[.05,.3,.9,3,8];for(s=0;s<this.productionBuildings.length;s++){var b,f=1+(b=this.map[this.productionBuildings[s][0]][this.productionBuildings[s][1]]).defense*Ke.getInstance().moonperks.moonlightworkers.level*.01;switch(f*=1+Ke.getInstance().challenges.buildings.completions,b.building.name){case"Lumberyard":this.resourcesPerDay[B]+=b.building.tier*Xe.yieldHelper(B,b.yields)*f*b.roadBonus;break;case"Hunter's Lodge":this.resourcesPerDay[M]+=b.building.tier*Xe.yieldHelper(M,b.yields)*f*b.roadBonus;break;case"Mine":this.resourcesPerDay[R]+=b.building.tier*Xe.yieldHelper(R,b.yields)*f*b.roadBonus;break;case"Herbalist's Hut":this.resourcesPerDay[D]+=b.building.tier*Xe.yieldHelper(D,b.yields)*f*b.roadBonus;break;case"Quarry":this.resourcesPerDay[H]+=b.building.tier*Xe.yieldHelper(H,b.yields)*f*b.roadBonus;break;case"Crystal Loom":this.resourcesPerDay[I]+=b.building.tier*Xe.yieldHelper(I,b.yields)*f*b.roadBonus;break;case"Docks":this.townData.buildingIncome+=2*b.building.tier;break;case"Alchemy Lab":this.alchemyDrain+=y[b.building.tier-1],this.alchemyGain+=v[b.building.tier-1]}}this.townData.setTavernPopulation(t),this.townData.calculateEconMulti(e)}_addBuilding(e){switch(e.defense+=Ke.getInstance().moonperks.hardenedvillagers.level+this.townData.upgrades.reinforcedhouses.level,e.building.name){case"Lumberyard":case"Hunter's Lodge":case"Mine":case"Herbalist's Hut":case"Quarry":case"Crystal Loom":case"Docks":case"Alchemy Lab":this.productionBuildings.push([e.y,e.x]);break;case"Town House":this.townData.increaseMaxPop(5*e.building.tier);break;case"Watch Tower":for(var t=Math.max(0,e.y-2);t<Math.min(this.height,e.y+3);t++)for(var s=Math.max(0,e.x-2);s<Math.min(this.width,e.x+3);s++)Math.abs(s-e.x)+Math.abs(t-e.y)<=2&&(this.map[t][s].defense+=2*e.building.tier);break;case"Market":this.markets.push({x:e.x,y:e.y});break;case"Tavern":this.taverns.push([e.y,e.x]);break;case"Road":case"Town":this.roads.push([e.y,e.x])}}_removeBuilding(e){switch(e.defense-=Ke.getInstance().moonperks.hardenedvillagers.level+this.townData.upgrades.reinforcedhouses.level,e.building.name){case"Lumberyard":case"Hunter's Lodge":case"Mine":case"Herbalist's Hut":case"Quarry":case"Crystal Loom":case"Docks":case"Alchemy Lab":this.productionBuildings=this.productionBuildings.filter(t=>t[1]!==e.x||t[0]!==e.y);break;case"Town House":this.townData.increaseMaxPop(-5*e.building.tier);break;case"Watch Tower":for(var t=Math.max(0,e.y-2);t<Math.min(this.height,e.y+3);t++)for(var s=Math.max(0,e.x-2);s<Math.min(this.width,e.x+3);s++)Math.abs(s-e.x)+Math.abs(t-e.y)<=2&&(this.map[t][s].defense-=2*e.building.tier);break;case"Market":this.markets=this.markets.filter(t=>t.x!==e.x||t.y!==e.y);break;case"Tavern":this.taverns=this.taverns.filter(t=>t[1]!==e.x||t[0]!==e.y);break;case"Road":this.roads=this.roads.filter(t=>t[1]!==e.x||t[0]!==e.y)}}nextWeakestTile(){for(var e=[-1,-1],t=this.regionLevel*it.getInstance().regionDifficultyIncrease+9999,s=0;s<this.height;s++)for(var i=0;i<this.width;i++)!1===this.map[s][i].explored&&!0===this.map[s][i].revealed&&this.map[s][i].difficulty<t&&(e=[i,s],t=this.map[s][i].difficulty);return e}handleReinforcedHouses(){for(var e=0;e<this.height;e++)for(var t=0;t<this.width;t++)void 0!==this.map[e][t].building&&(this.map[e][t].defense+=1);this._calculateTileBonuses()}placeBuilding(e,t,s){this.map[t][e].building=s,this.map[t][e].building.increaseCosts(),this._addBuilding(this.map[t][e]),this._calculateTileBonuses(),this._onTileChanged(this.map[t][e])}upgradeBuilding(e,t){this._removeBuilding(this.map[t][e]),this.map[t][e].building.tier+=1,this.map[t][e].building.increaseCosts(),this._addBuilding(this.map[t][e]),this._calculateTileBonuses(),this._onTileChanged(this.map[t][e])}destroyBuilding(e,t){this._removeBuilding(this.map[t][e]),this.map[t][e].building=void 0,this._calculateTileBonuses(),this._onTileChanged(this.map[t][e])}update(e){}updateDay(){this.townData.endOfDay();for(var e=new at,t=[],s=1+.04*e.getTalentLevel("governance"),i=Math.min(this.regionLevel,8),a=0;a<this.resourcesPerDay.length;a++)t.push(Math.max(0,this.resourcesPerDay[a]*this.townData.productionMulti*s));if(e.addResource(t,i),this.alchemyDrain>0){for(t=[],a=0;a<e.resources[i].length;a++)t.push(Math.min(this.alchemyDrain,e.resources[i][a]));e.spendResource(t,i);for(a=0;a<e.resources[i].length;a++)t[a]=t[a]/this.alchemyDrain*this.alchemyGain;e.addResource(t,Math.min(i+1,8))}this.tilesExplored>=11&&(this.sightingsDelay-=We,this.sightingsDelay<=0&&this._addSighting());for(a=0;a<this.sightings.length;a++){var n=this.sightings[a];this.map[n[0]][n[1]].incInvasionPower(this.regionLevel*it.getInstance().regionDifficultyIncrease),this.invasionCounter+=this.map[n[0]][n[1]].getInvasionMulti()*(1/(1+.25*e.getTalentLevel("guardian")))}this.invasionCounter>Le&&this._invade()}updateWeek(){this.townData.endOfWeek()}}class dt{constructor(e=0){this.time=e,this.offlineTime=0,this.frameDelta=0,this.delta=0,this.timescale=1,this.onDayEndHandlers=[],this.onWeekEndHandlers=[]}getYears(){return Math.floor(this.time/qe)}getMonths(){return Math.floor(this.time%qe/Ye)}getDays(){return Math.floor(this.time%qe%Ye/We)}getHours(){return Math.floor(this.time%qe%Ye%We/Oe)}getOfflineTimeString(){var e=Math.floor(this.offlineTime/36e5),t=Math.floor(this.offlineTime%36e5/6e4),s=Math.floor(this.offlineTime%6e4/1e3);return("0"+e).slice(-2)+":"+("0"+t).slice(-2)+":"+("0"+s).slice(-2)}_onDayEnd(){for(var e=0;e<this.onDayEndHandlers.length;e++)this.onDayEndHandlers[e]()}_onWeekEnd(){for(var e=0;e<this.onWeekEndHandlers.length;e++)this.onWeekEndHandlers[e]()}registerEvent(e,t){"onDayEnd"===e?this.onDayEndHandlers.push(t):"onWeekEnd"===e&&this.onWeekEndHandlers.push(t)}setTimeScale(e){this.offlineTime<=0||(this.timescale=e)}setFrameDelta(e){this.delta=e,this.frameDelta=e*this.timescale}addOfflineTime(e){this.offlineTime=Math.min(864e5,this.offlineTime+e/2)}update(e){var t=this.getDays();this.time+=this.frameDelta;var s=this.getDays();t!==s&&this._onDayEnd(),Math.floor(t/7)!==Math.floor(s/7)&&this._onWeekEnd(),this.timescale>1&&(this.offlineTime-=this.delta*(this.timescale-1),this.offlineTime<=0&&(this.timescale=1,this.offlineTime=0))}timeSince(e){return new dt(this.time-e)}getText(){return"Year "+(this.getYears()+1)+", "+Fe[this.getMonths()]+" "+(this.getDays()+1)+", "+this.getHours()+":00"}getTimespanText(){var e="",t=this.getYears();t>0&&(e+=t+" Years");var s=this.getMonths();s>0&&(e+=(e.length>0?", ":"")+s+" Months");var i=this.getDays();i>0&&(e+=(e.length>0?", ":"")+i+" Days");var a=this.getHours();return a>0&&(e+=(e.length>0?", ":"")+a+" Hours"),e}save(){return{time:this.time,otime:this.offlineTime}}load(e,t){t<=4&&(e.otime=0),this.time=e.time,this.offlineTime=e.otime}}class ut{constructor(){if(!ut.instance){var e=it.getInstance().regionSize;this.regionList=[],this.regionList.push(new ct(e[0],e[1],0,"temperate",this._randomizeTraits())),this.currentRegion=0,this.nextRegions=[],this.timeAtRunStart=0,this.time=new dt,this.time.registerEvent("onDayEnd",()=>{this.updateDay()}),this.time.registerEvent("onWeekEnd",()=>{this.updateWeek()}),ut.instance=this}return ut.instance}static getInstance(){return ut.instance?ut.instance:new ut}rebirth(){var e=it.getInstance().regionSize;this.regionList=[],this.regionList.push(new ct(e[0],e[1],0,"temperate",this._randomizeTraits())),this.currentRegion=0,this.nextRegions=[],this.timeAtRunStart=this.time.time}getRegion(e){return this.regionList[e]}setRegion(e){this.currentRegion=e}getCurrentRegion(){return this.getRegion(this.currentRegion)}setCurrentRegion(e){this.currentRegion=e}getGoldCap(){for(var e=0,t=0;t<this.regionList.length;t++)e+=this.regionList[t].townData.getGoldCap();return e}_randomizeTraits(e){for(var t=it.getInstance(),s=[],i=0;i<t.fixedTraits.length;i++)s.push({type:t.fixedTraits[i].type,level:t.fixedTraits[i].level});for(i=0;i<e+t.startingTraits;i++){var a=Xe.randint(1,7),n=s.find(e=>e.type===a);void 0!==n?n.level+=1:s.push({type:a,level:1})}return s=s.sort((e,t)=>t.level-e.level)}generateRegionChoices(){var e=Xe.randint(2,5),t=["temperate","mountains","desert","forest","hills"];this.nextRegions=[];for(var s=0;s<e;s++){var i=Xe.randint(0,t.length),a=Math.floor((this.regionList.length-1)/2);this.nextRegions.push({type:t[i],traits:this._randomizeTraits(a)}),t.splice(i,1)}}addRegion(e){var t=it.getInstance().regionSize;this.regionList.push(new ct(t[0],t[1],this.regionList.length,this.nextRegions[e].type,this.nextRegions[e].traits)),this.regionList[this.regionList.length-1].worldHeight=Math.floor((e+1)*(700/(this.nextRegions.length+1))),this.nextRegions=[]}handleRunCompletion(){var e=at.getInstance().earnableMoonlight(this.getCurrentRegion().regionLevel+1)*(1+.15*Ke.getInstance().challenges.time.completions);if(Ke.getInstance().moonlight+=e,this.getCurrentRegion().regionLevel>=1&&(ze.getInstance().persistentUnlocks.challenges=!0),this.getCurrentRegion().regionLevel>=3&&(Ke.getInstance().challenges.buildings.unlocked=!0,Ke.getInstance().challenges.talent.unlocked=!0),this.getCurrentRegion().regionLevel>=4&&(Ke.getInstance().challenges.megamonsters.unlocked=!0),-1===it.getInstance().maxRunTime||this.time.time-this.timeAtRunStart<it.getInstance().maxRunTime){var t=Ke.getInstance().getChallengeFromName(it.getInstance().challengeName);if(void 0!==t){if(t.completions<t.maxCompletions){switch(t.name){case"A Matter of Years":Ke.getInstance().challenges.forge.unlocked=!0,Ke.getInstance().challenges.explore.unlocked=!0,Ke.getInstance().challengePoints+=2;break;case"Forged Ahead":Ke.getInstance().challengePoints+=2;break;case"Giant Lands":case"Lazy Townsfolk":Ke.getInstance().challengePoints+=3;break;case"Talentless":Ke.getInstance().challengePoints+=4;break;case"Mega Monsters":Ke.getInstance().challengePoints+=5}t.completions+=1}0===t.fastestTime?t.fastestTime=this.time.time-this.timeAtRunStart:t.fastestTime=Math.min(this.time.time-this.timeAtRunStart,t.fastestTime)}}it.getInstance().reset()}update(e){this.time.update(e);for(var t=0;t<this.regionList.length;t++)this.regionList[t].update(e)}updateDay(){for(var e=0;e<this.regionList.length;e++)this.regionList[e].updateDay()}updateWeek(){for(var e=0;e<this.regionList.length;e++)this.regionList[e].updateWeek()}save(){for(var e=[],t=0;t<this.regionList.length;t++)e.push(this.regionList[t].save());return{rl:e,cr:this.currentRegion,nr:this.nextRegions,st:this.timeAtRunStart,time:this.time.save()}}load(e,t){t<=4&&(e.st=0),this.regionList=[];for(var s=0;s<e.rl.length;s++)this.regionList.push(ct.loadFromSave(e.rl[s],t));this.currentRegion=e.cr,this.nextRegions=e.nr,this.timeAtRunStart=e.st,this.time.load(e.time,t)}}class gt{constructor(e,t,s,i,a,n){this.backgroundRect=e.add.rectangle(t,s,i,a,0).setOrigin(0,0),this.backgroundRect.isStroked=!0,this.backgroundRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backgroundRect.lineWidth=1,this.rawText=n,this.text=e.add.bitmapText(t+i/2,s+a/2,"courier20",n).setOrigin(.5),this.enabled=!0,this.width=i,this.height=a,this.isNotifying=!1,this.textClr=16777215}setNotification(){return this.isNotifying=!0,this.text.setText("!"+this.rawText+"!"),this.text.setTint(Phaser.Display.Color.GetColor(255,255,0)),this}setPosition(e,t){return this.backgroundRect.setPosition(e,t),this.text.setPosition(e+this.width/2,t+this.height/2),this}setVisible(e){return this.backgroundRect.setVisible(e),this.text.setVisible(e),this.text.setTint(!0===e?this.textClr:10066329),this}setEnable(e){return this.enabled=e,this.text.setTint(!0===e?this.textClr:10066329),this}setText(e){return this.text.setText(e),this}setTextColor(e){return this.text.setTint(e),this.textClr=e,this}_onClick(e){!0===this.isNotifying&&(this.isNotifying=!1,this.text.setText(this.rawText),this.text.setTint(this.textClr)),!0===this.enabled&&e()}_onPointerUp(e){!0===this.enabled&&e()}_onPointerOut(e){!0===this.enabled&&e()}_onPointerOver(e){!0===this.enabled&&e()}onClickHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this._onClick(e)}),this}onPointerOutHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerout",()=>{this._onPointerOut(e)}),this}onPointerUpHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerup",()=>{this._onPointerUp(e)}),this}onPointerOverHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerover",()=>{this._onPointerOver(e)}),this}destroy(){this.backgroundRect.destroy(),this.text.destroy()}}class pt{constructor(e,t,s,i,a,n){this.backgroundRect=e.add.rectangle(t,s,i,a,0).setOrigin(0,0),this.backgroundRect.isStroked=!0,this.backgroundRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backgroundRect.lineWidth=1,this.img=e.add.image(t+i/2,s+a/2,n.sprite,n.tile).setOrigin(.5),this.img.displayWidth=i,this.img.displayHeight=a,this.enabled=!0,this.width=i,this.height=a}setPosition(e,t){this.backgroundRect.setPosition(e,t),this.img.setPosition(e+this.width/2,t+this.height/2)}setVisible(e){this.backgroundRect.setVisible(e),this.img.setVisible(e)}setEnable(e){this.enabled=e}setBorderTint(e){this.backgroundRect.strokeColor=e}removeBackground(){this.backgroundRect.alpha=.01}_onClick(e){!0===this.enabled&&e()}_onPointerUp(e){!0===this.enabled&&e()}_onPointerOut(e){!0===this.enabled&&e()}_onPointerOver(e){!0===this.enabled&&e()}onClickHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this._onClick(e)}),this}onPointerOutHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerout",()=>{this._onPointerOut(e)}),this}onPointerUpHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerup",()=>{this._onPointerUp(e)}),this}onPointerOverHandler(e){return this.backgroundRect.setInteractive({useHandCursor:!0}).on("pointerover",()=>{this._onPointerOver(e)}),this}destroy(){this.backgroundRect.destroy(),this.img.destroy()}}class mt{constructor(e,t,s,i,a){this.boundingBox=e.add.rectangle(t,s,i,a,2236962).setOrigin(0),this.boundingBox.strokeColor=12303291,this.boundingBox.isStroked=!0,this.boundingBox.lineWidth=2,this.x=t,this.y=s,this.context=e,this.textList=[]}addText(e,t,s,i){return this.textList.push(this.context.add.bitmapText(this.x+e,this.y+t,s,i)),this}setVisible(e){this.boundingBox.setVisible(e);for(var t=0;t<this.textList.length;t++)this.textList[t].setVisible(e)}destroy(){this.boundingBox.destroy();for(var e=0;e<this.textList.length;e++)this.textList[e].destroy()}}class yt{constructor(e,t,s,i){var n=new ze,r=(new ut).getCurrentRegion();this.backRect=e.add.rectangle(t,s,500,220,Phaser.Display.Color.GetColor(0,0,0)).setInteractive().setOrigin(0,0),this.backRect.isStroked=!0,this.backRect.strokeColor=Phaser.Display.Color.GetColor(128,128,128),this.backRect.lineWidth=2,this.titleLabel=e.add.bitmapText(t+5,s+5,"courier20",i.name);var o="";if(i.difficulty<1?o+="Difficulty: Weak\n":o+="Difficulty: "+i.difficulty+"\n",!1===i.explored?o+="Explored: "+Math.floor(i.amountExplored/i.explorationNeeded*100)+"%\n":o+="Explored\nDefense: "+Math.floor(i.defense)+"\n",!0===i.explored&&i.yields.length>0){o+="Yields:\n";for(var h=0;h<i.yields.length;h++)i.yields[h].rate>0&&(o+=" "+L[i.yields[h].type]+": "+Math.floor(100*i.yields[h].rate)/100+"\n")}if(this.infoLabel=e.add.bitmapText(t+10,s+25,"courier16",o),this.buildingLabel=void 0,this.floatingText=void 0,this.buildingDesc=void 0,this.buildingCosts=void 0,this.upgradeButton=void 0,this.destroyButton=void 0,this.buildingButtons=[],!0===n.unlocks.buildings&&!0===i.explored)if(void 0===i.building){this.buildingLabel=e.add.bitmapText(t+180,s+5,"courier20","Buildings:");var l=[];if(i.yields.length>0&&!0===i.roadBuildable&&l.push("road"),!0===it.getInstance().buildingsAllowed)for(h=0;h<i.yields.length;h++)switch(i.yields[h].type){case B:l.push("wood");break;case M:l.push("leather");break;case R:l.push("metal");break;case D:l.push("fiber");break;case H:l.push("stone");break;case I:l.push("crystal")}!0===i.dockBuildable&&l.push("docks"),!0===r.townData.alchemyEnabled&&l.push("alchemy"),i.yields.length>0&&(i.houseBuildable&&(l.push("house"),r.townData.getMarketLevel()>0&&l.push("market")),r.townData.getTavernLevel()>0&&l.push("tavern"),l.push("watchtower"));for(h=0;h<l.length;h++){var c=t+180+h%9*34,d=s+30+34*Math.floor(h/9),u=ot.getBuildingByName(l[h]);this.buildingButtons.push(this._makeBuildingBtn(e,c,d,i,u))}}else{this.buildingLabel=e.add.bitmapText(t+150,s+5,"courier20",i.building.name);var g=Xe.processText(ht.getTooltip(i,i.building.name,i.building.tier),27);if(this.buildingDesc=e.add.bitmapText(t+150,s+25,"courier16",g),this._canUpgrade(i.building)){for(o="Upgrade:\n",h=0;h<i.building.resourceCosts.length;h++)i.building.resourceCosts[h]>0&&(o+=L[h]+": "+Xe.numberString(i.building.resourceCosts[h])+"\n");o+="Gold: "+i.building.goldCost,this.buildingCosts=e.add.bitmapText(t+395,s+25,"courier16",o),this.upgradeButton=new gt(e,t+175,s+195,140,20,"Upgrade").onClickHandler(()=>{this._onAction("upgrade",{tile:i})})}this.destroyButton=new pt(e,t+130,s+5,16,16,{sprite:"icons",tile:23}).onClickHandler(()=>{this._onAction("destroy",{tile:i})}).onPointerOverHandler(()=>{var n="Remove the building from this tile. Costs "+i.building.tier*be+"g.",r=t+130,o=s+5;this.floatingText=new a(e,Xe.processText(n,25),r+16,o-60,220,60,"courier16",16)}).onPointerOutHandler(()=>{this._clearTooltip()})}this.exploreButton=new gt(e,t+30,s+195,140,20,"Explore").onClickHandler(()=>{this._onAction("explore",{tile:i})}),this.cancelButton=new gt(e,t+320,s+195,140,20,"Cancel").onClickHandler(()=>{this._onAction("cancel")}),this.onActionHandlers=[]}_canUpgrade(e){return"Market"===e.name?e.tier<ut.instance.getCurrentRegion().townData.getMarketLevel():"Tavern"===e.name?e.tier<ut.instance.getCurrentRegion().townData.getTavernLevel():e.tier<3}_makeBuildingBtn(e,t,s,i,a){return new pt(e,t,s,32,32,a.texture).onClickHandler(()=>{this._onAction("build",{tile:i,building:a})}).onPointerOverHandler(()=>{for(var n="",r=0;r<a.resourceCosts.length;r++)a.resourceCosts[r]>0&&(n+=L[r]+": "+a.resourceCosts[r]+"\n");n+="Gold: "+a.goldCost,void 0!==this.floatingText&&this.floatingText.destroy();var o=Xe.processText(ht.getTooltip(i,a.name,a.tier),24);this.floatingText=new mt(e,t+(t+350>1100?-350:0),s-150,350,150).addText(5,5,"courier20",a.name).addText(230,5,"courier20","Costs:").addText(235,25,"courier16",n).addText(10,25,"courier16",o)}).onPointerOutHandler(()=>{this._clearTooltip()})}_clearTooltip(){this.floatingText.destroy(),this.floatingText=void 0}addOnActionHandler(e){this.onActionHandlers.push(e)}_onAction(e,t={}){for(var s=0;s<this.onActionHandlers.length;s++)this.onActionHandlers[s](e,t)}destroy(){this.backRect.destroy(),this.titleLabel.destroy(),this.infoLabel.destroy(),this.exploreButton.destroy(),this.cancelButton.destroy(),void 0!==this.floatingText&&this.floatingText.destroy(),void 0!==this.buildingLabel&&this.buildingLabel.destroy();for(var e=0;e<this.buildingButtons.length;e++)this.buildingButtons[e].destroy();void 0!==this.buildingDesc&&this.buildingDesc.destroy(),void 0!==this.buildingCosts&&this.buildingCosts.destroy(),void 0!==this.upgradeButton&&this.upgradeButton.destroy(),void 0!==this.destroyButton&&this.destroyButton.destroy()}}class vt{constructor(e,t,s,i){this.backingRect=e.add.rectangle(t,s,400,270,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0).setInteractive(),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(200,0,200),this.backingRect.lineWidth=2,this.titleLabel=e.add.bitmapText(t+200,s+10,"courier20","Mystic Gate").setOrigin(.5,0),this.titleLabel.setTint(Phaser.Display.Color.GetColor(200,0,200));var a="You approach the mysterious, ancient gate. The air buzzes with energy as you peer into the pale blue portal. All those shadow beasts, guarding this place.. what's so important about this?";a=Xe.processText(a,48),this.descLabel=e.add.bitmapText(t+200,s+30,"courier16",a,16,1).setOrigin(.5,0),a='"THE MOON CALLS TO ALL IN THESE LANDS THAT WOULD HEAR IT. BE REBORN IN MOONLIGHT."',a=Xe.processText(a,48),this.desc2Label=e.add.bitmapText(t+200,s+107,"courier16",a,16,1).setOrigin(.5,0),this.desc2Label.setTint(Phaser.Display.Color.GetColor(96,172,177)),a="You hear a voice calling to you. Do you enter into the unknown, or continue your journey?",a=Xe.processText(a,48),this.desc3Label=e.add.bitmapText(t+200,s+150,"courier16",a,16,1).setOrigin(.5,0);var n=new at,r="MOONLIGHT\n"+Math.round(n.earnableMoonlight(i+1)*(1+.15*Ke.instance.challenges.time.completions));this.moonlightLabel=e.add.bitmapText(t+200,s+190,"courier20",r,20,1).setOrigin(.5,0),this.moonlightLabel.setTint(Phaser.Display.Color.GetColor(206,238,240)),this.rebirthButton=new gt(e,t+30,s+240,155,20,"Enter"),this.leaveButton=new gt(e,t+215,s+240,155,20,"Leave")}onRebirthHandler(e){return this.rebirthButton.onClickHandler(e),this}onLeaveHandler(e){return this.leaveButton.onClickHandler(e),this}destroy(){this.backingRect.destroy(),this.titleLabel.destroy(),this.descLabel.destroy(),this.desc2Label.destroy(),this.desc3Label.destroy(),this.moonlightLabel.destroy(),this.rebirthButton.destroy(),this.leaveButton.destroy()}}var bt=e=>Phaser.Display.Color.GetColor(e[0],e[1],e[2]);class ft extends i{constructor(e,t){super(e,t),this.WIDTH=50,this.HEIGHT=50,this.tileClickHandlers=[];var s=new ut;this.region=s.getCurrentRegion(),this.offsetX=380-this.region.width*this.WIDTH/2,this.offsetY=350-this.region.height*this.HEIGHT/2,this.progression=new ze,this.letters=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q"],this.sightingVal=0,this.tileSelectWindow=void 0,this.rebirthDialog=void 0,this.autoExploreActive=!1,this.updateBuildings=!1,this.upgradeKey=void 0,this.hoveredTile=[-1,-1]}preload(){}registerEvent(e,t){"onTileClick"===e&&this.tileClickHandlers.push(t)}_handleProgressionEvent(e,t,s){e===g&&this.invasionLabel.setVisible(!0)}_nextToConnector(e,t){return"Town"===this.region.map[t][e].name||void 0!==this.region.map[t][e].building&&"Docks"===this.region.map[t][e].building.name}_getRoadTexture(e,t){var s=e>0&&(0===this.region.map[t][e-1].roadDist||this._nextToConnector(e-1,t))?"1":"0",i=e<this.region.width-1&&(0===this.region.map[t][e+1].roadDist||this._nextToConnector(e+1,t))?"1":"0",a=t>0&&(0===this.region.map[t-1][e].roadDist||this._nextToConnector(e,t-1))?"1":"0",n=t<this.region.height-1&&(0===this.region.map[t+1][e].roadDist||this._nextToConnector(e,t+1))?"1":"0";return{sprite:"roadicons",tile:Ne[s+i+a+n]+20*(this.region.map[t][e].building.tier-1),w:50,h:50}}_getBuildingImage(e,t){return"Road"===this.region.map[t][e].building.name?this._getRoadTexture(e,t):{sprite:this.region.map[t][e].building.texture.sprite,tile:this.region.map[t][e].building.texture.tile+8*(this.region.map[t][e].building.tier-1),w:this.region.map[t][e].building.texture.w,h:this.region.map[t][e].building.texture.h}}_setupTile(e,t){var s=bt(this.region.map[t][e].color),i=bt(this.region.map[t][e].borderColor);!1===this.region.map[t][e].revealed?(s=Phaser.Display.Color.GetColor(0,0,0),i=Phaser.Display.Color.GetColor(40,80,40)):!1===this.region.map[t][e].explored&&!0===this.region.map[t][e].revealed&&(s=Xe.colorLerp(s,Phaser.Display.Color.GetColor(0,0,0),.65));var a=this.add.rectangle(this.relativeX((e+.5)*this.WIDTH+this.offsetX),this.relativeY((t+.5)*this.HEIGHT+this.offsetY),this.WIDTH-1,this.HEIGHT-1,s);a.strokeColor=i,a.isStroked=!0,a.lineWidth=1.5,a.setInteractive({useHandCursor:!0}).on("pointerdown",()=>{this._handleTileClick(e,t)}).on("pointerover",()=>{this.hoveredTile=[e,t],this._setTooltip(e,t)}).on("pointerout",()=>{this.hoveredTile=[-1,-1],this._disableTooltip()});var n=void 0;if(void 0!==this.region.map[t][e].building&&!0===this.region.map[t][e].revealed){var r=this._getBuildingImage(e,t);(n=this.add.image(this.relativeX((e+.5)*this.WIDTH+this.offsetX),this.relativeY((t+.5)*this.HEIGHT+this.offsetY),r.sprite,r.tile)).displayWidth=r.w,n.displayHeight=r.h}return{rect:a,building:n}}_setTooltip(e,t){void 0!==this.floatingText&&this._disableTooltip();var s="Tile "+this.letters[t]+(e+1)+"\n";!0===this.region.map[t][e].revealed?(s+=this.region.map[t][e].name+"\n",this.region.map[t][e].difficulty<1?s+="Difficulty: Weak\n":s+="Difficulty: "+this.region.map[t][e].difficulty+"\n",!1===this.region.map[t][e].explored?s+="Explored: "+Math.floor(this.region.map[t][e].amountExplored/this.region.map[t][e].explorationNeeded*100)+"%\n":s+="Explored\n"):s+="Unknown";var i=this.relativeX(e*this.WIDTH+this.offsetX);i+=i+190>1100?-150:0;var n=this.relativeY(t*this.HEIGHT+this.offsetY-82);n+=n<100?115:0,this.floatingText=new a(this,s,i,n,190,82)}_disableTooltip(){void 0!==this.floatingText&&(this.floatingText.destroy(),this.floatingText=void 0)}_exploreTown(e,t){!1===this.progression.unlocks.townTab&&this.progression.registerFeatureUnlocked(l,"You've finally made it to the town you saw in the distance, the only square not covered in this horrible fog. As you approach the gate a voice calls to you from the wall.\n\n\"Oh hey, you must be the new hero we've heard about, give me a minute to open the gate.\"\n\nHero? You woke up naked and alone in the wilderness. Come to think of it, it's amazing you're even still alive. You're still contemplating your existence when the door opens.\n\n\"So hero, you don't mind if I call you hero do you? Just makes things easier. Anyway we have a house laid out for you, don't expect much. The Forge has seen better days and the guilds have all been abandoned but I'm sure you'll see to that, Mr. Hero.\"\n\nYou begin to ask what all this hero nonsense is about when they speak up again.\n\n \"Oh that reminds me, we don't have much, but we can pay you for every one of those monsters you kill. Don't try to lie about how many you've beat, we can tell. Oh, and we'll pay you more when you're clearing new land for us. What were you trying to ask?\"\n\nYou say it was nothing and ask them to lead the way. You don't know about this hero stuff, but money is money. Besides you were already fighting this monsters anyway, might as well make money while you do it."),this.region.map[t][e].amountExplored=this.region.map[t][e].explorationNeeded,this.region.exploreTile(e,t),this.scene.get("DarkWorld").changeRegion()}_handleTileClick(e,t){!1===this.region.map[t][e].explored&&!1===this.region.map[t][e].revealed||("Town"!==this.region.map[t][e].name?"Mystic Gate"!==this.region.map[t][e].name||!0!==this.region.map[t][e].explored?(void 0!==this.tileSelectWindow&&(this.tileSelectWindow.destroy(),this.tileSelectWindow=void 0),this.tileSelectWindow=new yt(this,this.relativeX(200),this.relativeY(200),this.region.map[t][e]),this.tileSelectWindow.addOnActionHandler((e,t)=>{this._tileActionHandler(e,t)})):this.rebirthDialog=new vt(this,this.relativeX(250),this.relativeY(215),this.region.regionLevel).onRebirthHandler(()=>{this._rebirthClickedHandler()}).onLeaveHandler(()=>{this._leaveClickedHandler()}):this._exploreTown(e,t))}_canUpgrade(e){return"Market"===e.building.name?e.building.tier<this.region.townData.getMarketLevel():"Tavern"===e.building.name?e.building.tier<this.region.townData.getTavernLevel():e.building.tier<3}_tileActionHandler(e,t){switch(e){case"explore":this._exploreTile(t.tile.x,t.tile.y,!1);break;case"build":var s=new at,i=Math.floor(this.region.regionLevel);!0===Xe.canCraft(t.building.resourceCosts,s.resources[i])&&t.building.goldCost<=s.gold&&(s.spendResource(t.building.resourceCosts,i),s.addGold(-t.building.goldCost),this.region.placeBuilding(t.tile.x,t.tile.y,t.building),t.tile.building=t.building,this.scene.get("TownScene")._updateStatus());break;case"upgrade":s=new at,i=Math.floor(this.region.regionLevel);!0===Xe.canCraft(t.tile.building.resourceCosts,s.resources[i])&&t.tile.building.goldCost<=s.gold&&this._canUpgrade(t.tile)&&(s.spendResource(t.tile.building.resourceCosts,i),s.addGold(-t.tile.building.goldCost),this.region.upgradeBuilding(t.tile.x,t.tile.y),this.tileElements[t.tile.y][t.tile.x].building.setTexture(t.tile.building.texture.sprite,t.tile.building.texture.tile+8*(t.tile.building.tier-1)),this.scene.get("TownScene")._updateStatus());break;case"destroy":at.instance.gold>=t.tile.building.tier*be&&(at.instance.addGold(-t.tile.building.tier*be),this.region.destroyBuilding(t.tile.x,t.tile.y))}void 0!==this.tileSelectWindow&&(this.tileSelectWindow.destroy(),this.tileSelectWindow=void 0)}_rebirthClickedHandler(){this.rebirthDialog.destroy(),this.rebirthDialog=void 0,ut.getInstance().handleRunCompletion();var e=this.scene.get("MoonlightScene");e.enableLeveling(),e._onMoonlightChanged(),this.scene.bringToTop("MoonlightScene")}_leaveClickedHandler(){this.rebirthDialog.destroy(),this.rebirthDialog=void 0}_exploreTile(e,t,s){!1===this.progression.unlocks.combatTab&&this.progression.registerFeatureUnlocked(h,"Well this isn't so bad, walking aimlessly through this fog covered wilderness.\nI wonder if I'll meet a new friend.\n");for(var i=0;i<this.tileClickHandlers.length;i++)this.tileClickHandlers[i](e,t,s)}_onExploredCallback(e,t){if((0===e.y&&(!1===this.progression.unlocks.worldTab&&this.progression.registerFeatureUnlocked(m,"You did it, you've reached the edge of the world. This is all there is...\n\nOh wait, it looks like there's a trail over there leading to a new region! there's a whole world out there. I was wondering what that last tab was going to be."),ut.instance.regionList.length-1===t&&0===ut.instance.nextRegions.length&&(ut.instance.generateRegionChoices(),this.scene.get("WorldScene")._refreshRegions())),!1===e.explored)&&(!0===e.hasRune&&(this.scene.get("DarkWorld").notifyGear(),!1===this.progression.unlocks.runes&&this.progression.registerFeatureUnlocked(b,"You found an interesting rock in that last tile and shoved it into your pack, probably due to your crippling need to hoard things like some RPG character. The rock was glowing so it would probably make a neat good luck charm if you shoved it into the holes on your gear.")),this.region.exploreTile(e.x,e.y),this.progression.registerTileExplored(),!0===this.autoExploreActive&&-1!==(s=this.region.nextWeakestTile())[0])){var s;if("Town"===this.region.map[s[1]][s[0]].name)if(this._exploreTown(e.x,e.y),-1===(s=this.region.nextWeakestTile())[0])return;this._exploreTile(s[0],s[1],!0)}}_updateTile(e){var t=bt(e.color),s=bt(e.borderColor);if(!1===e.revealed?(t=Phaser.Display.Color.GetColor(0,0,0),s=Phaser.Display.Color.GetColor(40,80,40)):!1===e.explored&&!0===e.revealed&&(t=Xe.colorLerp(t,Phaser.Display.Color.GetColor(0,0,0),.65)),this.tileElements[e.y][e.x].rect.fillColor=t,this.tileElements[e.y][e.x].rect.strokeColor=s,void 0!==e.building&&!0===e.revealed){this.updateBuildings=!0;var i=this._getBuildingImage(e.x,e.y);if(void 0!==this.tileElements[e.y][e.x].building?this.tileElements[e.y][e.x].building.setTexture(i.sprite,i.tile):(this.tileElements[e.y][e.x].building=this.add.image(this.relativeX((e.x+.5)*this.WIDTH+this.offsetX),this.relativeY((e.y+.5)*this.HEIGHT+this.offsetY),i.sprite,i.tile),this.tileElements[e.y][e.x].building.displayWidth=i.w,this.tileElements[e.y][e.x].building.displayHeight=i.h),"Road"===e.building.name){if(e.x>0&&void 0!==this.region.map[e.y][e.x-1].building&&"Road"===this.region.map[e.y][e.x-1].building.name){var a=this._getBuildingImage(e.x-1,e.y);this.tileElements[e.y][e.x-1].building.setTexture(a.sprite,a.tile)}if(e.x<this.region.width-1&&void 0!==this.region.map[e.y][e.x+1].building&&"Road"===this.region.map[e.y][e.x+1].building.name){a=this._getBuildingImage(e.x+1,e.y);this.tileElements[e.y][e.x+1].building.setTexture(a.sprite,a.tile)}if(e.y>0&&void 0!==this.region.map[e.y-1][e.x].building&&"Road"===this.region.map[e.y-1][e.x].building.name){a=this._getBuildingImage(e.x,e.y-1);this.tileElements[e.y-1][e.x].building.setTexture(a.sprite,a.tile)}if(e.y<this.region.height-1&&void 0!==this.region.map[e.y+1][e.x].building&&"Road"===this.region.map[e.y+1][e.x].building.name){a=this._getBuildingImage(e.x,e.y+1);this.tileElements[e.y+1][e.x].building.setTexture(a.sprite,a.tile)}}}else void 0!==this.tileElements[e.y][e.x].building&&(this.tileElements[e.y][e.x].building.destroy(),this.tileElements[e.y][e.x].building=void 0)}changeRegion(){this.rebirth()}rebirth(){this.region.removeHandlers(),this.region=ut.instance.getCurrentRegion(),this.region.onTileChanged(e=>{this._updateTile(e)}),this.region.onSighting(e=>{this.scene.get("DarkWorld").notifyRegion()});for(var e=0;e<this.tileElements.length;e++)for(var t=0;t<this.tileElements[0].length;t++)this.tileElements[e][t].rect.destroy(),void 0!==this.tileElements[e][t].building&&this.tileElements[e][t].building.destroy();this.tileElements=[];for(e=0;e<this.region.height;e++){var s=[];for(t=0;t<this.region.width;t++)s.push(this._setupTile(t,e));this.tileElements.push(s)}var i=this.region.invasionCounter/Le;this.invasionLabel.setText("Invasion\n"+Math.floor(100*i)+"%"),this.invasionLabel.setVisible(this.progression.unlocks.buildings),this.autoExploreLabel.setVisible(this.progression.persistentUnlocks.autoExplore),this.autoExploreButton.setVisible(this.progression.persistentUnlocks.autoExplore)}_toggleAutoExplore(){this.autoExploreActive=!this.autoExploreActive,!0===this.autoExploreActive?(this.autoExploreButton.setText("ON"),this.autoExploreButton.setTextColor(Phaser.Display.Color.GetColor(255,255,255))):(this.autoExploreButton.setText("OFF"),this.autoExploreButton.setTextColor(Phaser.Display.Color.GetColor(175,0,140)))}create(){this.scene.get("CombatScene").registerEvent("onExplore",(e,t)=>{this._onExploredCallback(e,t)}),this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.invasionLabel=this.add.bitmapText(this.relativeX(720),this.relativeY(90),"courier20","Invasion",20,1),this.invasionLabel.setVisible(this.progression.unlocks.buildings);var e=this.region.invasionCounter/Le;this.invasionLabel.setTint(Phaser.Display.Color.GetColor(40+215*e,40+215*e,40+215*e)),this.offlineLabel=this.add.bitmapText(this.relativeX(660),this.relativeY(140),"courier20","Offline Time: "+ut.instance.time.getOfflineTimeString()),this.speed1xButton=new gt(this,this.relativeX(795),this.relativeY(160),30,20,"1x").onClickHandler(()=>{ut.instance.time.setTimeScale(1)}),this.speed2xButton=new gt(this,this.relativeX(830),this.relativeY(160),30,20,"2x").onClickHandler(()=>{ut.instance.time.setTimeScale(2)}),this.speed5xButton=new gt(this,this.relativeX(865),this.relativeY(160),30,20,"5x").onClickHandler(()=>{ut.instance.time.setTimeScale(5)}),this.autoExploreLabel=this.add.bitmapText(this.relativeX(660),this.relativeY(190),"courier20","Auto Explore:"),this.autoExploreButton=new gt(this,this.relativeX(795),this.relativeY(190),40,20,"OFF").onClickHandler(()=>{this._toggleAutoExplore()}),this.autoExploreButton.setTextColor(Phaser.Display.Color.GetColor(175,0,140)),this.autoExploreLabel.setVisible(this.progression.persistentUnlocks.autoExplore),this.autoExploreButton.setVisible(this.progression.persistentUnlocks.autoExplore),this.floatingText=void 0,this.tileElements=[];for(var t=0;t<this.region.height;t++){for(var s=[],i=0;i<this.region.width;i++)s.push(this._setupTile(i,t));this.tileElements.push(s)}for(t=0;t<this.region.height;t++)this.add.bitmapText(this.relativeX(this.offsetX-this.WIDTH/2),this.relativeY(this.offsetY+(t+.5)*this.HEIGHT),"courier20",this.letters[t]).setOrigin(.5);for(t=0;t<this.region.width;t++)this.add.bitmapText(this.relativeX(this.offsetX+(t+.5)*this.WIDTH),this.relativeY(this.offsetY-this.HEIGHT/2),"courier20",""+(t+1)).setOrigin(.5);this.progression.addOnUnlockHandler((e,t,s)=>{this._handleProgressionEvent(e,t,s)}),this.region.onTileChanged(e=>{this._updateTile(e)}),this.region.onSighting(e=>{this.scene.get("DarkWorld").notifyRegion()}),this.upgradeKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.U)}update(e,t){if(this.offlineLabel.setText("Offline Time: "+ut.instance.time.getOfflineTimeString()),this.region.sightings.length>0){var s=this.region.invasionCounter/Le;this.invasionLabel.setText("Invasion\n"+Math.floor(100*s)+"%"),this.invasionLabel.setTint(Phaser.Display.Color.GetColor(40+215*s,40+215*s,40+215*s)),this.sightingVal=(this.sightingVal+t)%2e3;for(var i=.5*Math.sin(this.sightingVal/2e3*Math.PI*2)+.5,a=0;a<this.region.sightings.length;a++){var n=this.region.sightings[a],r=bt(this.region.map[n[0]][n[1]].color);this.tileElements[n[0]][n[1]].rect.fillColor=Xe.colorLerp(r,Phaser.Display.Color.GetColor(255,0,255),i)}}if(Phaser.Input.Keyboard.JustUp(this.upgradeKey)&&-1!==this.hoveredTile[0]&&this._tileActionHandler("upgrade",{tile:this.region.map[this.hoveredTile[1]][this.hoveredTile[0]]}),!0===this.updateBuildings){this.updateBuildings=!1;for(a=0;a<this.region.roads.length;a++){var o=this.region.roads[a],h=this._getBuildingImage(o[1],o[0]);this.tileElements[o[0]][o[1]].building.setTexture(h.sprite,h.tile)}}}}class xt{constructor(e,t,s,i,a,n,r,o){this.backgroundRect=e.add.rectangle(t,s,i,a,r).setOrigin(0,0),this.fillRect=e.add.rectangle(t+1,s+1,i-2,a-2,n).setOrigin(0,0),this.width=i,this.height=a,this.progressText=e.add.bitmapText(t+i/2,s+a/2,"courier16",o).setOrigin(.5,.5)}setPosition(e,t){this.backgroundRect.setPosition(e,t),this.fillRect.setPosition(e+1,t+1),this.progressText.setPosition(e+this.width/2,t+this.height/2)}setVisible(e){this.backgroundRect.setVisible(e),this.fillRect.setVisible(e),this.progressText.setVisible(e)}setFillPercent(e,t=""){e=Math.max(0,Math.min(1,e)),this.fillRect.displayWidth=Math.floor(e*(this.width-2)),this.progressText.setText(t)}}class wt{constructor(e,t,s,i,a,n,r){this.backRect=e.add.rectangle(t,s,i,a,0).setOrigin(0,0),this.backRect.isStroked=!0,this.backRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backRect.lineWidth=1,this.img=e.add.image(t+i/2,s+a/2,n.sprite,n.tile).setOrigin(.5),this.img.displayWidth=i,this.img.displayHeight=a,this.scene=e,this.floatingText=void 0,this.x=t,this.y=s,this.width=i,this.height=a,this.tooltip=Xe.processText(r,40),this.backRect.setInteractive().on("pointerover",()=>{this._showTooltip()}).on("pointerout",()=>{this._removeTooltip()})}setPosition(e,t){this.x=e,this.y=t,this.backRect.setPosition(e,t),this.img.setPosition(e+this.width/2,t+this.height/2)}setVisible(e){this.backRect.setVisible(e),this.img.setVisible(e)}setTooltip(e){this.tooltip=Xe.processText(e,40)}_showTooltip(){if(""!=this.tooltip){void 0!==this.floatingText&&this.floatingText.destroy();var e=this.x+20+(this.x+350>1100?-350:0),t=this.y+(this.y-100<0?0:-100);this.floatingText=new a(this.scene,this.tooltip,e,t,350,100,"courier16",16)}}_removeTooltip(){this.floatingText.destroy(),this.floatingText=void 0}destroy(){void 0!==this.floatingText&&this.floatingText.destroy(),this.backRect.destroy(),this.img.destroy()}}class kt{static getTalentTooltip(e){switch(e.name){case"Strength":return"Each point of Strength increases your damage more. Increases Damage gained by Strength by "+7*e.level+"% + (7%).";case"Dexterity":return"Each point of Dexterity gives more Hit. You gain "+(7+e.level)+" + (1) Hit per Dexterity.";case"Agility":return"Each point of Agility gives more Evasion. You gain "+(7+e.level)+" + (1) Evasion per Agility.";case"Endurance":return"Get more health from Endurance. You gain "+(5+e.level)+" + (1) max Health per Endurance.";case"Recovery":return"Heal wounds as fast as you get them! Increases Health Regen from Recovery by "+8*e.level+"% + (8%).";case"Defense":return"Get more armor from Defense. Increases Armor from Defense by "+13*e.level+"% + (13%).";case"Accuracy":return"Crit even harder. You gain "+(4+.5*e.level)+"% + (0.5%) Crit Damage per Accuracy.";case"Hit":return"Gain even more Hit from all sources. Increase your Hit by "+4*e.level+"% + (4%).";case"Evasion":return"Gain even more Evasion from all sources. Increase your Evasion by "+4*e.level+"% + (4%).";case"Critical":return"Everyone loves to crit, so here is some free crit chance. Increase your crit chance by "+1*e.level+"% + (1%).";case"Bounty":return"Somehow improves how much loot enemies drop. Increases your perception or something? Gain a "+10*e.level+"% + (10%) chance for enemies to drop loot twice.";case"Explorer":return"If you want to explore fast you gotta go fast. Increases your explore speed by "+20*e.level+"% + (20%).";case"Cleave":return"Hit everything super hard. You gain a 20% chance your attacks hit an additional target dealing "+20*e.level+"% + (20%) of your Strength in damage";case"Resilient":return"Brush off critical attacks like they were merely normal attacks. When hit by a crit you reduce the damage by "+5*e.level+"% + (5%) of your Endurance, to a minimum of 2.";case"Quick Recovery":return"All you need is a quick rest between fights and your good to go. Your Health Regen increases by "+25*e.level+"% + (25%) while out of combat.";case"Block":return"Your mastery of defense allows you to sometimes block part of a hit, isn't that great? You have a 20% chance to block "+25*e.level+" + (25%) of your Defense worth of damage.";case"Stunning Hit":return"Hit them so hard you leave them concussed, causing serious long term damage. Each attack has a "+5*e.level+"% + (5%) chance to halt their attack bar for 0.5 seconds.";case"Follow Through":return"The best attacks are those that are immediately followed by more attacks. After attacking, gives a "+5*e.level+"% + (5%) chance that your attack bar starts half full, or half empty if you prefer.";case"Dodge":return"All the Hit in the world can't touch you some of the time. You automatically dodge every "+(13-e.level)+" - (1) Attacks against you.";case"Defy Death":return"Have you tried just... not dying? The next time you take lethal damage, you survive at 1 Health. Can be used again after "+(8-e.level)+" - (1) encounters. I didn't even know I tracked encounters!";case"Second Wind":return"All the best heroes are able to get right back to it after a beat down. When you drop below 50% health your Health Regen is tripled for 10 seconds. Has a "+(80-10*e.level)+" - (10) second cooldown.";case"Parry":return"Why block when you can parry? gives a "+5*e.level+"% + (5%) chance an enemy causes a glancing hit, dealing half damage. Thats still something, right?";case"Double Crit":return"Crit so hard your crits have crits. Gain a chance to crit twice, doubling your crit damage for the attack. Double crit chance is "+1*e.level+"% + (1%) of your normal crit chance.";case"Guardian":return"Getting invaded while you weren't paying attention sucks. Isn't this supposed to be an idle game? Invasions build up "+25*e.level+"% + (25%) slower.";case"Governance":return"Spend less time fighting things and more time learning how they can fight for you! Increases economy and production by "+4*e.level+"% + (4%). This effect is multiplicative, not additive."}}static getBuildingTooltip(e,t){switch(e){case"Lumberyard":return"Produces "+t+"x this tile's Wood yield at the end of each day.";case"Hunter's Lodge":return"Produces "+t+"x this tile's Leather yield at the end of each day.";case"Mine":return"Produces "+t+"x this tile's Metal yield at the end of each day.";case"Herbalist's Hut":return"Produces "+t+"x this tile's Fiber yield at the end of each day.";case"Quarry":return"Produces "+t+"x this tile's Stone yield at the end of each day.";case"Crystal Loom":return"Produces "+t+"x this tile's Crystal yield at the end of each day.";case"Town House":return"Increases the Town's max population by "+5*t+".";case"Watch Tower":return"Increases the defense of all tiles within 2 tiles of this watch tower by "+2*t+".";case"Market":return"Increases the Town's economy by 0-"+10*t+"%, based on distance to the Town and other Markets. Reaches max bonus at 4 tiles.";case"Tavern":return"Increases the Town's economy by "+2*t+"% per house adjacent to them.";case"Road":return"Most buildings must be built adjacent to roads. Production buildings get a boost being adjacent to a road, and produce nothing when more than "+t+" tiles away.";case"Docks":return"Docks don't need roads and enables roads to be built beside them. Increases gold earned per week by "+2*t+", applied before any economy bonus."}}static getTechTooltip(e,t){switch(e.name){case"Forge":return"Each level reduces crafting costs of T"+t+" gear and below by 5%. Don't ask me how this works.";case"Guilds":return"Each level increases resource gain from buildings by 10%.";case"Town Hall":return"Each level increases Bounty gold from killing monsters in this region by 10%. The best quest is the one that pays the most.";case"Market":return"Unlocks the Market. Once built the Market increases tax income by 0-10% based on distance to the Town and other Markets.";case"Tavern":return"Everyone Needs a drink. Unlocks the Tavern, combining your two loves, getting more money and people that pay you money.";case"Reinforced Houses":return"Every man's home is a castle, but more literal. Increases the defense of all buildings by 1.";case"Banking":return"Learn how to make money from nothing! Each level increases tax income by 5% and increases your base gold cap by 50.";case"Map Making":return"Instead of wandering aimlessly, get some villagers to make some maps. Increases exploration speed by 10%."}}static getMoonlightTooltip(e){switch(e.name){case"Moon's Strength":return"Increases your starting Strength by "+e.level+" + (1) and increases Strength from all sources by "+e.level+"% + (1%).";case"Moon's Dexterity":return"Increases your starting Dexterity by "+e.level+" + (1) and increases Dexterity from all sources by "+e.level+"% + (1%).";case"Moon's Agility":return"Increases your starting Agility by "+e.level+" + (1) and increases Agility from all sources by "+e.level+"% + (1%).";case"Moon's Endurance":return"Increases your starting Endurance by "+e.level+" + (1) and increases Endurance from all sources by "+e.level+"% + (1%).";case"Moon's Recovery":return"Increases your starting Recovery by "+e.level+" + (1) and increases Recovery from all sources by "+e.level+"% + (1%).";case"Moon's Defense":return"Increases your starting Defense by "+e.level+" + (1) and increases Defense from all sources by "+e.level+"% + (1%).";case"Moon's Accuracy":return"Increases your starting Accuracy by "+e.level+" + (1) and increases Accuracy from all sources by "+e.level+"% + (1%).";case"Hero's Vault":return"Increases the base income per villager by "+.1*e.level+" + (0.1) gold.";case"Moonwine":return"Taverns count Town Houses within "+(1+e.level)+" + (1) tiles for their bonus.";case"Hardened Villagers":return"Buildings have "+e.level+" + (1) more defense.";case"Shadow's Blessing":return"You gain "+10*e.level+"% + (10%) more shade from monsters.";case"Moon Runes":return"Unlocks Runes. Runes can be found after exploring a tile and can be socketed into gear to provide a random set of bonuses.";case"Dire Beasts":return"Dire versions of beasts can be found which are much stronger than their normal counterparts. Defeating them grants bonus shade, resources, and Motes of Darkness.";case"Heart of Darkness":return"Defeating invasion monsters give "+e.level+" + (1) additional Motes of Darkness.";case"Blackiron Gear":return"Motes of Darkness can reach a "+(20+10*e.level)+"% + (10%) bonus before diminishing returns.";case"Runelands":return"Each region contains "+(5+e.level)+" + (1) hidden runes.";case"Moonlight Workers":return"Production buildings generate "+e.level+"% + (1%) more resources per defense.";case"Hero's Pouch":return"Increases your gold cap by "+100*e.level+" + (100) per town.";case"Night Market":return"Markets increase your economy by 0-"+(7+e.level)+"% + (1%) based on distance between the Town and other Markets.";case"Shadow's Metal":return"Metal yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Leather":return"Leather yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Fiber":return"Fiber yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Stone":return"Stone yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Wood":return"Wood yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Crystal":return"Crystal yields are increased by "+5*e.level+"% + (5%).";case"Shadow's Gold":return"Monsters drop "+.25*e.level+" + (0.25) more gold.";case"Discovery":return"Gain "+10*e.level+" + (10) friendship each time you fully explore a tile.";case"Shadow's Chosen":return"Monsters base shade reward increased by "+1*e.level+" + (1). This is added before other multipliers, such as Shadow's Blessing or monster level.";case"Corrupted Runes":return"Upgrading and Rerolling Runes costs "+Math.floor(100*Math.pow(.93,e.level))+"% - (~7%) fewer Motes of Darkness.";case"Soulbound":return"Gear gains an additional "+e.level+"% + (1%) of their base stats every level."}}static getRegionTooltip(e){switch(e){case"temperate":return"A balanced area where all resources are equally abundant.";case"mountains":return"Mountains and plateau's as far as the eye can see. Home to flying beasts, there is plenty of metal and stone to be found here.";case"desert":return"A hot desert full of horrible creatures with the occasional dry plains full of hungry beasts. At least the crystals shine in the moonlight.";case"forest":return"A massive forest full of the oldest trees waiting to be cut down, beasts to be hunted and plants to be gathered.";case"hills":return"Rolling hills with few plains between them. Full of wild beasts, plants, and the Gnoll's who hunt them."}}static getChallengeDescription(e){switch(e.name){case"A Matter of Years":return"Now that you've reached out into the world and understand the basics why not do it again, but faster. As they say, practice makes perfect!\n\nRestrictions: Reach the 2nd Gate within "+(9-2*e.completions)+" Years.\n\nOn First Completion: Unlock new challenges.\nOn Every Completion: Increases moonlight earned by 15%\n                     +2 Challenge Points\n\nIt is possible to fail this challenge!\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText();case"Forged Ahead":return"Those forge upgrades sure are useful, especially now that all your gear costs "+(10+10*e.completions)+" times as much.\n\nRestrictions: Gear costs increased by "+(10+10*e.completions)+" times.\n              Reach the 2nd Gate.\n\nOn Every Completion: Gear costs are multiplied by x0.925\n                     +2 Challenge Points\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText();case"Giant Lands":return"Is this land massive, or are you just really small? Each region is smaller, but takes 25 times longer to explore. Also all monsters have the Monstrous "+(2+2*e.completions)+" trait.\n\nRestrictions: Exploration needed is increased by 25x\n              Reach Gate "+(1+e.completions)+".\n\nOn Every Completion: Increases explore speed by 25%\n                     +3 Challenge Points\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText();case"Talentless":return"You rely way too much on those talents. Let's see you get through without them.\n\nRestrictions: Talents are removed.\n              Reach Gate "+(3+e.completions)+".\n\nOn Every Completion: Start with +1 Talent points.\n                     Talent costs scale slightly slower.\n                     +3 Challenge Points\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText();case"Lazy Townsfolk":return"None of the townsfolk in this realm know how to work. Either that or they're just really lazy.\n\nRestrictions: Production buildings are unavailable.\n              Reach Gate "+(3+e.completions)+".\n\nOn First Completion: Unlock the Warehouse building.\nOn Every Completion: Increases building production by 10%\n                     +4 Challenge Points\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText();case"Mega Monsters":return"*slaps monster* this baby can fit so many traits inside it. How many? "+(4+2*e.completions)+" traits. That's how many.\n\nRestrictions: Monsters start with "+(4+2*e.completions)+" traits.\n              Reach Gate "+(5+e.completions)+".\n\nOn Every Completion: Monsters give 5% more shade, plus 1% per trait.\n                     +5 Challenge Points\n\nCompletions: "+e.completions+"/"+e.maxCompletions+"\nFastest Time: "+new dt(e.fastestTime).getTimespanText()}}static getTraitTooltip(e){switch(e.type){case Te:return"Dire "+e.level+": Core stats are increased by "+20*e.level+"%, drops motes and gives "+75*e.level+"% more experience.";case Ce:return"Poisoned "+e.level+": Deals "+3*e.level+"% of its max damage per second as true damage.";case Be:return"Monstrous "+e.level+": Attack speed is reduced by 15%. Has "+25*e.level+"% increased health and "+10*e.level+"% increased damage.";case Me:return"Quick "+e.level+": Attack speed is increased by 20%. Has "+25*e.level+"% increased evasion.";case Re:return"Deadly "+e.level+": Crit chance is doubled and has "+5*e.level+"% more damage and crit damage.";case De:return"Shielded "+e.level+": Every 7 seconds gains "+100*e.level+"% of their armor as a shield that absorbs incoming damage.";case He:return"Beserk "+e.level+": Hit chance is increased by "+20*e.level+"%, health regen by "+10*e.level+"% and has a "+Math.floor(100*(1-Math.pow(.92,e.level)))+"% chance to trigger Follow Through."}}static getRuneBonusText(e,t){var s=t>=0?"+":"-";switch(e){case"strPercent":return s+Math.round(100*t)+"% Strength";case"strFlat":return s+Math.floor(t)+" Strength";case"strTalents":return s+Math.floor(t)+" Strength Talents";case"dexPercent":return s+Math.round(100*t)+"% Dexterity";case"dexFlat":return s+Math.floor(t)+" Dexterity";case"dexTalents":return s+Math.floor(t)+" Dexterity Talents";case"agiPercent":return s+Math.round(100*t)+"% Agility";case"agiFlat":return s+Math.floor(t)+" Agility";case"agiTalents":return s+Math.floor(t)+" Agility Talents";case"endPercent":return s+Math.round(100*t)+"% Endurance";case"endFlat":return s+Math.floor(t)+" Endurance";case"endTalents":return s+Math.floor(t)+" Endurance Talents";case"recPercent":return s+Math.round(100*t)+"% Recovery";case"recFlat":return s+Math.floor(t)+" Recovery";case"recTalents":return s+Math.floor(t)+" Recovery Talents";case"defPercent":return s+Math.round(100*t)+"% Defense";case"defFlat":return s+Math.floor(t)+" Defense";case"defTalents":return s+Math.floor(t)+" Defense Talents";case"accPercent":return s+Math.round(100*t)+"% Accuracy";case"accFlat":return s+Math.floor(t)+" Accuracy";case"accTalents":return s+Math.floor(t)+" Accuracy Talents";case"hitPercent":return s+Math.round(100*t)+"% Hit Chance";case"evaPercent":return s+Math.round(100*t)+"% Evasoion";case"weaponPercent":return s+Math.round(100*t)+"% Gear Damage";case"armorPercent":return s+Math.round(100*t)+"% Gear Armor";case"critPercent":return s+Math.round(100*t)+"% Crit Damage";case"healthPercent":return s+Math.round(100*t)+"% Health";case"regenPercent":return s+Math.round(100*t)+"% HP Regen";case"weaponScaling":return s+Math.round(100*t)+" Gear Damage Scaling";case"armorScaling":return s+Math.round(100*t)+" Gear Armor Scaling";case"baseAttackSpeed":return s+Math.round(100*t)+"% Faster Attacks";case"OOCRegen":return s+t+" Out of Combat Regen";case"enemyCrit":return Math.round(100*Math.pow(.92,t))+"% Crit Damage Taken";case"exploreSpeed":return s+Math.round(100*t)+"% Explore Speed";case"friendshipMulti":return s+Math.round(100*t)+"% Friendship Earned";case"critChance":return s+Math.round(100*t)+"% Crit Chance";case"lootFlat":return s+t+" to Loot Dropped";case"lootTalent":return s+Math.round(100*t)+" Bounty Talent";case"moteChance":return s+Math.round(1e3*t)/10+"% Mote on Kill";case"shadeFlat":return s+t+" Shade per Kill";case"regenOnKill":return s+Math.round(10*t)/10+"s of Regen on Kill"}return""}}class Tt{constructor(e,t,s){this.x=t,this.y=s,this.sceneContext=e,this.backingRect=e.add.rectangle(t,s,250,170,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(200,0,0),this.backingRect.lineWidth=2,this.imageRect=e.add.rectangle(t+5,s+5,64,64,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0),this.imageRect.isStroked=!0,this.imageRect.strokeColor=Phaser.Display.Color.GetColor(200,0,0),this.imageRect.lineWidth=2,this.image=e.add.image(t+5,s+5,"enemyicons",63).setOrigin(0),this.image.displayWidth=64,this.image.displayHeight=64,this.nameLabel=e.add.bitmapText(t+75,s+5,"courier20",""),this.damageLabel=e.add.bitmapText(t+75,s+25,"courier16",""),this.armorLabel=e.add.bitmapText(t+75,s+45,"courier16",""),this.hitnameLabel=e.add.bitmapText(t+75,s+65,"courier16",""),this.evasionLabel=e.add.bitmapText(t+75,s+85,"courier16",""),this.healthBar=new xt(e,t+5,s+125,240,14,Phaser.Display.Color.GetColor(170,0,0),Phaser.Display.Color.GetColor(32,32,32)),this.attackBar=new xt(e,t+5,s+145,240,14,Phaser.Display.Color.GetColor(0,140,40),Phaser.Display.Color.GetColor(32,32,32)),this.traitButtons=[]}initWithCreature(e){this.nameLabel.setText(e.name),this.damageLabel.setText("Damage: "+Xe.numberString(Math.floor(e.DamageMin()))+"-"+Xe.numberString(Math.floor(e.DamageMax()))),this.armorLabel.setText("Armor: "+Xe.numberString(Math.floor(e.Armor()))),this.hitnameLabel.setText("Hit: "+Xe.numberString(Math.floor(e.Hit()))),this.evasionLabel.setText("Evasion: "+Xe.numberString(Math.floor(e.Evasion()))),this.healthBar.setFillPercent(e.currentHealth/e.MaxHealth(),Xe.numberString(Math.ceil(e.currentHealth))+"/"+Xe.numberString(e.MaxHealth())),this.attackBar.setFillPercent(e.attackCooldown/e.attackSpeed,Math.floor(e.attackCooldown/e.attackSpeed*100)+"%"),this.image.setTexture(e.icon.sprite,e.icon.tile);for(var t=0;t<this.traitButtons.length;t++)this.traitButtons[t].destroy();this.traitButtons=[];for(t=0;t<e.traits.length;t++){var s={sprite:"icons",tile:63};switch(e.traits[t].type){case Te:s={sprite:"icons",tile:43};break;case Ce:s={sprite:"icons",tile:46};break;case Be:s={sprite:"icons",tile:42};break;case Me:s={sprite:"icons",tile:49};break;case Re:s={sprite:"icons",tile:41};break;case De:s={sprite:"icons",tile:44};break;case He:s={sprite:"icons",tile:45}}this.traitButtons.push(new wt(this.sceneContext,this.x+75+20*t,this.y+105,16,16,s,kt.getTraitTooltip(e.traits[t])))}}setVisible(e){this.backingRect.setVisible(e),this.imageRect.setVisible(e),this.image.setVisible(e),this.nameLabel.setVisible(e),this.damageLabel.setVisible(e),this.armorLabel.setVisible(e),this.hitnameLabel.setVisible(e),this.evasionLabel.setVisible(e),this.healthBar.setVisible(e),this.attackBar.setVisible(e);for(var t=0;t<this.traitButtons.length;t++)this.traitButtons[t].setVisible(e)}setHealthBar(e,t=""){this.healthBar.setFillPercent(e,t)}setAttackBar(e,t=""){this.attackBar.setFillPercent(e,t)}getCenterX(){return this.x+125}getCenterY(){return this.y+85}}class Ct{static getAttackSpeedMultiplier(e,t){return Math.pow(e,A)/Math.pow(t,A)}static getAnimInfoFromKey(e){var t=[];switch(e){case"claws":case"clawscrit":t.push({frameId:0,duration:80}),t.push({frameId:1,duration:80}),t.push({frameId:2,duration:80}),t.push({frameId:3,duration:80})}return t}}class Bt{constructor(e,t,s,i,a,n){this.animInfo=a,this.frameIdx=0,this.duration=0,this.onCompleteCallback=n,this.spriteObj=e.add.image(t,s,i,a[0].frameId)}update(e){this.duration+=e,this.duration>this.animInfo[this.frameIdx].duration&&(this.duration-=this.animInfo[this.frameIdx].duration,this.frameIdx++,this.frameIdx>=this.animInfo.length&&(this.frameIdx=this.frameIdx%this.animInfo.length,void 0!==this.onCompleteCallback&&this.onCompleteCallback()),this.spriteObj.setFrame(this.animInfo[this.frameIdx].frameId))}destroy(){this.spriteObj.destroy()}}class Mt{constructor(){this.combatActive=!1,this.monsters=[],this.globalAttackCooldown=0,this.target=0,this.fightCooldown=ce,this.activeTile=void 0,this.playerHitCallback=void 0,this.creatureHealthCallback=void 0,this.creatureAttackCallback=void 0,this.creatureHitCallback=void 0,this.rewardCallback=void 0,this.playerDefeatCallback=void 0,this.exploreCallback=void 0,this.combatCallback=void 0}registerEvent(e,t){switch(e){case"onPlayerHit":this.playerHitCallback=t;break;case"onCreatureHealthChanged":this.creatureHealthCallback=t;break;case"onCreatureAttackChanged":this.creatureAttackCallback=t;break;case"onCreatureHit":this.creatureHitCallback=t;break;case"onReward":this.rewardCallback=t;break;case"onPlayerDefeat":this.playerDefeatCallback=t;break;case"onExplore":this.exploreCallback=t;break;case"onCombatStart":this.combatCallback=t}return this}_monstersAlive(){for(var e=0;e<this.monsters.length;e++)if(this.monsters[e].currentHealth>0)return!0;return!1}_getTarget(){if(!1===this._monstersAlive())return 0;for(var e=Xe.randint(0,this.monsters.length);this.monsters[e].currentHealth<=0;)e=(e+1)%this.monsters.length;return e}_creatureWorkaround(e){this.monsters[e].registerEvent("onHealthChanged",t=>{this._creatureHealthChanged(t,e)}),this.monsters[e].registerEvent("onAttackCooldownChanged",t=>{this._creatureAttackChanged(t,e)})}_creatureHealthChanged(e,t){void 0!==this.creatureHealthCallback&&this.creatureHealthCallback(e,t)}_creatureAttackChanged(e,t){void 0!==this.creatureAttackCallback&&this.creatureAttackCallback(e,t)}setTile(e){this.activeTile=e}initFight(){this.combatActive=!0,this.monsters=this.activeTile.generateMonsters();for(var e=0;e<this.monsters.length;e++)this._creatureWorkaround(e);this.target=this._getTarget(),void 0!==this.combatCallback&&this.combatCallback()}isInCombat(){return!0===this.combatActive&&this.fightCooldown<=0}stopCombat(){this.combatActive=!1}_handleRewards(){this.fightCooldown=ce;for(var e={tier:this.activeTile.parent.regionLevel,resource:[0,0,0,0,0,0],shade:0,gold:0,motes:0,friendship:0},t=at.getInstance(),s=0;s<this.monsters.length;s++){e.gold+=1+Math.max(1,this.monsters[s].level)/14+.25*Ke.getInstance().moonperks.gold.level,e.shade+=this.monsters[s].xpReward+t.runeBonuses.shadeFlat,console.log(t.runeBonuses.shadeFlat),e.motes+=this.monsters[s].motes,Math.random()<t.runeBonuses.moteChance&&(e.motes+=1);for(var i=t.getTalentLevel("bounty"),a=1+i/10+(i%10/10>Math.random()?1:0),n=0;n<a;n++){var r=Xe.randint(0,this.monsters[s].drops.length),o=Math.max(1,this.monsters[s].level-Math.max(0,20*Math.min(8,Math.floor(this.monsters[s].level/20))));e.resource[this.monsters[s].drops[r].type]+=Math.max(0,this.monsters[s].drops[r].amount*o)+t.runeBonuses.lootFlat}e.friendship+=this.activeTile.getFriendshipReward()}e.gold=(e.gold+(this.activeTile.explored?1:5))*this.activeTile.parent.townData.bountyMulti,e.shade*=Ke.getInstance().getShadowBonus()*this.activeTile.parent.townData.getFriendshipBonus(),e.friendship*=1+t.runeBonuses.friendshipMulti,!0===this.activeTile.isInvaded&&(!1===ze.getInstance().unlocks.motes&&ze.getInstance().registerFeatureUnlocked(y,"Well it happened. Some big bad monsters came back to spew their horrible mists all over the place again, but fortunately for you you had prepared for this. After killing the great misty one in the back it dropped something you haven't seen before... sort of like Shade, but like, more solid. You should probably just call them Motes of Darkness. I'm sure the townsfolk will be super impressed if you bring this dumb stone back and call it that.\n\nOh, you can probably try putting it on your weapon if you really wanted to. It's up to you."),e.motes+=1+Ke.getInstance().moonperks.heartofdarkness.level,this.activeTile.invasionFights-=1,this.activeTile.invasionFights<=0&&ut.getInstance().getCurrentRegion().endSighting(this.activeTile.x,this.activeTile.y)),void 0!==this.rewardCallback&&this.rewardCallback(e)}update(e){if(!1!==this.combatActive)if(this.globalAttackCooldown>0)this.globalAttackCooldown-=e;else{var t=at.getInstance();if(!0===this._monstersAlive()){for(var s=0;s<this.monsters.length;s++)if(!(this.monsters[s].currentHealth<=0)){var i=Ct.getAttackSpeedMultiplier(this.monsters[s].Hit(),t.statBlock.Evasion());this.monsters[s].tickAttackCooldown(e,i),this.monsters[s].tickRegen(e);var a=this.monsters[s].findTrait(Ce);if(void 0!==a&&t.statBlock.takeDamage(.03*this.monsters[s].DamageMax()*a.level*(e/1e3),!1,!0),!0===this.monsters[s].canAttack()){var n=this.monsters[s].CritChance()>Math.random();this.monsters[s].attack(t.statBlock,n);this.globalAttackCooldown=150,void 0!==this.playerHitCallback&&this.playerHitCallback(this.monsters[s],n);break}}i=Ct.getAttackSpeedMultiplier(t.statBlock.Hit(),this.monsters[this.target].Evasion());if(t.statBlock.tickAttackCooldown(e,i),!0===t.statBlock.canAttack()){n=t.statBlock.CritChance()>Math.random();if(t.statBlock.attack(this.monsters[this.target],n),this.monsters[this.target].currentHealth<=0&&t.statBlock.heal(t.statBlock.HealthRegen()*t.runeBonuses.regenOnKill),t.getTalentLevel("cleave")>0&&Math.random()<.2){var r=this.target;for(s=0;s<this.monsters.length;s++){var o=(r+s)%this.monsters.length;if(void 0!==this.monsters[o]&&this.monsters[o].currentHealth>0){r=o;break}}r!==this.target&&(n=t.statBlock.CritChance()>Math.random(),t.statBlock.cleave(this.monsters[r],n),this.monsters[r].currentHealth<=0&&t.statBlock.heal(t.statBlock.HealthRegen()*t.runeBonuses.regenOnKill),void 0!==this.creatureHitCallback&&this.creatureHitCallback(r,n))}void 0!==this.creatureHitCallback&&this.creatureHitCallback(this.target,n),this.target=this._getTarget(),this.globalAttackCooldown=150}!1===this._monstersAlive()&&(this._handleRewards(),t.statBlock.encounterCounter-=1),t.statBlock.currentHealth<=0&&void 0!==this.playerDefeatCallback&&(t.statBlock.currentHealth=0,this.combatActive=!1,this.playerDefeatCallback())}else{this.fightCooldown-=e;var h=this.activeTile.explore(e);void 0!==this.exploreCallback&&this.exploreCallback(this.activeTile,h),this.fightCooldown<=0&&this.initFight()}}}}class Rt extends i{constructor(e,t){super(e,t),this.player=at.getInstance(),this.onRewardHandlers=[],this.onExploreHandlers=[],this.regionTier=0,this.playerHitAnim=void 0,this.monsterHitAnim=[void 0,void 0,void 0],this.progression=new ze,this.combatManager=(new Mt).registerEvent("onPlayerHealthChanged",e=>{this._playerHealthCallback(e)}).registerEvent("onPlayerAttackChanged",e=>{this._playerAttackCooldownCallback(e)}).registerEvent("onPlayerHit",(e,t)=>{this._setupPlayerAnim(e,t)}).registerEvent("onCreatureHealthChanged",(e,t)=>{this._monsterHealthCallback(e,t)}).registerEvent("onCreatureAttackChanged",(e,t)=>{this._monsterAttackCooldownCallback(e,t)}).registerEvent("onCreatureHit",(e,t)=>{this._setupMonsterAnim(e,t)}).registerEvent("onReward",(e,t)=>{this._rewardCallback(e,t)}).registerEvent("onPlayerDefeat",()=>{this._playerDefeatCallback()}).registerEvent("onExplore",(e,t)=>{this._exploreCallback(e,t)}).registerEvent("onCombatStart",()=>{this._onCombatCallback()})}enableScene(){}disableScene(){}_playerHealthCallback(e){this.playerDisplay.setHealthBar(e/this.player.statBlock.MaxHealth(),Xe.numberString(Math.ceil(e))+"/"+Xe.numberString(this.player.statBlock.MaxHealth()))}_playerAttackCooldownCallback(e){this.playerDisplay.setAttackBar(e/this.player.statBlock.attackSpeed,Math.floor(e/this.player.statBlock.attackSpeed*100)+"%")}_monsterHealthCallback(e,t){e=Math.max(0,e),this.monsterDiplays[t].setHealthBar(e/this.combatManager.monsters[t].MaxHealth(),Xe.numberString(Math.ceil(e))+"/"+Xe.numberString(this.combatManager.monsters[t].MaxHealth()))}_monsterAttackCooldownCallback(e,t){this.monsterDiplays[t].setAttackBar(e/this.combatManager.monsters[t].attackSpeed,Math.floor(e/this.combatManager.monsters[t].attackSpeed*100)+"%")}_rewardCallback(e,t){this._hideEnemyDisplays(),this.restButton.setVisible(!0);for(var s=0;s<this.onRewardHandlers.length;s++)this.onRewardHandlers[s](e,t)}_playerDefeatCallback(){this._hideEnemyDisplays(),this.progression.registerDeath(1),this.restButton.setVisible(!0)}_updatePlayerBlock(){this.playerDisplay.initWithCreature(this.player.statBlock)}_onExplore(e){for(var t=0;t<this.onExploreHandlers.length;t++)this.onExploreHandlers[t](e,this.regionTier)}_hideEnemyDisplays(){for(var e=0;e<this.monsterDiplays.length;e++)this.monsterDiplays[e].setVisible(!1)}_setupPlayerAnim(e,t=!1){void 0!==this.playerHitAnim&&this._removePlayerAnim();var s=this.playerDisplay.getCenterX(),i=this.playerDisplay.getCenterY(),a=!0===t?e.critAnim:e.hitAnim;this.playerHitAnim=new Bt(this,s,i,a,Ct.getAnimInfoFromKey(a),()=>{this._removePlayerAnim()})}_removePlayerAnim(){this.playerHitAnim.destroy(),this.playerHitAnim=void 0}_setupMonsterAnim(e,t=!1){void 0!==this.monsterHitAnim[e]&&this._removeMonsterAnim(e);var s=this.monsterDiplays[e].getCenterX(),i=this.monsterDiplays[e].getCenterY(),a=!0===t?this.player.statBlock.critAnim:this.player.statBlock.hitAnim;this.monsterHitAnim[e]=new Bt(this,s,i,a,Ct.getAnimInfoFromKey(a),()=>{this._removeMonsterAnim(e)})}_removeMonsterAnim(e){this.monsterHitAnim[e].destroy(),this.monsterHitAnim[e]=void 0}_restHandler(){!0===this.combatManager.combatActive?(this.restButton.setText("Explore"),this.combatManager.stopCombat()):(this.restButton.setText("Rest"),this.combatManager.combatActive=!0)}registerEvent(e,t){"onReward"===e?this.onRewardHandlers.push(t):"onExplore"===e&&this.onExploreHandlers.push(t)}initFight(e){e.amountExplored>=e.explorationNeeded?this.explorationBar.setFillPercent(e.amountExplored/e.explorationNeeded,"Explored"):this.explorationBar.setFillPercent(e.amountExplored/e.explorationNeeded,Math.floor(e.amountExplored/e.explorationNeeded*100)+"%"),this.combatManager.setTile(e),this.combatManager.initFight(),this.regionTier=ut.instance.getCurrentRegion().regionLevel}rebirth(){this.combatManager.stopCombat(),this._hideEnemyDisplays()}preload(){this.load.spritesheet("claws","./../../assets/anims/clawanim.png",{frameWidth:128,frameHeight:128}),this.load.spritesheet("clawscrit","./../../assets/anims/clawanimcrit.png",{frameWidth:128,frameHeight:128})}create(){this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.explorationBar=new xt(this,this.relativeX(10),this.relativeY(10),880,20,Phaser.Display.Color.GetColor(0,0,255),Phaser.Display.Color.GetColor(32,32,64)),this.monsterDiplays=[],this.monsterDiplays.push(new Tt(this,this.relativeX(325),this.relativeY(70))),this.monsterDiplays.push(new Tt(this,this.relativeX(100),this.relativeY(170))),this.monsterDiplays.push(new Tt(this,this.relativeX(550),this.relativeY(170))),this.playerDisplay=new Tt(this,this.relativeX(325),this.relativeY(460)),this.playerDisplay.initWithCreature(this.player.statBlock),this._hideEnemyDisplays(),this.restButton=new gt(this,this.relativeX(800),this.relativeY(40),80,20,"Rest").onClickHandler(()=>{this._restHandler()}),this.player.statBlock.registerEvent("onHealthChanged",e=>{this._playerHealthCallback(e)}),this.player.statBlock.registerEvent("onAttackCooldownChanged",e=>{this._playerAttackCooldownCallback(e)}),this.player.registerEvent("onStatChanged",()=>{this._updatePlayerBlock()})}_updateAnimations(e){void 0!==this.playerHitAnim&&this.playerHitAnim.update(e);for(var t=0;t<this.monsterHitAnim.length;t++)void 0!==this.monsterHitAnim[t]&&this.monsterHitAnim[t].update(e)}_exploreCallback(e,t){e.amountExplored>=e.explorationNeeded?this.explorationBar.setFillPercent(e.amountExplored/e.explorationNeeded,"Explored"):this.explorationBar.setFillPercent(e.amountExplored/e.explorationNeeded,Math.floor(e.amountExplored/e.explorationNeeded*100)+"%"),!0===t&&this._onExplore(e)}_onCombatCallback(){this._hideEnemyDisplays();for(var e=this.combatManager.monsters,t=0;t<e.length;t++)this.monsterDiplays[t].setVisible(!0),this.monsterDiplays[t].initWithCreature(e[t]);this.restButton.setVisible(!1),this.playerDisplay.initWithCreature(this.player.statBlock)}isInCombat(){return this.combatManager.isInCombat()}update(e,t){var s=ut.instance.time.frameDelta;this._updateAnimations(s),this.combatManager.update(s)}}class Dt{constructor(e,t,s,i,a,n,r){var o=Xe.processText(i,a);this.textLabel=e.add.bitmapText(t,s,n,o,r),this.height=this.textLabel.getTextBounds(!0).local.height+5,this.separator=e.add.rectangle(t+10,s+this.height,t+a*r-20,4,Phaser.Display.Color.GetColor(64,64,64)).setOrigin(0,0),this.x=t,this.y=s}getHeight(){return this.y+this.height+10}getPosX(){return this.x}getPosY(){return this.y}setPosition(e,t){this.textLabel.setPosition(e,t),this.separator.setPosition(e,t+this.height)}destroy(){this.textLabel.destroy(),this.separator.destroy()}}class Ht{constructor(){return Ht.instance||(this.lore=[],Ht.instance=this),Ht.instance}rebirth(){this.lore=[]}addLore(e){this.lore.push(e)}save(){return{lore:this.lore}}load(e,t){this.lore=e.lore}}class It extends i{constructor(e,t){super(e,t),this.labels=[],this.labelIndex=0,this.loreStore=new Ht,this.labelCount=void 0}relativeX(e){return super.relativeX(e)+1e3}rebirth(){this.cameras.getCamera("loreBox").scrollY=this.relativeY(0);for(var e=0;e<this.labels.length;e++)this.labels[e].destroy();this.labels=[],this.labelIndex=0}create(){this.cameras.add(super.relativeX(0),this.relativeY(30),900,670,!1,"loreBox"),this.cameras.getCamera("loreBox").scrollX=this.relativeX(0),this.cameras.getCamera("loreBox").scrollY=this.relativeY(0),this.add.rectangle(super.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.progresion=new ze,this.progresion.addOnUnlockHandler((e,t,s)=>{this._handleProgressionEvents(e,t,s)}),this.upButton=new gt(this,super.relativeX(20),this.relativeY(5),60,20,"up"),this.upButton.onClickHandler(()=>{this._scrollUp()}),this.downButton=new gt(this,super.relativeX(80),this.relativeY(5),60,20,"down"),this.downButton.onClickHandler(()=>{this._scrollDown()});for(var e=0;e<this.loreStore.lore.length;e++)this.addText(this.loreStore.lore[e],!1);this._scrollTo(this.labels.length-1),this.labelCount=this.add.bitmapText(super.relativeX(170),this.relativeY(5),"courier20",this.labelIndex+1+"/"+this.labels.length)}_scrollUp(){this.labelIndex>0&&(this.labelIndex-=1),this._scrollTo(this.labelIndex)}_scrollDown(){this.labelIndex<this.labels.length-1&&(this.labelIndex+=1),this._scrollTo(this.labelIndex)}_scrollTo(e){e<0||e>=this.labels.length||(this.labelIndex=e,this.cameras.getCamera("loreBox").scrollY=this.labels[this.labelIndex].getPosY()-10,void 0!==this.labelCount&&this.labelCount.setText(this.labelIndex+1+"/"+this.labels.length))}_handleProgressionEvents(e,t,s){void 0!==s&&""!==s&&this.addText(s)}addText(e,t=!0){!0===t&&this.loreStore.addLore(e);var s=this.relativeX(10),i=this.relativeY(10);0!==this.labels.length&&(s=this.labels[this.labels.length-1].getPosX(),i=this.labels[this.labels.length-1].getHeight()),this.labels.push(new Dt(this,s,i,e,85,"courier20",20)),void 0!==this.labelCount&&this.labelCount.setText(this.labelIndex+1+"/"+this.labels.length)}}class Lt{constructor(e,t,s,i,a){this.tech=i,this.townTier=a,this.backingRect=e.add.rectangle(t+1,s+1,648,113,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(200,112,65),this.backingRect.lineWidth=1,this.nameLabel=e.add.bitmapText(t+5,s+5,"courier20",i.name+" Lv"+i.level),this.nameLabel.setTint(Phaser.Display.Color.GetColor(212,175,55));var n=Xe.processText(kt.getTechTooltip(i,a),77);this.descLabel=e.add.bitmapText(t+5,s+25,"courier16",n);for(var r="Cost: "+nt.getTechGoldCost(i,a)+" Gold",o=nt.getTechResourceCost(i,a),h=0;h<o.length;h++)o[h]>0&&(r+=", "+Xe.getCostText(h,o[h]));r+=", Friend Level "+i.level,r=Xe.processText(r,67),this.costLabel=e.add.bitmapText(t+5,s+80,"courier16",r),-1!==i.maxLevel&&i.level>=i.maxLevel?(this.buyBtn=new gt(e,t+545,s+90,100,20,"Maxed").onClickHandler(()=>{this._onClick()}),this.buyBtn.setEnable(!1)):this.buyBtn=new gt(e,t+545,s+90,100,20,"Upgrade").onClickHandler(()=>{this._onClick()}),this.onClickHandlers=[]}registerClick(e){return this.onClickHandlers.push(e),this}_onClick(){for(var e=0;e<this.onClickHandlers.length;e++)this.onClickHandlers[e]()}destroy(){this.backingRect.destroy(),this.nameLabel.destroy(),this.descLabel.destroy(),this.costLabel.destroy(),this.buyBtn.destroy()}}class St extends i{constructor(e,t){super(e,t),this.showBuildings=!0}rebirth(){this.showBuildings=!0,this._updateStatus(),this.upgradesBtn.setVisible(!1)}changeRegion(){this._updateStatus(),this.upgradesBtn.setVisible(ut.instance.getCurrentRegion().townData.researchEnabled)}create(){var e=new ze;this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.townNameLabel=this.add.bitmapText(this.relativeX(10),this.relativeY(10),"courier20","Town"),this.regionNameLabel=this.add.bitmapText(this.relativeX(10),this.relativeY(30),"courier16","Region "),this.statsLabel=this.add.bitmapText(this.relativeX(15),this.relativeY(50),"courier16",""),this.buildingBtn=new gt(this,this.relativeX(240),this.relativeY(10),120,20,"Buildings").onClickHandler(()=>{this._showBuildings(!0)}),this.upgradesBtn=new gt(this,this.relativeX(370),this.relativeY(10),120,20,"Research").onClickHandler(()=>{this._showBuildings(!1)}),this.upgradesBtn.setVisible(ut.instance.getCurrentRegion().townData.researchEnabled),this.buildingDisplays=[],this._updateStatus(),(new ut).time.registerEvent("onDayEnd",()=>{this._endOfDay()}),e.addOnUnlockHandler((e,t,s)=>{this._handleProgressionChange(e)})}_handleProgressionChange(e){e===g&&this.upgradesBtn.setVisible(!0)}_setupTechDisplay(e,t,s,i){return new Lt(this,e,t,s,i).registerClick(()=>{this._handleTechUpgrade(s)})}_handleTechUpgrade(e){var t=ut.instance.getCurrentRegion(),s=nt.getTechGoldCost(e,t.townData.tier),i=nt.getTechResourceCost(e,t.townData.tier),a=new at;a.gold>=s&&!0===Xe.canCraft(i,a.resources[t.townData.tier-1])&&t.townData.friendshipLevel>=e.level&&(a.addGold(-s),a.spendResource(i,t.townData.tier-1),t.townData.increaseTechLevel(e),this._updateStatus())}_showBuildings(e){this.showBuildings=e,this._updateStatus()}_updateStatus(){for(var e=ut.instance.getCurrentRegion(),t=new at,s=1+.04*t.getTalentLevel("governance"),i="Population: "+Math.round(e.townData.currentPopulation)+"/"+Math.floor(e.townData.getMaxPopulation())+"\nTax Income: "+Math.round(e.townData.getTownIncome())+"g/week\nT"+e.townData.tier+" Crafting Cost: "+Math.round(1e4*t.craftingCosts[e.townData.tier-1])/100+"%\nEconomy: "+Math.round(100*e.townData.economyMulti*s)+"%\nProduction: "+Math.round(100*e.townData.productionMulti)+"%\nBounty Gold: "+Math.round(100*e.townData.bountyMulti)+"%\nFriendship: "+Math.floor(e.townData.friendship)+"/"+e.townData.friendshipToNext+"\nFriendship\nLevel: "+e.townData.friendshipLevel+" (+"+Math.round(100*(e.townData.getFriendshipBonus()-1))+"% Shade)\nDaily Production:\n",a=0;a<e.resourcesPerDay.length;a++)i+="  "+L[a]+": "+Math.floor(e.resourcesPerDay[a]*e.townData.productionMulti*s*100)/100+"\n";e.alchemyDrain>0&&(i+="  Alchemy Drain: "+e.alchemyDrain+"\n  Alchemy Gain: "+Math.round(100*e.alchemyGain)/100),this.statsLabel.setText(i),this.regionNameLabel.setText("Region "+(e.regionLevel+1));for(a=0;a<this.buildingDisplays.length;a++)this.buildingDisplays[a].destroy();if(!0===this.showBuildings){var n=0;for(const t in e.townData.buildings)this.buildingDisplays.push(this._setupTechDisplay(this.relativeX(240),this.relativeY(50+120*n),e.townData.buildings[t],e.townData.tier)),n+=1}else{n=0;for(const t in e.townData.upgrades)this.buildingDisplays.push(this._setupTechDisplay(this.relativeX(240),this.relativeY(50+120*n),e.townData.upgrades[t],e.townData.tier)),n+=1}}_endOfDay(){this._updateStatus()}}class _t{constructor(e,t,s,i){var a=new ze;this.gear=i,this.backingRect=e.add.rectangle(t+1,s+1,298,208,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backingRect.lineWidth=1;var n=i.name+" Lv"+i.level;this.nameLabel=e.add.bitmapText(t+5,s+5,n.length>18?"courier16":"courier20",n);var r=["Weapon","Armor","Trinket"],o=0===i.tier?"Broken "+r[i.slotType]:"Tier "+i.tier+" "+r[i.slotType];this.typeLabel=e.add.bitmapText(t+5,s+25,"courier16",o),this.moteButton=void 0,this.runeButton=void 0,this.moteLabel=void 0,i.level>0&&!0===a.unlocks.motes&&(i.motesFused>0&&(this.moteLabel=e.add.bitmapText(t+258,s+21,"courier16","+"+Math.floor(1e3*i.getMotePower())/10+"%").setOrigin(1,.5),this.moteLabel.setTint(Phaser.Display.Color.GetColor(200,0,200))),this.moteButton=new pt(e,t+263,s+5,32,32,{sprite:"icons",tile:39}).onClickHandler(()=>{this._onFuse()})),i.level>0&&!0===a.unlocks.runes&&(this.runeButton=new pt(e,t+263,s+40,32,32,{sprite:"runeicons",tile:0}).onClickHandler(()=>{this._onRune()})),this.statLabels=[];var h="",l=i.getStatBonuses();for(const e in l)0!==l[e]&&(h+=Xe.getBonusText(e,l[e])+"\n");if(this.statLabels.push(e.add.bitmapText(t+5,s+45,"courier16",h)),!0===a.unlocks.resourceUI){var c=new at,d=i.tier<=0?1:c.craftingCosts[i.tier-1];h="";for(var u=0;u<i.costs.length;u++)0!==i.costs[u]&&(h+=Xe.getCostText(u,Math.floor(i.costs[u]*d))+"\n");this.statLabels.push(e.add.bitmapText(t+148,s+45,"courier16",h))}this.equipBtn=void 0,this.upgradeBtn=void 0,0===i.level?(this.upgradeBtn=new gt(e,t+79,s+185,142,20,"Forge"),this.upgradeBtn.onClickHandler(()=>{this._onUpgrade()})):!0===a.unlocks.resourceUI?(this.equipBtn=new gt(e,t+5,s+185,142,20,"Equip"),this.equipBtn.onClickHandler(()=>{this._onEquip()}),this.upgradeBtn=new gt(e,t+153,s+185,142,20,"Upgrade"),this.upgradeBtn.onClickHandler(()=>{this._onUpgrade()})):(this.equipBtn=new gt(e,t+79,s+185,142,20,"Equip"),this.equipBtn.onClickHandler(()=>{this._onEquip()})),this.onEquipHandlers=[],this.onUpgradeHandlers=[],this.onFuseHandlers=[],this.onRuneHandlers=[]}registerEvents(e,t){return"onEquip"===e?this.onEquipHandlers.push(t):"onUpgrade"===e?this.onUpgradeHandlers.push(t):"onFuse"===e?this.onFuseHandlers.push(t):"onRune"===e&&this.onRuneHandlers.push(t),this}_onEquip(){for(var e=0;e<this.onEquipHandlers.length;e++)this.onEquipHandlers[e](this.gear)}_onUpgrade(){for(var e=0;e<this.onUpgradeHandlers.length;e++)this.onUpgradeHandlers[e](this.gear)}_onFuse(){for(var e=0;e<this.onFuseHandlers.length;e++)this.onFuseHandlers[e](this.gear)}_onRune(){for(var e=0;e<this.onRuneHandlers.length;e++)this.onRuneHandlers[e](this.gear)}destroy(){this.backingRect.destroy(),this.nameLabel.destroy(),this.typeLabel.destroy();for(var e=0;e<this.statLabels.length;e++)this.statLabels[e].destroy();void 0!==this.equipBtn&&this.equipBtn.destroy(),void 0!==this.upgradeBtn&&this.upgradeBtn.destroy(),void 0!==this.moteLabel&&this.moteLabel.destroy(),void 0!==this.moteButton&&this.moteButton.destroy(),void 0!==this.runeButton&&this.runeButton.destroy()}}class Pt{constructor(e,t,s,i){if(void 0===i)this.nameLabel=e.add.bitmapText(t+5,s+5,"courier20","Nothing"),this.typeLabel=e.add.bitmapText(t+5,s+25,"courier16",""),this.statLabel=e.add.bitmapText(t+5,s+45,"courier16","");else{this.nameLabel=e.add.bitmapText(t+5,s+5,"courier20",i.name+" Lv"+i.level);this.typeLabel=e.add.bitmapText(t+5,s+25,"courier16","Tier "+i.tier+" "+["Weapon","Armor","Trinket"][i.slotType]);var a="",n=i.getStatBonuses();for(const e in n)a+=Xe.getBonusText(e,n[e])+"\n";this.statLabel=e.add.bitmapText(t+5,s+45,"courier16",a)}}getTextBounds(){return 30+this.statLabel.getTextBounds(!0).local.height}destroy(){this.nameLabel.destroy(),this.typeLabel.destroy(),this.statLabel.destroy()}}class Et{constructor(e,t,s,i){this.selectedRune=-1,this.gear=i,this.scene=e,this.x=t,this.y=s,this.backRect=e.add.rectangle(t,s,700,500,Phaser.Display.Color.GetColor(0,0,0)).setInteractive().setOrigin(0,0),this.backRect.isStroked=!0,this.backRect.strokeColor=Phaser.Display.Color.GetColor(128,128,128),this.backRect.lineWidth=2,this.separator=e.add.rectangle(t+250,s,2,500,Phaser.Display.Color.GetColor(128,128,128)).setOrigin(0,0),this.socketTitle=e.add.bitmapText(t+5,s+5,"courier20","SOCKETS").setOrigin(0,0),this.runeTitle=e.add.bitmapText(t+260,s+5,"courier20","RUNES").setOrigin(0,0),this.cancelBtn=new gt(this.scene,this.x+575,this.y+475,120,20,"Cancel"),this.gearRuneImages=[],this.runeBonuses=[],this.runeInventory=[],this._setupViews()}_setupViews(){for(var e=0;e<this.gearRuneImages.length;e++)this.gearRuneImages[e].destroy();for(e=0;e<this.runeBonuses.length;e++)this.runeBonuses[e].destroy();for(e=0;e<this.runeInventory.length;e++)this.runeInventory[e].destroy();void 0!==this.floatingText&&this.floatingText.destroy(),this.gearRuneImages=[],this.runeBonuses=[],this.runeInventory=[];for(e=0;e<this.gear.runes.length;e++){var t=this.x+7+36*e,s=this.y+27+e%2*36;this.gearRuneImages.push(this._setupRuneSocket(this.scene,this.gear.runes[e],t,s,e))}var i=this.y+140;for(e=0;e<this.gear.compiledRunes.length;e++){var a=this.scene.add.bitmapText(this.x+15,i,"courier20",this.gear.compiledRunes[e].word+" Lv"+this.gear.compiledRunes[e].level);a.setTint(Phaser.Display.Color.GetColor(200,0,200)),this.runeBonuses.push(a);var n="";for(const t in this.gear.compiledRunes[e].bonus)n+=kt.getRuneBonusText(t,this.gear.compiledRunes[e].bonus[t])+"\n";a=this.scene.add.bitmapText(this.x+15,i+20,"courier16",n),this.runeBonuses.push(a),i+=20+a.getTextBounds(!0).local.height+10}var r=at.getInstance();for(e=0;e<r.runes.length;e++){t=this.x+258+e%8*55,s=this.y+30+55*Math.floor(e/8);this.runeInventory.push(this._setupRuneInventory(this.scene,r.runes[e],t,s,e))}}_slotRune(e){-1!==this.selectedRune&&(at.getInstance().unequip(this.gear.slotType),this.gear.addRune(at.getInstance().runes[this.selectedRune],e),at.getInstance().removeRune(this.selectedRune),at.getInstance().equip(this.gear),this._setupViews(),this.selectedRune=-1)}_selectRune(e){-1!==this.selectedRune&&this.runeInventory[this.selectedRune].setBorderTint(Phaser.Display.Color.GetColor(255,255,255)),this.selectedRune=e,this.runeInventory[this.selectedRune].setBorderTint(Phaser.Display.Color.GetColor(0,255,0))}_setupRuneSocket(e,t,s,i,a){var n=et.getBonusForRune(t),r=t.word+" Lv"+t.level+"\n";for(const e in n)r+=kt.getRuneBonusText(e,n[e])+"\n";var o=new pt(e,s,i,48,48,et.getRuneTexture(t.word));return o.onClickHandler(()=>{this._slotRune(a)}),"Empty"!=t.word&&o.onPointerOverHandler(()=>{this._showTooltip(e,r,s,i)}).onPointerOutHandler(()=>{this._removeTooltip()}),o.removeBackground(),o}_setupRuneInventory(e,t,s,i,a){var n=et.getBonusForRune(t),r=t.word+" Lv"+t.level+"\n";for(const e in n)r+=kt.getRuneBonusText(e,n[e])+"\n";var o=new pt(e,s,i,48,48,et.getRuneTexture(t.word));return o.onClickHandler(()=>{this._selectRune(a)}).onPointerOverHandler(()=>{this._showTooltip(e,r,s,i)}).onPointerOutHandler(()=>{this._removeTooltip()}),o}_showTooltip(e,t,s,i){void 0!==this.floatingText&&this.floatingText.destroy();var n=s+(s+200>1100?-152:0),r=i+(i-60<100?50:-62);this.floatingText=new a(e,t,n,r,200,60,"courier16",16)}_removeTooltip(){this.floatingText.destroy(),this.floatingText=void 0}onCancelHandler(e){return this.cancelBtn.onClickHandler(()=>{e()}),this}destroy(){this.backRect.destroy(),this.separator.destroy(),this.socketTitle.destroy(),this.runeTitle.destroy(),this.cancelBtn.destroy();for(var e=0;e<this.gearRuneImages.length;e++)this.gearRuneImages[e].destroy();for(e=0;e<this.runeBonuses.length;e++)this.runeBonuses[e].destroy();for(e=0;e<this.runeInventory.length;e++)this.runeInventory[e].destroy();void 0!==this.floatingText&&this.floatingText.destroy()}}class At{constructor(e,t,s){this.selectedRune=-1,this.scene=e,this.x=t,this.y=s,this.backRect=e.add.rectangle(t,s,700,500,Phaser.Display.Color.GetColor(0,0,0)).setInteractive().setOrigin(0,0),this.backRect.isStroked=!0,this.backRect.strokeColor=Phaser.Display.Color.GetColor(128,128,128),this.backRect.lineWidth=2,this.separator=e.add.rectangle(t+250,s,2,500,Phaser.Display.Color.GetColor(128,128,128)).setOrigin(0,0),this.upgradeTitle=e.add.bitmapText(t+5,s+5,"courier20","UPGRADE").setOrigin(0,0),this.runeTitle=e.add.bitmapText(t+260,s+5,"courier20","RUNES").setOrigin(0,0),this.runeInventory=[],this.upgradeRune=this.scene.add.image(t+125,s+50,"runeicons",0).setOrigin(.5),this.upgradeRune.displayWidth=48,this.upgradeRune.displayHeight=48,this.runeText=[],this.upgradeTxt=this.scene.add.bitmapText(this.x+125,this.y+330,"courier16","Empower this rune with\nMotes of Darkness").setOrigin(.5,0),this.upgradeTxt.setCenterAlign(),this.upgradeBtn=new gt(this.scene,this.x+20,this.y+370,120,20,"Upgrade"),this.upgradeBtn.onClickHandler(()=>{this._upgradeRune()}),this.rerollTxt=this.scene.add.bitmapText(this.x+125,this.y+400,"courier16","Use Motes to Reforge this\nRune into a different Rune.").setOrigin(.5,0),this.rerollTxt.setCenterAlign(),this.rerollBtn=new gt(this.scene,this.x+20,this.y+445,120,20,"Reroll"),this.rerollBtn.onClickHandler(()=>{this._rerollRune()}),this.cancelBtn=new gt(this.scene,this.x+575,this.y+475,120,20,"Cancel"),this.upgradeCost=this.scene.add.bitmapText(this.x+205,this.y+371,"courier16","").setOrigin(1,0),this.rerollCost=this.scene.add.bitmapText(this.x+205,this.y+446,"courier16","").setOrigin(1,0),this.upgradeIcon=this.scene.add.image(t+220,s+380,"icons",39),this.upgradeIcon.displayWidth=20,this.upgradeIcon.displayHeight=20,this.rerollIcon=this.scene.add.image(t+220,s+455,"icons",39),this.rerollIcon.displayWidth=20,this.rerollIcon.displayHeight=20,this.upgradeUI=[this.upgradeTxt,this.upgradeBtn,this.rerollTxt,this.rerollBtn,this.upgradeCost,this.rerollCost,this.upgradeIcon,this.rerollIcon],this._setupViews();for(var i=0;i<this.upgradeUI.length;i++)this.upgradeUI[i].setVisible(!1)}_setupViews(){for(var e=0;e<this.runeInventory.length;e++)this.runeInventory[e].destroy();void 0!==this.floatingText&&this.floatingText.destroy(),this.runeInventory=[];var t=at.getInstance();for(e=0;e<t.runes.length;e++){var s=this.x+258+e%8*55,i=this.y+30+55*Math.floor(e/8);this.runeInventory.push(this._setupRuneInventory(this.scene,t.runes[e],s,i,e))}-1!==this.selectedRune&&this._selectRune(this.selectedRune)}_selectRune(e){for(var t=0;t<this.runeText.length;t++)this.runeText[t].destroy();this.runeText=[],-1!==this.selectedRune&&this.runeInventory[this.selectedRune].setBorderTint(Phaser.Display.Color.GetColor(255,255,255)),this.selectedRune=e,this.runeInventory[this.selectedRune].setBorderTint(Phaser.Display.Color.GetColor(0,255,0));var s=at.getInstance().runes[this.selectedRune],i=et.getRuneTexture(s.word);this.upgradeRune.destroy(),this.upgradeRune=this.scene.add.image(this.x+125,this.y+50,i.sprite,i.tile).setOrigin(.5),this.upgradeRune.displayWidth=48,this.upgradeRune.displayHeight=48;var a=et.getBonusForRune(s);this.runeText.push(this.scene.add.bitmapText(this.x+15,this.y+100,"courier20",s.word+" Lv"+s.level)),this.runeText[this.runeText.length-1].setTint(Phaser.Display.Color.GetColor(200,0,200));var n=s.word+" Lv"+s.level+"\n";for(const e in a)n+=kt.getRuneBonusText(e,a[e])+"\n";this.runeText.push(this.scene.add.bitmapText(this.x+20,this.y+120,"courier16",n));var r=et.getUpgradeCost(s);this.upgradeCost.setText(Xe.numberString(r)),this.rerollCost.setText(Xe.numberString(r/2));for(t=0;t<this.upgradeUI.length;t++)this.upgradeUI[t].setVisible(!0)}_upgradeRune(){var e=at.getInstance().runes[this.selectedRune],t=Math.floor(et.getUpgradeCost(e));at.getInstance().motes>=t&&(at.getInstance().addMote(-t),at.getInstance().runes[this.selectedRune].level+=1,this._setupViews())}_rerollRune(){var e=at.getInstance().runes[this.selectedRune],t=Math.floor(et.getUpgradeCost(e)/2);if(at.getInstance().motes>=t){at.getInstance().addMote(-t);var s=et.getRandomRuneAtLevel(e.level);at.getInstance().runes[this.selectedRune]=s,this._setupViews()}}_setupRuneInventory(e,t,s,i,a){var n=et.getBonusForRune(t),r=t.word+" Lv"+t.level+"\n";for(const e in n)r+=kt.getRuneBonusText(e,n[e])+"\n";var o=new pt(e,s,i,48,48,et.getRuneTexture(t.word));return o.onClickHandler(()=>{this._selectRune(a)}).onPointerOverHandler(()=>{this._showTooltip(e,r,s,i)}).onPointerOutHandler(()=>{this._removeTooltip()}),o}_showTooltip(e,t,s,i){void 0!==this.floatingText&&this.floatingText.destroy();var n=s+(s+200>1100?-152:0),r=i+(i-60<100?50:-62);this.floatingText=new a(e,t,n,r,200,60,"courier16",16)}_removeTooltip(){this.floatingText.destroy(),this.floatingText=void 0}onCancelHandler(e){return this.cancelBtn.onClickHandler(()=>{e()}),this}destroy(){this.backRect.destroy(),this.separator.destroy(),this.upgradeTitle.destroy(),this.runeTitle.destroy(),this.cancelBtn.destroy(),this.upgradeRune.destroy();for(var e=0;e<this.runeInventory.length;e++)this.runeInventory[e].destroy();void 0!==this.floatingText&&this.floatingText.destroy();for(e=0;e<this.runeText.length;e++)this.runeText[e].destroy();for(e=0;e<this.upgradeUI.length;e++)this.upgradeUI[e].destroy()}}class Gt extends i{constructor(e,t){super(e,t),this.player=new at,this.page=0,this.gearList=[],this.craftDisplays=[],this.gearDisplays=[],this.progression=new ze}create(){this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.runeBtn=new pt(this,this.relativeX(250),this.relativeY(10),32,32,{sprite:"runeicons",tile:0}),this.runeBtn.onClickHandler(()=>{this._onRuneUpgradeHandler()}),this.runeBtn.setVisible(ze.getInstance().unlocks.runes),this.allBtn=new gt(this,this.relativeX(290),this.relativeY(10),50,20,"All"),this.allBtn.onClickHandler(()=>{this._changeFilter(-1)}),this.tier0Btn=new gt(this,this.relativeX(340),this.relativeY(10),80,20,"Broken"),this.tier0Btn.onClickHandler(()=>{this._changeFilter(0)}),this.tier1Btn=new gt(this,this.relativeX(420),this.relativeY(10),30,20,"T1"),this.tier1Btn.onClickHandler(()=>{this._changeFilter(1)}),this.tier2Btn=new gt(this,this.relativeX(450),this.relativeY(10),30,20,"T2"),this.tier2Btn.onClickHandler(()=>{this._changeFilter(2)}),this.tier3Btn=new gt(this,this.relativeX(480),this.relativeY(10),30,20,"T3"),this.tier3Btn.onClickHandler(()=>{this._changeFilter(3)}),this.tier4Btn=new gt(this,this.relativeX(510),this.relativeY(10),30,20,"T4"),this.tier4Btn.onClickHandler(()=>{this._changeFilter(4)}),this.tier5Btn=new gt(this,this.relativeX(540),this.relativeY(10),30,20,"T5"),this.tier5Btn.onClickHandler(()=>{this._changeFilter(5)}),this.tier6Btn=new gt(this,this.relativeX(570),this.relativeY(10),30,20,"T6"),this.tier6Btn.onClickHandler(()=>{this._changeFilter(6)}),this.tier7Btn=new gt(this,this.relativeX(600),this.relativeY(10),30,20,"T7"),this.tier7Btn.onClickHandler(()=>{this._changeFilter(7)}),this.tier8Btn=new gt(this,this.relativeX(630),this.relativeY(10),30,20,"T8"),this.tier8Btn.onClickHandler(()=>{this._changeFilter(8)}),this.prevPageBtn=new gt(this,this.relativeX(850),this.relativeY(10),20,20,"<").onClickHandler(()=>{this._prevPage()}),this.nextPageBtn=new gt(this,this.relativeX(870),this.relativeY(10),20,20,">").onClickHandler(()=>{this._nextPage()}),this.weaponLabel=this.add.bitmapText(this.relativeX(0),this.relativeY(0),"courier20","Weapon"),this.armorLabel=this.add.bitmapText(this.relativeX(0),this.relativeY(0),"courier20","Armor"),this.trinketLabel=this.add.bitmapText(this.relativeX(0),this.relativeY(0),"courier20","Trinket"),this._updateTierButtons(),this._setupGearDisplays(),this._changeFilter(-1),(new ze).addOnUnlockHandler((e,t,s)=>{this._handleProgressionEvents(e,t,s)})}_handleProgressionEvents(e,t,s){switch(e){case d:case u:case b:this._updateTierButtons(),this._setupView()}}_updateTierButtons(){var e=new st;this.tier1Btn.setVisible(e.tiersAvailable>=1),this.tier2Btn.setVisible(e.tiersAvailable>=2),this.tier3Btn.setVisible(e.tiersAvailable>=3),this.tier4Btn.setVisible(e.tiersAvailable>=4),this.tier5Btn.setVisible(e.tiersAvailable>=5),this.tier6Btn.setVisible(e.tiersAvailable>=6),this.tier7Btn.setVisible(e.tiersAvailable>=7),this.tier8Btn.setVisible(e.tiersAvailable>=8)}_nextPage(){6*this.page+6<this.gearList.length&&(this.page+=1),this._setupView()}_prevPage(){this.page>0&&(this.page-=1),this._setupView()}_changeFilter(e){var t=new st;this.gearList=[],this.page=0;for(var s=0;s<t.gear.length;s++)(-1===e||e===t.gear[s].tier)&&t.gear[s].tier<=t.tiersAvailable&&this.gearList.push(t.gear[s]);this._setupView()}_isEquipedItem(e){switch(e.slotType){case S:return void 0!==this.player.weapon&&e.name===this.player.weapon.name;case _:return void 0!==this.player.armor&&e.name===this.player.armor.name;case P:return void 0!==this.player.trinket&&e.name===this.player.trinket.name}}_setupGearDisplays(){for(var e=0;e<this.gearDisplays.length;e++)this.gearDisplays[e].destroy();this.gearDisplays=[],this.weaponLabel.setPosition(this.relativeX(10),this.relativeY(10));var t=10+this.weaponLabel.getTextBounds(!0).local.height;this.gearDisplays.push(new Pt(this,this.relativeX(20),this.relativeY(t),this.player.weapon)),t+=20+this.gearDisplays[0].getTextBounds(),this.armorLabel.setPosition(this.relativeX(10),this.relativeY(t)),t+=this.armorLabel.getTextBounds(!0).local.height,this.gearDisplays.push(new Pt(this,this.relativeX(20),this.relativeY(t),this.player.armor)),t+=20+this.gearDisplays[1].getTextBounds(),this.trinketLabel.setPosition(this.relativeX(10),this.relativeY(t)),t+=this.trinketLabel.getTextBounds(!0).local.height,this.gearDisplays.push(new Pt(this,this.relativeX(20),this.relativeY(t),this.player.trinket))}_onEquipHandler(e){this.player.equip(e),this._setupView(),this._setupGearDisplays()}_onUpgradeHandler(e){st.getInstance().upgradeGear(e),this._setupGearDisplays(),this._setupView()}_onFuseHandler(e){var t=Math.min(this.player.motes,this.scene.get("DarkWorld").buyAmount);st.getInstance().fuseGear(e,t),this._setupView(),this._setupGearDisplays()}_onRuneHandler(e){this._closeRuneWindow(),this.runeWindow=new Et(this,350,150,e),this.runeWindow.onCancelHandler(()=>{this._closeRuneWindow()})}_onRuneUpgradeHandler(e){this._closeRuneWindow(),this.runeWindow=new At(this,350,150,e),this.runeWindow.onCancelHandler(()=>{this._closeRuneWindow()})}_closeRuneWindow(){void 0!==this.runeWindow&&(this.runeWindow.destroy(),this.runeWindow=void 0)}_setupView(){for(var e=0;e<this.craftDisplays.length;e++)this.craftDisplays[e].destroy();this.craftDisplays=[];for(e=6*this.page;e<Math.min(this.gearList.length,6*this.page+6);e++){var t=this.relativeX(290+e%2*305),s=this.relativeY(40+215*Math.floor((e-6*this.page)/2));this.craftDisplays.push(new _t(this,t,s,this.gearList[e]).registerEvents("onEquip",e=>{this._onEquipHandler(e)}).registerEvents("onUpgrade",e=>{this._onUpgradeHandler(e)}).registerEvents("onFuse",e=>{this._onFuseHandler(e)}).registerEvents("onRune",e=>{this._onRuneHandler(e)}))}}rebirth(){this._updateTierButtons(),this._setupGearDisplays(),this._changeFilter(-1)}update(e,t){!1===this.progression.unlocks.exploreTab&&void 0!==this.player.weapon&&void 0!==this.player.armor&&void 0!==this.player.trinket&&this.progression.registerFeatureUnlocked(o,"Now that you're all equipped it's time to explore. It's not like\nstaying here is going to do you any good.\n")}}class Ut extends i{constructor(e,t){super(e,t)}rebirth(){this.talentLabel.setText("Talent Points\n"+this.player.talentPoints);for(var e=[[264,288],[312,240],[360,216],[408,192],[456,216],[504,240],[552,288],[216,240],[264,192],[336,144],[408,120],[480,144],[552,192],[600,240],[168,192],[240,120],[312,72],[408,48],[504,72],[576,120],[648,192],[408,312],[480,384],[336,384],[408,456]],t=0;t<this.talentButtons.length;t++)this.talentButtons[t].destroy();this.talentButtons=[];var s=0;for(const t in this.player.talents){var i=this.relativeX(e[s][0]+18),a=this.relativeY(e[s][1]+20);this._setupTalentButton(t,i,a,s),s++}}create(){this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.floatingText=void 0,this.talentLabel=this.add.bitmapText(this.relativeX(450),this.relativeY(25),"courier20","Talent Points\n0",20,1).setOrigin(.5);var e=[[264,288],[312,240],[360,216],[408,192],[456,216],[504,240],[552,288],[216,240],[264,192],[336,144],[408,120],[480,144],[552,192],[600,240],[168,192],[240,120],[312,72],[408,48],[504,72],[576,120],[648,192],[408,312],[480,384],[336,384],[408,456]];this.player=new at,this.talentButtons=[];var t=0;for(const a in this.player.talents){var s=this.relativeX(e[t][0]+18),i=this.relativeY(e[t][1]+20);this._setupTalentButton(a,s,i,t),t++}this.player.registerEvent("onTalentChanged",()=>{this._onTalentChanged()})}_setupTalentButton(e,t,s,i){this.talentButtons.push(new pt(this,t,s,48,48,this.player.talents[e].texture).onClickHandler(()=>{this._levelUpTalent(this.player.talents[e]),this._disableTooltip(),this._setTooltip(e,t,s),this._updateTalentButton(this.player.talents[e],i)}).onPointerOverHandler(()=>{this._setTooltip(e,t,s)}).onPointerOutHandler(()=>{this._disableTooltip()})),this._updateTalentButton(this.player.talents[e],i)}_updateTalentButton(e,t){e.level>=e.maxLevel&&-1!==e.maxLevel?this.talentButtons[t].setBorderTint(Phaser.Display.Color.GetColor(0,220,0)):e.level>0&&this.talentButtons[t].setBorderTint(Phaser.Display.Color.GetColor(212,175,55))}_onTalentChanged(){this.talentLabel.setText("Talent Points\n"+this.player.talentPoints)}_haveTalentRequirements(e){for(var t=0;t<e.requires.length;t++)if(0===this.player.talents[e.requires[t]].level)return!1;return!0}_levelUpTalent(e){this.player.talentPoints<=0||!1===this._haveTalentRequirements(e)||this.player.levelTalent(e)}_setTooltip(e,t,s){var i=this.player.talents[e];void 0!==this.FloatingTooltip&&this._disableTooltip();var n=i.name+" Lv"+this.player.getTalentLevel(e)+"\n"+kt.getTalentTooltip(i)+"\n\n";if(i.requires.length>0){n+="Requires: ";for(var r=0;r<i.requires.length;r++)n+=this.player.talents[i.requires[r]].name+(r<i.requires.length-1?", ":"")}n=Xe.processText(n,53),this.floatingText=new a(this,n,t+(t+450>1100?-450:0),s+(s>300?-150:50),450,150,"courier16",16)}_disableTooltip(){this.floatingText.destroy(),this.floatingText=void 0}}class Ft{constructor(e,t,s){this.backingRect=e.add.rectangle(t,s,800,600,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0).setInteractive(),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backingRect.lineWidth=4,this.title=e.add.bitmapText(t+400,s+5,"courier20","CHALLENGES").setOrigin(.5,0),this.challengeBtns=[];var i=0;for(const a in Ke.instance.challenges)this.challengeBtns.push(this._setupChallengeButton(e,Ke.instance.challenges[a],t+10,s+30+25*i)),i+=1;this.challengeBox=e.add.bitmapText(t+220,s+30,"courier20",""),this.acceptBtn=new gt(e,t+275,s+550,120,20,"Accept"),this.acceptBtn.setEnable(!1),this.cancelBtn=new gt(e,t+405,s+550,120,20,"Cancel"),this.selectedChallenge=void 0}onAcceptHandler(e){return this.acceptBtn.onClickHandler(()=>{e(this.selectedChallenge)}),this}onCancelHandler(e){return this.cancelBtn.onClickHandler(()=>{e()}),this}_setupChallengeButton(e,t,s,i){var a=new gt(e,s,i,190,20,t.unlocked?t.name:"Locked").onClickHandler(()=>{this._challengeClickHandler(t)});return a.setEnable(t.unlocked),a}_challengeClickHandler(e){this.challengeBox.setText(Xe.processText(kt.getChallengeDescription(e),57)),this.selectedChallenge=e,this.acceptBtn.setEnable(!0)}destroy(){this.backingRect.destroy(),this.title.destroy(),this.acceptBtn.destroy(),this.cancelBtn.destroy(),this.challengeBox.destroy();for(var e=0;e<this.challengeBtns.length;e++)this.challengeBtns[e].destroy()}}class Ot{constructor(e,t,s){this.backingRect=e.add.rectangle(t,s,700,500,Phaser.Display.Color.GetColor(0,0,0)).setOrigin(0,0).setInteractive(),this.backingRect.isStroked=!0,this.backingRect.strokeColor=Phaser.Display.Color.GetColor(255,255,255),this.backingRect.lineWidth=4,this.title=e.add.bitmapText(t+350,s+5,"courier20",it.getInstance().challengeName).setOrigin(.5,0);var i=ut.getInstance().time.time-ut.getInstance().timeAtRunStart,a=kt.getChallengeDescription(Ke.getInstance().getChallengeFromName(it.getInstance().challengeName));a+="\nCurrent Run Time: "+new dt(i).getTimespanText()+"\n\nYou may abandon this challenge, causing you to gate immediately. You will not get any Moonlight for this run if you abandon.",this.desc=e.add.bitmapText(t+10,s+30,"courier20",Xe.processText(a,70)).setOrigin(0),this.abandonBtn=new gt(e,t+225,s+450,120,20,"Abandon"),this.cancelBtn=new gt(e,t+355,s+450,120,20,"Cancel")}onAbandonHandler(e){return this.abandonBtn.onClickHandler(()=>{e()}),this}onCancelHandler(e){return this.cancelBtn.onClickHandler(()=>{e()}),this}destroy(){this.backingRect.destroy(),this.title.destroy(),this.abandonBtn.destroy(),this.cancelBtn.destroy(),this.desc.destroy()}}class Wt extends i{constructor(e,t){super(e,t),this.canLevelPerks=!1}create(){this.add.rectangle(this.relativeX(0),this.relativeY(0),1100,800,0).setOrigin(0).setInteractive(),this.floatingText=void 0,this.moonlightLabel=this.add.bitmapText(this.relativeX(550),this.relativeY(400),"courier20","MOONLIGHT\n"+Xe.numberString(Math.round(Ke.getInstance().moonlight)),20,1).setOrigin(.5),this.moonlightLabel.setTint(Phaser.Display.Color.GetColor(206,238,240));var e=[[648,480],[672,408],[624,312],[552,240],[456,192],[360,144],[264,120],[168,144],[144,216],[192,312],[264,384],[360,432],[456,480],[552,504],[528,576],[312,504],[120,360],[120,72],[72,240],[672,552],[744,432],[696,288],[624,192],[528,120],[408,72],[264,48],[24,384],[192,456],[216,552],[480,648]];this.moonlight=new Ke,this.moonlightButtons=[];var t=0;for(const a in this.moonlight.moonperks){var s=this.relativeX(e[t][0]+118),i=this.relativeY(e[t][1]+56);this._setupMoonlightButton(this.moonlight.moonperks[a],s,i),t++}this.exitButton=new gt(this,this.relativeX(950),this.relativeY(730),120,40,"BACK").onClickHandler(()=>{if(!0===this.canLevelPerks){var e=this.scene.get("DarkWorld");this.canLevelPerks=!1,e.rebirth()}else this.scene.sendToBack()}),this.challengeBox=void 0,this.challengeBtn=new gt(this,970,12,120,30,"Challenges").onClickHandler(()=>{this._setupChallengeWindow()}),this.challengePointIcon=new wt(this,20,20,16,16,{sprite:"moonicons",tile:7},"Challenge Points earned from completing challenges. Each point increases your core stats by an additional 1%."),this.challengePointLabel=this.add.bitmapText(40,20,"courier20",Ke.instance.challengePoints+""),this.challengeBtn.setVisible(ze.getInstance().persistentUnlocks.challenges),this.challengePointIcon.setVisible(ze.getInstance().persistentUnlocks.challenges),this.challengePointLabel.setVisible(ze.getInstance().persistentUnlocks.challenges)}enableLeveling(){this.canLevelPerks=!0,this.challengeBtn.setVisible(ze.getInstance().persistentUnlocks.challenges),this.challengePointIcon.setVisible(ze.getInstance().persistentUnlocks.challenges),this.challengePointLabel.setText(Ke.getInstance().challengePoints+""),this.challengePointLabel.setVisible(ze.getInstance().persistentUnlocks.challenges)}_setupChallengeWindow(){void 0!==this.challengeBox&&(this.challengeBox.destroy(),this.challengeBox=void 0),""!==it.getInstance().challengeName?this.challengeBox=new Ot(this,200,150).onAbandonHandler(()=>{this._abandonChallenge()}).onCancelHandler(()=>{this._removeChallengeWindow()}):this.challengeBox=new Ft(this,150,100).onAcceptHandler(e=>{this._beginChallenge(e)}).onCancelHandler(()=>{this._removeChallengeWindow()})}_removeChallengeWindow(){void 0!==this.challengeBox&&(this.challengeBox.destroy(),this.challengeBox=void 0)}_beginChallenge(e){if(!0===this.canLevelPerks){it.getInstance().setupChallenge(e);var t=this.scene.get("DarkWorld");this.canLevelPerks=!1,t.rebirth()}void 0!==this.challengeBox&&(this.challengeBox.destroy(),this.challengeBox=void 0)}_abandonChallenge(){void 0!==this.challengeBox&&(this.challengeBox.destroy(),this.challengeBox=void 0),this.canLevelPerks=!0}_setupMoonlightButton(e,t,s){this.moonlightButtons.push(new pt(this,t,s,48,48,e.texture).onClickHandler(()=>{this._levelUpPerk(e),this._onMoonlightChanged(),this._disableTooltip(),this._setTooltip(e,t,s)}).onPointerOverHandler(()=>{this._setTooltip(e,t,s)}).onPointerOutHandler(()=>{this._disableTooltip()}))}_onMoonlightChanged(){this.moonlightLabel.setText("MOONLIGHT\n"+Xe.numberString(this.moonlight.moonlight))}_levelUpPerk(e){!1!==this.canLevelPerks&&this.moonlight.levelUpPerk(e)}_setTooltip(e,t,s){void 0!==this.FloatingTooltip&&this._disableTooltip();var i=e.name+" Lv"+e.level+"\n"+kt.getMoonlightTooltip(e)+"\n\n",n=Math.floor((e.cost[0]+e.cost[1]*e.level)*Math.pow(e.cost[2],e.level));if(i+="Costs "+Xe.numberString(n)+" Moonlight\n",e.requires.length>0){i+="Requires: ";for(var r=0;r<e.requires.length;r++)0===this.moonlight.moonperks[e.requires[r]].level&&(i+=this.moonlight.moonperks[e.requires[r]].name+(r<e.requires.length-1?", ":""))}i=Xe.processText(i,53),this.floatingText=new a(this,i,t+(t+450>1100?-450:0),s+(s>300?-150:50),450,150,"courier16",16)}_disableTooltip(){this.floatingText.destroy(),this.floatingText=void 0}}class Yt extends i{constructor(e,t){super(e,t),this.regionIcons=[],this.regionPaths=[],this.page=0,this.worldData=new ut}rebirth(){}create(){this.add.rectangle(this.relativeX(0),this.relativeY(0),900,700,0).setOrigin(0).setInteractive(),this.floatingText=void 0,this._refreshRegions()}_setupRegionTile(e,t,s,i){var a=s.regionLevel*it.getInstance().regionDifficultyIncrease+"-"+(s.regionLevel+1)*it.getInstance().regionDifficultyIncrease,n=Math.floor(100*s.getExplorePercent())+"%";this.regionIcons.push(new pt(this,e,t,64,64,{sprite:"icons",tile:40}).onClickHandler(()=>{this._selectRegion(i)}).onPointerOverHandler(()=>{this._createTooltip(e,t,a,n,s)}).onPointerOutHandler(()=>{this._disableTooltip()}))}_setupPotentialRegionTile(e,t,s,i){var a=20*this.worldData.regionList.length+"-"+(20*this.worldData.regionList.length+20);this.regionIcons.push(new pt(this,e,t,64,64,{sprite:"icons",tile:40}).onClickHandler(()=>{this._chooseNewRegion(i)}).onPointerOverHandler(()=>{this._createTooltip(e,t,a,void 0,s)}).onPointerOutHandler(()=>{this._disableTooltip()}))}_refreshRegions(){for(var e=0;e<this.regionIcons.length;e++)this.regionIcons[e].destroy();for(e=0;e<this.regionPaths.length;e++)this.regionPaths[e].destroy();this.regionIcons=[],this.regionPaths=[];for(e=8*this.page+1;e<Math.min(this.worldData.regionList.length,8*this.page+8);e++){var t=this.relativeX(50+(e-1)%8*100),s=this.relativeY(this.worldData.regionList[e-1].worldHeight),i=this.relativeX(50+e%8*100),a=this.relativeY(this.worldData.regionList[e].worldHeight);this.regionPaths.push(this.add.line(0,0,t,s,i,a,11141120).setOrigin(0).setLineWidth(4))}if(this.worldData.regionList.length<8*this.page+8)for(e=0;e<this.worldData.nextRegions.length;e++){var n=this.worldData.regionList.length%8;t=this.relativeX(50+(n-1)%8*100),s=this.relativeY(this.worldData.regionList[this.worldData.regionList.length-1].worldHeight),i=this.relativeX(50+n%8*100),a=this.relativeY(0)+Math.floor((e+1)*(700/(this.worldData.nextRegions.length+1)));this.regionPaths.push(this.add.line(0,0,t,s,i,a,6684706).setOrigin(0).setLineWidth(4))}for(e=8*this.page;e<Math.min(this.worldData.regionList.length,8*this.page+8);e++){var r=this.relativeX(50+e%8*100)-32,o=this.relativeY(this.worldData.regionList[e].worldHeight)-32;this._setupRegionTile(r,o,this.worldData.regionList[e],e)}if(this.worldData.regionList.length<8*this.page+8)for(e=0;e<this.worldData.nextRegions.length;e++){r=this.relativeX(50+this.worldData.regionList.length%8*100)-32,o=this.relativeY(0)+Math.floor((e+1)*(700/(this.worldData.nextRegions.length+1)))-32;this._setupPotentialRegionTile(r,o,this.worldData.nextRegions[e],e)}}_selectRegion(e){this._disableTooltip(),this.worldData.setCurrentRegion(e),this.scene.get("DarkWorld").changeRegion(),this.scene.get("RegionScene").changeRegion(),this.scene.get("TownScene").changeRegion(),this.scene.bringToTop("RegionScene"),this.scene.bringToTop("DarKWorld")}_chooseNewRegion(e){this.worldData.addRegion(e),this._disableTooltip(),this._refreshRegions()}_createTooltip(e,t,s,i,a){void 0!==this.floatingText&&this.floatingText.destroy(),e+=e+400>1100?-250:64,this.floatingText=new mt(this,e,t,400,150),this.floatingText.addText(10,10,"courier20",rt.REGION_TYPES[a.type].name),this.floatingText.addText(10,30,"courier16","Difficulty: "+s),void 0!==i&&this.floatingText.addText(200,30,"courier16","Explored: "+i);var n=kt.getRegionTooltip(a.type)+"\n\n";if(a.traits.length>0){n+="Traits: ";for(var r=0;r<a.traits.length;r++){switch(a.traits[r].type){case Te:n+="Dire "+a.traits[r].level;break;case Ce:n+="Poisoned "+a.traits[r].level;break;case Be:n+="Monstrous "+a.traits[r].level;break;case Me:n+="Quick "+a.traits[r].level;break;case Re:n+="Deadly "+a.traits[r].level;break;case De:n+="Shielded "+a.traits[r].level;break;case He:n+="Beserk "+a.traits[r].level}r<a.traits.length-1&&(n+=", ")}}this.floatingText.addText(10,50,"courier16",Xe.processText(n,48))}_disableTooltip(){void 0!==this.floatingText&&(this.floatingText.destroy(),this.floatingText=void 0)}}var qt=new class extends i{constructor(e,t){super(e,t),this.settings=new it,this.moonlight=new Ke,this.worldData=new ut,this.player=new at,this.progression=new ze,this.gearShowTimer=2e3,this.infuseStart=0,this.gearStart=0,this.detailsStart=0,this.resourceStart=0,this.resourceTierSelected=0,this.saveTimer=Ve,this.buyAmount=1,this.talentCost=0,this.statCost=0,this.load()}preload(){this.load.bitmapFont("courier16","./../../assets/font/courier16.png","./../../assets/font/courier16.xml"),this.load.bitmapFont("courier20","./../../assets/font/courier20.png","./../../assets/font/courier20.xml"),this.load.spritesheet("icons","./../../assets/icons/icons.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("bldicons","./../../assets/icons/buildingicons.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("roadicons","./../../assets/icons/roadicons.png",{frameWidth:50,frameHeight:50}),this.load.spritesheet("moonicons","./../../assets/icons/moonicons.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("runeicons","./../../assets/icons/runeicons.png",{frameWidth:16,frameHeight:16}),this.load.spritesheet("enemyicons","./../../assets/enemy/enemyicons.png",{frameWidth:16,frameHeight:16})}create(){this.add.bitmapText(10,10,"courier20","Stats"),this.add.rectangle(0,0,200,800,0).setOrigin(0).setInteractive(),this.add.rectangle(200,0,900,100,0).setOrigin(0).setInteractive(),this.statLabels=[],this.statIcons=[],this.statIncButtons=[],this.statIcons.push(new wt(this,20,20,16,16,{sprite:"icons",tile:0},"Strength determines how hard you hit. Each point increases your min Damage by 0.4, max Damage by 1, and increases damage from gear by ~1% (diminishing returns).")),this.statIcons.push(new wt(this,20,40,16,16,{sprite:"icons",tile:1},"Dexterity determines your ability to hit enemies. Each point increases your Hit by 7.")),this.statIcons.push(new wt(this,20,60,16,16,{sprite:"icons",tile:2},"Agility determines how hard you are to hit. Each point increases your Evasion by 7 and gives a small boost to explore speed.")),this.statIcons.push(new wt(this,20,80,16,16,{sprite:"icons",tile:3},"Endurance determines your health. Each point increases your max Health by 5")),this.statIcons.push(new wt(this,20,100,16,16,{sprite:"icons",tile:4},"Recovery determines how easily you heal your wounds. Each point increases your Health Regen by 0.1/s.")),this.statIcons.push(new wt(this,20,120,16,16,{sprite:"icons",tile:5},"Defense determines how durable your body is. Each point increases your armor by 0.2 and increases armor from gear by ~1% (diminishing returns).")),this.statIcons.push(new wt(this,20,140,16,16,{sprite:"icons",tile:6},"Accuracy determines your ability to strike weak points. Each point increases your Crit damage by ~4% (diminishing returns).")),this.statIncButtons.push(new gt(this,150,20,16,16,"+").onClickHandler(()=>{this._increaseStat("str")})),this.statIncButtons.push(new gt(this,150,40,16,16,"+").onClickHandler(()=>{this._increaseStat("dex")})),this.statIncButtons.push(new gt(this,150,60,16,16,"+").onClickHandler(()=>{this._increaseStat("agi")})),this.statIncButtons.push(new gt(this,150,80,16,16,"+").onClickHandler(()=>{this._increaseStat("end")})),this.statIncButtons.push(new gt(this,150,100,16,16,"+").onClickHandler(()=>{this._increaseStat("rec")})),this.statIncButtons.push(new gt(this,150,120,16,16,"+").onClickHandler(()=>{this._increaseStat("def")})),this.statIncButtons.push(new gt(this,150,140,16,16,"+").onClickHandler(()=>{this._increaseStat("acc")})),this.detailsLabels=[],this.detailsIcons=[],this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:25},"Health, when this runs out you die.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:24},"The damage you deal with each attack. Your damage is reduced by the targets armor, dealing a minimum of 1 damage.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:26},"Armor. Each point reduces damage from enemy attacks by 1.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:27},"Hit Chance. Hit increases your attack speed, while enemy Evasion lowers your attack speed.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:28},"Evasion. Slows enemy attack speed if you have more Evasion then their Hit.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:29},"Health Regen. You restore this much Health every second. Works in combat.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:31},"Crit Chance. The chance any hit is a critical hit, dealing extra damage.")),this.detailsIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:30},"Crit Damage. Your damage is increased by this when you land a critical hit. All sources have diminishing returns.")),this.gearLabels=this.add.bitmapText(20,30,"courier16","").setOrigin(0),this.resourceLabels=[],this.resourceTierButtons=[],this.resourceTierButtons.push(new gt(this,20,170,16,16,"1").onClickHandler(()=>{this.resourceTierSelected=0,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"2").onClickHandler(()=>{this.resourceTierSelected=1,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"3").onClickHandler(()=>{this.resourceTierSelected=2,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"4").onClickHandler(()=>{this.resourceTierSelected=3,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"5").onClickHandler(()=>{this.resourceTierSelected=4,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"6").onClickHandler(()=>{this.resourceTierSelected=5,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"7").onClickHandler(()=>{this.resourceTierSelected=6,this._updateResources()})),this.resourceTierButtons.push(new gt(this,20,170,16,16,"8").onClickHandler(()=>{this.resourceTierSelected=7,this._updateResources()})),this.resourceIcons=[],this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:32},"Wood. Found in forests and wodes, duh.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:33},"Leather. The best leather comes from the plains and forests.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:34},"Metal. Hard to find resource thats available in large quantities in the mountains.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:35},"Fiber. Found in swamps and forests.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:36},"Stone. Can be found in abundance in the hills.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:37},"Crystal. Hard to find in large amounts, but can be found in the harder to reach areas.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:38},"Gold. Your current gold cap is equal to (Flat bonuses + population) * Economy Multiplier.")),this.resourceIcons.push(new wt(this,20,170,16,16,{sprite:"icons",tile:39},"Motes of Darkness. Fuse these onto weapons to improve their power.")),this.buyButtons=[],this.buyButtons.push(new gt(this,10,780,30,18,"x1").onClickHandler(()=>{this._setBuyAmount(1,0)}).setTextColor(Phaser.Display.Color.GetColor(255,255,0))),this.buyButtons.push(new gt(this,45,780,30,18,"x5").onClickHandler(()=>{this._setBuyAmount(5,1)})),this.buyButtons.push(new gt(this,80,780,40,18,"x10").onClickHandler(()=>{this._setBuyAmount(10,2)})),this.buyButtons.push(new gt(this,125,780,40,18,"x100").onClickHandler(()=>{this._setBuyAmount(100,3)})),this.infuseLabel=this.add.bitmapText(10,10,"courier20","Infuse"),this.shadeLabel=this.add.bitmapText(20,10,"courier16","Shade: "+this.player.shade),this.statInfuseLabel=this.add.bitmapText(20,10,"courier16","Infuse Stat"),this.statProgressBar=new xt(this,100,10,120,14,Phaser.Display.Color.GetColor(0,0,255),Phaser.Display.Color.GetColor(0,32,0)),this.statInfuseButton=new gt(this,250,10,16,16,"+"),this.statInfuseButton.onClickHandler(()=>{this._buyStatPoint()}),this.talentInfuseLabel=this.add.bitmapText(20,10,"courier16","Infuse Talent"),this.talentProgressBar=new xt(this,100,10,120,14,Phaser.Display.Color.GetColor(0,0,255),Phaser.Display.Color.GetColor(0,32,0)),this.talentInfuseButton=new gt(this,250,10,16,16,"+"),this.talentInfuseButton.onClickHandler(()=>{this._buyTalentPoint()}),this.gearLabel=this.add.bitmapText(10,10,"courier20","Gear"),this.detailsLabel=this.add.bitmapText(10,10,"courier20","Details"),this.resourceLabel=this.add.bitmapText(10,10,"courier20","Resources"),this.progression.addOnUnlockHandler((e,t,s)=>{this._handleProgressionEvents(e,t,s)}),this.loreButton=new gt(this,200,60,122,20,"Lore").onClickHandler(()=>{this.scene.bringToTop("LoreScene"),this.scene.bringToTop("DarkWorld")}),this.gearButton=new gt(this,327,60,122,20,"Gear").onClickHandler(()=>{this.scene.bringToTop("GearScene"),this.scene.bringToTop("DarkWorld")}),this.talentButton=new gt(this,454,60,122,20,"Talents").onClickHandler(()=>{this.scene.bringToTop("TalentScene"),this.scene.bringToTop("DarkWorld")}),this.regionButton=new gt(this,581,60,122,20,"Region").onClickHandler(()=>{this.scene.bringToTop("RegionScene"),this.scene.bringToTop("DarkWorld")}),this.combatButton=new gt(this,708,60,122,20,"Combat").onClickHandler(()=>{this.scene.bringToTop("CombatScene"),this.scene.bringToTop("DarkWorld")}),this.townButton=new gt(this,835,60,122,20,"Town").onClickHandler(()=>{this.scene.bringToTop("TownScene"),this.scene.bringToTop("DarkWorld")}),this.worldButton=new gt(this,962,60,122,20,"World").onClickHandler(()=>{this.scene.bringToTop("WorldScene"),this.scene.bringToTop("DarkWorld")}),this.worldTimeLabel=this.add.bitmapText(650,80,"courier20","").setOrigin(.5,0),this.moonlightButton=new pt(this,1005,12,32,32,{sprite:"moonicons",tile:12}).onClickHandler(()=>{this.scene.bringToTop("MoonlightScene")}),this.gearButton.setVisible(this.progression.unlocks.gearTab),this.regionButton.setVisible(this.progression.unlocks.exploreTab),this.combatButton.setVisible(this.progression.unlocks.combatTab),this.townButton.setVisible(ut.instance.getCurrentRegion().townData.townExplored),!0===it.getInstance().talentsEnabled?this.talentButton.setVisible(this.progression.unlocks.talentsTab):this.talentButton.setVisible(!1),this.worldButton.setVisible(this.progression.unlocks.worldTab),this.moonlightButton.setVisible(this.progression.totalCounts.timesGated>0),this.registry.set("setTooltip",(e,t,s,i,a)=>{this._setTooltip(e,t,s,i,a)}),this.registry.set("disableTooltip",()=>{this._disableTooltip()}),this.regionScene=new ft([200,100],"RegionScene"),this.regionScene.registerEvent("onTileClick",(e,t,s)=>{this._handleTileClick(e,t,s)}),this.combatScene=new Rt([200,100],"CombatScene"),this.combatScene.registerEvent("onReward",e=>{this._onRewardCallback(e)}),this.loreScene=new It([200,100],"LoreScene"),this.gearScene=new Gt([200,100],"GearScene"),this.townScene=new St([200,100],"TownScene"),this.talentScene=new Ut([200,100],"TalentScene"),this.worldScene=new Yt([200,100],"WorldScene"),this.moonlightScene=new Wt([0,0],"MoonlightScene"),this.scene.add("CombatScene",this.combatScene,!0),this.scene.add("RegionScene",this.regionScene,!0),this.scene.add("LoreScene",this.loreScene,!0),this.scene.add("GearScene",this.gearScene,!0),this.scene.add("TownScene",this.townScene,!0),this.scene.add("TalentScene",this.talentScene,!0),this.scene.add("WorldScene",this.worldScene,!0),this.scene.add("MoonlightScene",this.moonlightScene,!0),this.scene.bringToTop("LoreScene"),this.scene.bringToTop("DarkWorld"),this.player.statBlock.registerEvent("onHealthChanged",()=>{this._updateDetails()}),this.player.registerEvent("onStatChanged",()=>{this._layoutStats()}),this.player.registerEvent("onResourcesChanged",()=>{this._updateResources()}),!1===this.progression.unlocks.gearTab&&this.loreScene.addText("You open your eyes and see a vast wilderness before you. Unsure of how you got here you check your surroundings for any clues. You find a broken sword, an old barrel lid and some worn, raggy leathers. Not great, but you're also naked so you take what you can get.\n\nAfter putting these on you should go exploring."),this._layoutStats(),this._setBuyAmount(1,0)}_setBuyAmount(e,t){this.buyAmount=e,this._updateInfuseCosts();for(var s=0;s<this.buyButtons.length;s++)this.buyButtons[s].setTextColor(Phaser.Display.Color.GetColor(255,255,255));this.buyButtons[t].setTextColor(Phaser.Display.Color.GetColor(255,255,0))}_updateInfuseCosts(){this.statCost=this.player.getStatCost(this.buyAmount),this.talentCost=this.player.getTalentCost(this.buyAmount),this.statProgressBar.setFillPercent(this.player.shade/this.statCost,Xe.numberString(Math.floor(Math.min(this.player.shade,this.statCost)))+"/"+Xe.numberString(this.statCost)),this.talentProgressBar.setFillPercent(this.player.shade/this.talentCost,Xe.numberString(Math.floor(Math.min(this.player.shade,this.talentCost)))+"/"+Xe.numberString(Math.floor(this.talentCost))),this.statInfuseButton.setEnable(this.player.shade>=this.statCost),this.talentInfuseButton.setEnable(this.player.shade>=this.talentCost)}notifyGear(){this.gearButton.setNotification()}notifyRegion(){this.regionButton.setNotification()}_handleProgressionEvents(e,t,s){switch(void 0!==s&&""!==s&&this.loreButton.setNotification(),e){case r:this.gearButton.setVisible(!0);break;case o:this.regionButton.setVisible(!0);break;case h:this.combatButton.setVisible(!0);break;case l:this.townButton.setVisible(!0),this._updateResources();break;case p:!0===it.getInstance().talentsEnabled&&this.talentButton.setVisible(!0);break;case m:this.worldButton.setVisible(!0);break;case c:case d:this._layoutStats();break;case w:50===t&&this.progression.registerFeatureUnlocked(c);break;case f:5===t&&this.progression.registerFeatureUnlocked(g);break;case k:if(25===t)this.progression.registerFeatureUnlocked(d);else if(100===t){(new st).tiersAvailable=1,this.progression.registerFeatureUnlocked(u)}break;case y:this._updateResources()}}_updateStats(){for(var e=0;e<this.statLabels.length;e++)this.statLabels[e].destroy();this.statLabels=[],this.statLabels.push(this.add.bitmapText(20,0,"courier16","Stat Points: "+this.player.statPoints)),this.statLabels.push(this.add.bitmapText(40,20,"courier16",Xe.numberString(this.player.statBlock.Strength()))),this.statLabels.push(this.add.bitmapText(40,40,"courier16",Xe.numberString(this.player.statBlock.Dexterity()))),this.statLabels.push(this.add.bitmapText(40,60,"courier16",Xe.numberString(this.player.statBlock.Agility()))),this.statLabels.push(this.add.bitmapText(40,80,"courier16",Xe.numberString(this.player.statBlock.Endurance()))),this.statLabels.push(this.add.bitmapText(40,100,"courier16",Xe.numberString(this.player.statBlock.Recovery()))),this.statLabels.push(this.add.bitmapText(40,120,"courier16",Xe.numberString(this.player.statBlock.Defense()))),this.statLabels.push(this.add.bitmapText(40,140,"courier16",Xe.numberString(this.player.statBlock.Accuracy()))),this._updateStatButtons()}_updateShade(){this.infuseLabel.setPosition(10,this.infuseStart),this.shadeLabel.setPosition(20,this.infuseStart+20),this.statInfuseLabel.setPosition(20,this.infuseStart+40),this.statProgressBar.setPosition(20,this.infuseStart+60),this.statInfuseButton.setPosition(150,this.infuseStart+60),this.talentInfuseLabel.setPosition(20,this.infuseStart+80),this.talentProgressBar.setPosition(20,this.infuseStart+100),this.talentInfuseButton.setPosition(150,this.infuseStart+100),this.shadeLabel.setText("Shade: "+Xe.numberString(Math.floor(this.player.shade))),this.statProgressBar.setFillPercent(this.player.shade/this.statCost,Xe.numberString(Math.floor(Math.min(this.player.shade,this.statCost)))+"/"+Xe.numberString(this.statCost)),this.talentProgressBar.setFillPercent(this.player.shade/this.talentCost,Xe.numberString(Math.floor(Math.min(this.player.shade,this.talentCost)))+"/"+Xe.numberString(Math.floor(this.talentCost))),this.statInfuseButton.setEnable(this.player.shade>=this.statCost),this.talentInfuseButton.setEnable(this.player.shade>=this.talentCost)}_updateGear(){var e=Xe.processText("W: "+(void 0===this.player.weapon?"None":this.player.weapon.name+" Lv"+this.player.weapon.level),20)+"\n"+Xe.processText("A: "+(void 0===this.player.armor?"None":this.player.armor.name+" Lv"+this.player.armor.level),20)+"\n"+Xe.processText("T: "+(void 0===this.player.trinket?"None":this.player.trinket.name+" Lv"+this.player.trinket.level),20);this.gearLabels.setText(e)}_updateDetails(){this.detailsLabel.setPosition(10,this.detailsStart);for(var e=0;e<this.detailsLabels.length;e++)this.detailsLabels[e].destroy();this.detailsLabels=[];for(e=0;e<this.detailsIcons.length;e++)this.detailsIcons[e].setPosition(20,this.detailsStart+20+20*e);this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+20,"courier16",Xe.numberString(Math.floor(this.player.statBlock.currentHealth))+"/"+Xe.numberString(this.player.statBlock.MaxHealth()))),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+40,"courier16",Xe.numberString(this.player.statBlock.DamageMin())+"-"+Xe.numberString(this.player.statBlock.DamageMax()))),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+60,"courier16",Xe.numberString(this.player.statBlock.Armor()))),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+80,"courier16",Xe.numberString(this.player.statBlock.Hit()))),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+100,"courier16",Xe.numberString(this.player.statBlock.Evasion()))),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+120,"courier16",this.player.statBlock.HealthRegen()+"/s")),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+140,"courier16",Math.floor(100*this.player.statBlock.CritChance())+"%")),this.detailsLabels.push(this.add.bitmapText(40,this.detailsStart+160,"courier16","+"+Xe.numberString(Math.floor(100*(this.player.statBlock.CritDamage()-1)))+"%"))}_updateResources(){this.resourceLabel.setPosition(10,this.resourceStart),this.resourceLabel.setVisible(this.progression.unlocks.resourceUI);for(var e=0;e<this.resourceLabels.length;e++)this.resourceLabels[e].destroy();this.resourceLabels=[];for(e=0;e<this.resourceIcons.length;e++)this.resourceIcons[e].setPosition(20,this.resourceStart+40+20*e),this.resourceIcons[e].setVisible(this.progression.unlocks.resourceUI);for(e=0;e<this.resourceTierButtons.length;e++)this.resourceTierButtons[e].setPosition(20+20*e,this.resourceStart+20),this.resourceTierButtons[e].setVisible(this.player.resourceTierReached>=1&&e<=this.player.resourceTierReached);if(this.resourceIcons[6].setVisible(this.progression.unlocks.townTab),this.resourceIcons[7].setVisible(this.progression.unlocks.motes),!0===this.progression.unlocks.resourceUI){var t=this.player.resources[this.resourceTierSelected];this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+40,"courier16",Xe.numberString(Math.floor(t[0])))),this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+60,"courier16",Xe.numberString(Math.floor(t[1])))),this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+80,"courier16",Xe.numberString(Math.floor(t[2])))),this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+100,"courier16",Xe.numberString(Math.floor(t[3])))),this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+120,"courier16",Xe.numberString(Math.floor(t[4])))),this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+140,"courier16",Xe.numberString(Math.floor(t[5])))),!0===this.progression.unlocks.townTab&&this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+160,"courier16",Xe.numberString(Math.floor(this.player.gold))+"/"+Xe.numberString(Math.floor(this.worldData.getGoldCap())))),!0===this.progression.unlocks.motes&&this.resourceLabels.push(this.add.bitmapText(40,this.resourceStart+180,"courier16",Xe.numberString(Math.floor(this.player.motes))))}}_layoutStats(){var e=160;this.infuseLabel.setVisible(this.progression.unlocks.infuseUI),this.shadeLabel.setVisible(this.progression.unlocks.infuseUI),this.statProgressBar.setVisible(this.progression.unlocks.infuseUI),this.statInfuseButton.setVisible(this.progression.unlocks.infuseUI),this.statInfuseLabel.setVisible(this.progression.unlocks.infuseUI),!0===it.getInstance().talentsEnabled?(this.talentProgressBar.setVisible(this.progression.unlocks.infuseUI),this.talentInfuseButton.setVisible(this.progression.unlocks.infuseUI),this.talentInfuseLabel.setVisible(this.progression.unlocks.infuseUI)):(this.talentProgressBar.setVisible(!1),this.talentInfuseButton.setVisible(!1),this.talentInfuseLabel.setVisible(!1)),!0===this.progression.unlocks.infuseUI&&(this.infuseStart=e,e+=120),this.gearStart=e,this.gearLabel.setPosition(10,e),this.gearLabels.setPosition(20,e+20),this._updateGear(),e+=this.gearLabels.getTextBounds().local.height+20,this.detailsStart=e,e+=180,this.resourceStart=e,this._updateStats(),this._updateDetails(),this._updateShade(),this._updateResources()}_updateStatButtons(){for(var e=this.player.statPoints>0,t=0;t<this.statIncButtons.length;t++)this.statIncButtons[t].setEnable(e)}_handleTileClick(e,t,s=!1){var i=this.worldData.getCurrentRegion();i.isExplorable(e,t)&&(!1===s&&(this.scene.bringToTop("CombatScene"),this.scene.bringToTop("DarkWorld")),this.combatScene.initFight(i.map[t][e]))}_buyStatPoint(){this.progression.registerStatPointGain(this.buyAmount),this.player.buyStat(this.buyAmount),this._updateInfuseCosts(),this._updateStats(),this._updateShade()}_buyTalentPoint(){!1===this.progression.unlocks.talentsTab&&this.progression.registerFeatureUnlocked(p,"Holding this much raw shade, it almost feels... alive? Or it would be if classes were in the game. Since they're not you just get 1 measly talent point to spend on the basic bitch talents."),this.player.buyTalent(this.buyAmount),this._updateInfuseCosts(),this._updateShade()}_increaseStat(e){this.player.increaseStat(e,this.buyAmount)}_onRewardCallback(e){!0===this.progression.unlocks.craftingUI&&(st.getInstance().tiersAvailable=Math.max(st.getInstance().tiersAvailable,e.tier+1),this.gearScene._updateTierButtons()),this.player.shade+=e.shade,this.player.addResource(e.resource,e.tier),this.player.addMote(e.motes),this._updateShade(),this.progression.registerMonsterKill(),this.progression.registerShadeGain(e.shade),this.progression.registerResourceGain(e.resource),!0===this.progression.unlocks.townTab&&(this.player.addGold(e.gold),ut.getInstance().getCurrentRegion().townData.addFriendship(e.friendship),this.townScene._updateStatus())}rebirth(){this.player.rebirth(),(new st).rebirth(),this.worldData.rebirth(),this.progression.rebirth(),(new Ht).rebirth(),this.resourceTierSelected=0,this.gearButton.setVisible(this.progression.unlocks.gearTab),this.regionButton.setVisible(this.progression.unlocks.exploreTab),this.combatButton.setVisible(this.progression.unlocks.combatTab),this.townButton.setVisible(ut.instance.getCurrentRegion().townData.townExplored),this.talentButton.setVisible(this.progression.unlocks.talentsTab),this.worldButton.setVisible(this.progression.unlocks.worldTab),this.moonlightButton.setVisible(this.progression.totalCounts.timesGated>0),this._layoutStats(),this._updateInfuseCosts(),this.gearShowTimer=2e3,this.loreScene.rebirth(),this.gearScene.rebirth(),this.talentScene.rebirth(),this.regionScene.rebirth(),this.combatScene.rebirth(),this.townScene.rebirth(),this.scene.bringToTop("LoreScene"),this.scene.bringToTop(),this.loreScene.addText("You open your eyes and see a vast wilderness before you. Unsure of how you got here you check your surroundings for any clues. You find a broken sword, an old barrel lid and some worn, raggy leathers. Not great, but you're also naked so you take what you can get.\n\nAfter putting these on you should go exploring.")}changeRegion(){this.townButton.setVisible(ut.instance.getCurrentRegion().townData.townExplored)}update(e,t){this.worldData.time.setFrameDelta(t);var s=this.worldData.time.frameDelta;this.worldData.update(s),this.player.statBlock.tickRegen(s,this.combatScene.isInCombat()),this.worldTimeLabel.setText(this.worldData.time.getText()),!0!==this.progression.unlocks.gearTab&&(this.gearShowTimer-=s,this.gearShowTimer<=0&&this.progression.registerFeatureUnlocked(r)),this.saveTimer-=t,this.saveTimer<=0&&(this.saveTimer=Ve,this.save())}save(){var e=new it,t=new st,s=new Ht,i={version:n,saveTime:Date.now(),settings:e.save(),player:this.player.save(),gear:t.save(),world:this.worldData.save(),progression:this.progression.save(),moon:this.moonlight.save(),lore:s.save()};localStorage.setItem("save",JSON.stringify(i))}load(){var e=JSON.parse(localStorage.getItem("save"));if(null!==e){var t=new st,s=new Ht;if(e.version>4)(new it).load(e.settings);this.moonlight.load(e.moon,e.version),t.load(e.gear,e.version),this.player.load(e.player,e.version),this.worldData.load(e.world,e.version),this.progression.load(e.progression,e.version),s.load(e.lore,e.version);var i=Date.now()-e.saveTime;i>6e4&&this.worldData.time.addOfflineTime(i)}}}([200,200],"DarkWorld"),Vt={type:Phaser.AUTO,parent:"phaser-example",width:1100,height:800,pixelArt:!0,scale:{autoCenter:Phaser.Scale.Center.CENTER_BOTH},scene:[qt]};new Phaser.Game(Vt)}]);