/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/lz-string/libs/lz-string.js":
/*!**************************************************!*\
  !*** ./node_modules/lz-string/libs/lz-string.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return LZString; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n\n\n//# sourceURL=webpack:///./node_modules/lz-string/libs/lz-string.js?");

/***/ }),

/***/ "./src/data/AdventurerBlock.js":
/*!*************************************!*\
  !*** ./src/data/AdventurerBlock.js ***!
  \*************************************/
/*! exports provided: AdventurerBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdventurerBlock\", function() { return AdventurerBlock; });\n/* harmony import */ var _CreatureBlock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CreatureBlock */ \"./src/data/CreatureBlock.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass AdventurerBlock extends _CreatureBlock__WEBPACK_IMPORTED_MODULE_0__[\"CreatureBlock\"] {\r\n    constructor(player) {\r\n        super();\r\n        this.player = player;\r\n        this.moonData = new _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"]();\r\n        this.secondWindCooldown = 0;\r\n        this.secondWindDuration = 0;\r\n        this.hitCounter = 0;\r\n        this.encounterCounter = 0;\r\n        this.rebirth();\r\n    }\r\n\r\n    _getScale(attr, stat = 0) {\r\n        if (stat < 0) {\r\n            return 1;\r\n        }\r\n        return (1 + Math.pow(attr, this.player.classStatics.SCALING_DIMINISHING_POWER) *\r\n            this.player.classStatics.SCALING_DIMINISHING_MULTIPLIER) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.proficiency.level * 0.1) *\r\n            (1 + this.player.runeBonuses.gearScaling);\r\n    }\r\n\r\n    rebirth() {\r\n        this.stats = {\r\n            strength: this.player.baseStats.strength + this.moonData.moonperks.str.level, // damage\r\n            dexterity: this.player.baseStats.dexterity + this.moonData.moonperks.dex.level, // hit chance\r\n            agility: this.player.baseStats.agility + this.moonData.moonperks.agi.level, // evasion\r\n            endurance: this.player.baseStats.endurance + this.moonData.moonperks.end.level, //health\r\n            recovery: this.player.baseStats.recovery + this.moonData.moonperks.rec.level, //hp/energy regen?\r\n            defense: this.player.baseStats.defense + this.moonData.moonperks.def.level, //armor increase\r\n            accuracy: this.player.baseStats.accuracy + this.moonData.moonperks.acc.level, //crit power\r\n            hit: 40,\r\n            evasion: 40,\r\n            critPower: 25,\r\n            critResistance: 25\r\n        };\r\n        this.statBonuses = {\r\n            health: 0,\r\n            damageMin: 0,\r\n            damageMax: 0,\r\n            strength: 0,\r\n            dexterity: 0,\r\n            agility: 0,\r\n            endurance: 0,\r\n            recovery: 0,\r\n            defense: 0,\r\n            accuracy: 0,\r\n            hit: 0,\r\n            evasion: 0,\r\n            critPower: 0,\r\n            critResistance: 0,\r\n            critChance: 0,\r\n            healthRegen: 0,\r\n            armor: 0\r\n        };\r\n        this.hitAnim = \"claws\";\r\n        this.critAnim = \"clawscrit\";\r\n        this.level = 0;\r\n        this.currentHealth = this.MaxHealth();\r\n        this.attackCooldown = 0;\r\n        this.secondWindCooldown = 0;\r\n        this.secondWindDuration = 0;\r\n        this.hitCounter = 0;\r\n        this.encounterCounter = 0;\r\n    }\r\n\r\n    convert(block) {\r\n        this.stats = {\r\n            strength: block.stats.strength,\r\n            dexterity: block.stats.dexterity,\r\n            agility: block.stats.agility,\r\n            endurance: block.stats.endurance,\r\n            recovery: block.stats.recovery,\r\n            defense: block.stats.defense,\r\n            accuracy: block.stats.accuracy,\r\n            hit: 40,\r\n            evasion: 40,\r\n            critPower: 25,\r\n            critResistance: 25\r\n        };\r\n        this.statBonuses = {\r\n            health: 0,\r\n            damageMin: 0,\r\n            damageMax: 0,\r\n            strength: 0,\r\n            dexterity: 0,\r\n            agility: 0,\r\n            endurance: 0,\r\n            recovery: 0,\r\n            defense: 0,\r\n            accuracy: 0,\r\n            hit: 0,\r\n            evasion: 0,\r\n            critPower: 0,\r\n            critResistance: 0,\r\n            critChance: 0,\r\n            healthRegen: 0,\r\n            armor: 0\r\n        };\r\n        this.level = 0;\r\n        this.currentHealth = Math.min(this.MaxHealth(), block.currentHealth);\r\n        this.hitAnim = \"claws\";\r\n        this.critAnim = \"clawscrit\";\r\n        this.level = 0;\r\n        this.attackCooldown = 0;\r\n        this.secondWindCooldown = 0;\r\n        this.secondWindDuration = 0;\r\n        this.hitCounter = 0;\r\n        this.encounterCounter = 0;\r\n\r\n        this.copyHandlers(block);\r\n    }\r\n\r\n    copyHandlers(block) {\r\n        this.healthChangedHandlers = block.healthChangedHandlers;\r\n        this.attackCooldownChangedHandlers = block.attackCooldownChangedHandlers;\r\n        this.animationChangedHandlers = block.animationChangedHandlers;\r\n    }\r\n\r\n    MaxHealth() {\r\n        var end = this.Endurance();\r\n        var ret = (this.statBonuses.health * this._getScale(end, this.statBonuses.health)) + end * this.player.classStatics.HP_PER_ENDURANCE;\r\n        ret += end * this.player.getTalentLevel(\"end\");\r\n        ret += ret * this.player.runeBonuses.healthPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Strength() {\r\n        var ret = (this.stats.strength + this.player.runeBonuses.strFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.str.level * 10);\r\n        ret += this.statBonuses.strength;\r\n        ret = ret * (1 + (this.moonData.moonperks.str.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.strPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.strength;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05);\r\n        ret += this.Dexterity() * this.player.runeBonuses.dexToStr;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Dexterity() {\r\n        var ret = (this.stats.dexterity + this.player.runeBonuses.dexFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.dex.level * 10);\r\n        ret += this.statBonuses.dexterity;\r\n        ret = ret * (1 + (this.moonData.moonperks.dex.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.dexPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.dexterity;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05);\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Agility() {\r\n        var ret = (this.stats.agility + this.player.runeBonuses.agiFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.agi.level * 10);\r\n        ret += this.statBonuses.agility;\r\n        ret = ret * (1 + (this.moonData.moonperks.agi.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.agiPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.agility;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05);\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Endurance() {\r\n        var ret = (this.stats.endurance + this.player.runeBonuses.endFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.end.level * 10);\r\n        ret += this.statBonuses.endurance;\r\n        ret = ret * (1 + (this.moonData.moonperks.end.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.endPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.endurance;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05);\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Recovery() {\r\n        var ret = (this.stats.recovery + this.player.runeBonuses.recFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.rec.level * 10);\r\n        ret += this.statBonuses.recovery;\r\n        ret = ret * (1 + (this.moonData.moonperks.rec.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.recPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.recovery;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05);\r\n        ret += this.Endurance() * this.player.runeBonuses.endToRec;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Defense() {\r\n        var ret = (this.stats.defense + this.player.runeBonuses.defFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.def.level * 10);\r\n        ret += this.statBonuses.defense;\r\n        ret = ret * (1 + (this.moonData.moonperks.def.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.defPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.defense;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05);\r\n        ret += this.Agility() * this.player.runeBonuses.agiToDef;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Accuracy() {\r\n        var ret = (this.stats.accuracy + this.player.runeBonuses.accFlat) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.acc.level * 10);\r\n        ret += this.statBonuses.accuracy;\r\n        ret = ret * (1 + (this.moonData.moonperks.acc.level + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005);\r\n        ret += ret * (this.player.runeBonuses.accPercent + this.player.runeBonuses.allPercent);\r\n        ret = ret * this.player.dungeonBonus.accuracy;\r\n        ret = ret * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playercrits * 0.15);\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Hit() {\r\n        var dex = this.Dexterity();\r\n        var ret = this.stats.hit + (this.statBonuses.hit * this._getScale(dex, this.statBonuses.hit)) + dex * this.player.classStatics.HIT_PER_DEXTERITY;\r\n        ret += dex * this.player.getTalentLevel(\"dex\");\r\n        ret = ret * (1 + this.player.getTalentLevel(\"hit\") * 0.04);\r\n        ret += ret * this.player.runeBonuses.hitPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Evasion() {\r\n        var agi = this.Agility();\r\n        var ret = this.stats.evasion + (this.statBonuses.evasion * this._getScale(agi, this.statBonuses.evasion)) + agi * this.player.classStatics.EVA_PER_AGILITY;\r\n        ret += agi * this.player.getTalentLevel(\"agi\");\r\n        ret = ret * (1 + this.player.getTalentLevel(\"evasion\") * 0.04);\r\n        ret += ret * this.player.runeBonuses.evaPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    CritChance() {\r\n        var ret = this.statBonuses.critChance;\r\n        ret += this.player.getTalentLevel(\"crit\") * 0.03;\r\n        ret += this.player.runeBonuses.critChance;\r\n        ret += _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playercrits * 0.1;\r\n        while (ret > 0.5) {\r\n            ret /= 2;\r\n        }\r\n        return ret;\r\n    }\r\n    CritDamageMulti() {\r\n        var ret = this.statBonuses.critChance;\r\n        ret += this.player.getTalentLevel(\"crit\") * 0.03;\r\n        ret += this.player.runeBonuses.critChance;\r\n        ret += _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playercrits * 0.1;\r\n        var multi = 1;\r\n        while (ret > 0.5) {\r\n            ret /= 2;\r\n            multi *= 2;\r\n        }\r\n        return multi;\r\n    }\r\n    Toughness() {\r\n        var end = this.Endurance();\r\n        var ret = this.stats.critResistance + (this.statBonuses.critResistance * this._getScale(end, this.statBonuses.critResistance)) +\r\n            end * this.player.classStatics.CRITRESISTANCE_PER_ENDURANCE;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Aim() {\r\n        var acc = this.Accuracy();\r\n        var ret = this.stats.critPower + (this.statBonuses.critPower * this._getScale(acc, this.statBonuses.critPower)) +\r\n            acc * this.player.classStatics.CRITPOWER_PER_ACCURACY;\r\n        ret += acc * this.player.getTalentLevel(\"acc\") * 0.5;\r\n        ret += ret * this.player.runeBonuses.critPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    DamageMin() {\r\n        var str = this.Strength();\r\n        var ret = this.statBonuses.damageMin * (1 + this.player.runeBonuses.weaponPercent) * this._getScale(str) +\r\n            str * this.player.classStatics.STRENGTH_DMG_MIN;\r\n        ret += str * this.player.getTalentLevel(\"str\") * 0.07 * this.player.classStatics.STRENGTH_DMG_MIN;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    DamageMax() {\r\n        var str = this.Strength();\r\n        var ret = this.statBonuses.damageMax * (1 + this.player.runeBonuses.weaponPercent) * this._getScale(str) +\r\n            str * this.player.classStatics.STRENGTH_DMG_MAX;\r\n        ret += str * this.player.getTalentLevel(\"str\") * 0.07 * this.player.classStatics.STRENGTH_DMG_MAX;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    HealthRegen() {\r\n        var rec = this.Recovery();\r\n        var ret = (this.statBonuses.healthRegen * this._getScale(rec, this.statBonuses.healthRegen)) + rec * this.player.classStatics.REGEN_PER_RECOVERY;\r\n        ret += rec * this.player.getTalentLevel(\"rec\") * 0.08 * this.player.classStatics.REGEN_PER_RECOVERY;\r\n        ret += ret * this.player.runeBonuses.regenPercent;\r\n        return Math.floor(Math.max(0, ret) * 10) / 10;\r\n    }\r\n    Armor() {\r\n        var def = this.Defense();\r\n        var ret = def * this.player.classStatics.ARMOR_PER_DEFENSE + this.statBonuses.armor * (1 + this.player.runeBonuses.armorPercent) *\r\n            this._getScale(def, this.statBonuses.armor);\r\n        ret += def * this.player.getTalentLevel(\"def\") * 0.13 * this.player.classStatics.ARMOR_PER_DEFENSE;\r\n        return Math.floor(Math.max(0, ret) - this.corrosion);\r\n    }\r\n    AttackSpeed() {\r\n        var ret = this.attackSpeed / (1 + this.player.runeBonuses.baseAttackSpeed);\r\n        return ret;\r\n    }\r\n    CritDamage(tough) {\r\n        return Math.max(1, 1 + (-0.5 + (Math.sqrt(this.Aim()) / Math.sqrt(tough))) * 0.5 * this.CritDamageMulti());\r\n    }\r\n    GlancingChance(tough) {\r\n        return Math.min(0.5, (1 - (this.Aim() / tough)) / 2);\r\n    }\r\n    GlancingDamage(tough) {\r\n        return Math.min(1, this.Aim() / tough);\r\n    }\r\n\r\n    initCombat() {\r\n        this.corrosion = 0;\r\n        this.attackCooldown = 0;\r\n        this.shieldValue = this.player.runeBonuses.defToShield * this.Defense();\r\n        this._onHealthChanged();\r\n    }\r\n\r\n    takeDamage(damage, hitType, dmgType) {\r\n        if (this.player.getTalentLevel(\"dodge\") > 0 && dmgType !== _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DMG_TRUE) {\r\n            this.hitCounter -= 1;\r\n            if (this.hitCounter <= 0) {\r\n                this.hitCounter = Math.max(3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DODGE_COUNTER - this.player.getTalentLevel(\"dodge\"));\r\n                return 0;\r\n            }\r\n        }\r\n        var dmg = damage;\r\n        if (hitType === _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_CRIT) {\r\n            dmg = dmg * Math.pow(0.92, this.player.runeBonuses.enemyCrit);\r\n            dmg = Math.max(2, dmg - this.Endurance() * 0.05 * this.player.getTalentLevel(\"resilient\"));\r\n        }\r\n        if (dmgType === _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DMG_MAGIC) {\r\n            dmg = dmg * Math.pow(0.96, this.player.getTalentLevel(\"magicresist\"));\r\n        }\r\n        if (Math.random() < this.player.getTalentLevel(\"parry\") * 0.05) {\r\n            dmg = dmg / 2;\r\n        }\r\n        if (Math.random() <= 0.2) {\r\n            dmg = Math.max(1, dmg - this.Armor() * (this.player.getTalentLevel(\"block\") * 0.25));\r\n        }\r\n        dmg = super.takeDamage(dmg, hitType, dmgType);\r\n        if (this.player.getTalentLevel(\"secondwind\") > 0 && this.secondWindCooldown <= 0 && this.currentHealth < this.MaxHealth() / 2) {\r\n            this.secondWindDuration = 10000;\r\n            this.secondWindCooldown = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].SECONDWIND_COOLDOWN - this.player.getTalentLevel(\"secondwind\") * 10000;\r\n        }\r\n        return dmg;\r\n    }\r\n\r\n    tickRegen(delta, inCombat = true) {\r\n        var oldVal = this.currentHealth;\r\n        var healMulti = 1;\r\n        var regen = this.HealthRegen()\r\n        if (inCombat === false) {\r\n            regen += this.player.runeBonuses.OOCRegen;\r\n            healMulti = 1 + this.player.getTalentLevel(\"quickrecovery\") * 0.25;\r\n        }\r\n        if (this.secondWindDuration > 0) {\r\n            this.secondWindDuration -= delta;\r\n            healMulti = healMulti * 3;\r\n        }\r\n        this.currentHealth = Math.min(this.MaxHealth(), this.currentHealth + regen * (delta / 1000) * healMulti);\r\n        if (oldVal != this.currentHealth) {\r\n            this._onHealthChanged();\r\n        }\r\n    }\r\n    heal(value) {\r\n        this.currentHealth = Math.min(this.MaxHealth(), this.currentHealth + value);\r\n    }\r\n\r\n    attack(creature) {\r\n        var thorns = creature.findTrait(_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TRAIT_THORNS);\r\n        if (thorns !== undefined) {\r\n            this.takeDamage(creature.Armor() * 0.2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DMG_MAGIC);\r\n        }\r\n        if (Math.random() < this.player.getTalentLevel(\"stun\") * 0.05) {\r\n            creature.stunTimer = 500;\r\n        }\r\n        var rawDmg = this.rollDamage();\r\n        var anim = this.hitAnim;\r\n        var hitType = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_NORMAL;\r\n        var roll = Math.random();\r\n        if (roll <= this.CritChance()) {\r\n            anim = this.critAnim;\r\n            hitType = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_CRIT;\r\n            rawDmg = rawDmg * this.CritDamage(creature.Toughness() *\r\n                Math.pow(0.96, this.player.getTalentLevel(\"serration\")));\r\n        } else if (roll > 1 - this.GlancingChance(creature.Toughness())) {\r\n            anim = \"glancing\";\r\n            hitType = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_GLANCING;\r\n            rawDmg = rawDmg * this.GlancingDamage(creature.Toughness());\r\n        }\r\n        var dmg = creature.takeDamage(rawDmg, hitType, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DMG_NORMAL);\r\n        creature.playAnimation(anim);\r\n        this.attackCooldown = 0;\r\n        if (Math.random() < this.player.getTalentLevel(\"followthrough\") * 0.05) {\r\n            this.attackCooldown = this.AttackSpeed() / 2;\r\n        }\r\n        this._onAttackCooldownChanged();\r\n        return dmg;\r\n    }\r\n    cleave(creature) {\r\n        if (Math.random() < this.player.getTalentLevel(\"stun\") * 0.05) {\r\n            creature.stunTimer = 500;\r\n        }\r\n        var rawDmg = this.Strength() * this.player.getTalentLevel(\"cleave\") * 0.2;\r\n        creature.playAnimation(this.hitAnim);\r\n        return creature.takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DMG_NORMAL);\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            stat: this.stats,\r\n            ha: this.hitAnim,\r\n            ca: this.critAnim,\r\n            chp: this.currentHealth,\r\n            acd: this.attackCooldown\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this.stats = saveObj.stat;\r\n        this.hitAnim = saveObj.ha;\r\n        this.critAnim = saveObj.ca;\r\n        this.currentHealth = saveObj.chp;\r\n        this.attackCooldown = saveObj.acd;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/AdventurerBlock.js?");

/***/ }),

/***/ "./src/data/Blueprint.js":
/*!*******************************!*\
  !*** ./src/data/Blueprint.js ***!
  \*******************************/
/*! exports provided: Blueprint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Blueprint\", function() { return Blueprint; });\nclass Blueprint {\r\n    constructor() {\r\n        this.map = [];\r\n\r\n        for (var y = 0; y < 13; y++) {\r\n            var layer = [];\r\n            for (var x = 0; x < 11; x++) {\r\n                layer.push(0);\r\n            }\r\n            this.map.push(layer);\r\n        }\r\n\r\n        //mark the town location\r\n        //Math.floor(this.width / 2), this.height - 3\r\n        this.map[10][5] = \"town\";\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            map: this.map\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    static loadFromFile(saveObj, ver) {\r\n        var bp = new Blueprint();\r\n        bp.map = saveObj.map;\r\n\r\n        return bp;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/Blueprint.js?");

/***/ }),

/***/ "./src/data/Building.js":
/*!******************************!*\
  !*** ./src/data/Building.js ***!
  \******************************/
/*! exports provided: BuildingTypes, Building */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BuildingTypes\", function() { return BuildingTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Building\", function() { return Building; });\n/* harmony import */ var _BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BuildingRegistry */ \"./src/data/BuildingRegistry.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BuildingTypes = {\r\n    PRODUCTION: 0,\r\n    ROAD: 1,\r\n    HOUSE: 2,\r\n    ECON: 3,\r\n    OTHER: 4\r\n}\r\n\r\nclass Building {\r\n    constructor(name, regName, tier, buildingType, texture, resourceCosts, goldCost, costMulti) {\r\n        this.name = name;\r\n        this.regName = regName;\r\n        this.tier = tier;\r\n        this.buildingType = buildingType;\r\n        this.texture = texture;\r\n        this.resourceCosts = resourceCosts;\r\n        this.goldCost = goldCost;\r\n        this.costMulti = costMulti;\r\n    }\r\n\r\n    increaseCosts() {\r\n        for (var i = 0; i < this.resourceCosts.length; i++) {\r\n            this.resourceCosts[i] = this.resourceCosts[i] * this.costMulti;\r\n        }\r\n        this.goldCost = this.goldCost * this.costMulti;\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            t: this.tier,\r\n            reg: this.regName\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    static loadFromFile(saveObj, ver) {\r\n        var bld = _BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName(saveObj.reg);\r\n        for (var i = bld.tier; i <= saveObj.t; i++) {\r\n            bld.increaseCosts();\r\n        }\r\n        bld.tier = saveObj.t;\r\n        return bld;\r\n    }\r\n\r\n    static getTooltip(tile, name, tier, potential = false) {\r\n        if (tile.isInvaded === true) {\r\n            return \"This tile is covered in mist. No one will work here until it clears.\";\r\n        }\r\n        var region = _WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getCurrentRegion();\r\n        var def = tile.defense;\r\n        if (potential === true) {\r\n            def += _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.hardenedvillagers.level +\r\n                region.townData.upgrades.reinforcedhouses.level;\r\n        }\r\n        var prodBonus = 1 + (def * _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.moonlightworkers.level * 0.01) * tile.towerBonus;\r\n        var eff = tile.roadBonus * region._getBuildingEfficiency(tile.x, tile.y, potential) * tile.towerBonus;\r\n        prodBonus = prodBonus * region.townData.getProductionMulti() * eff;\r\n        switch (name) {\r\n            case \"Lumberyard\":\r\n                var prod = tier * tile.yields[0] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.wood;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Wood at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Hunter's Lodge\":\r\n                var prod = tier * tile.yields[1] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.leather;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Leather at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Mine\":\r\n                var prod = tier * tile.yields[2] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.metal;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Metal at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Herbalist's Hut\":\r\n                var prod = tier * tile.yields[3] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.fiber;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Fiber at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Quarry\":\r\n                var prod = tier * tile.yields[4] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.stone;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Stone at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Crystal Loom\":\r\n                var prod = tier * tile.yields[5] * prodBonus * _PlayerData__WEBPACK_IMPORTED_MODULE_5__[\"PlayerData\"].getInstance().dungeonBonus.crystal;\r\n                return \"Produces \" + Math.floor(prod * 100) / 100 + \" Crystal at the end of each day. Production at \" +\r\n                    Math.floor(eff * 100) + \"% based on distance to roads and other buildings.\";\r\n            case \"Town House\":\r\n                if (tile.houseBuildable === true) {\r\n                    var pop = Math.floor((tier * (5 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.urbanization.level)) *\r\n                        (1 + _StarData__WEBPACK_IMPORTED_MODULE_6__[\"StarData\"].getInstance().perks.estate.level * 0.5));\r\n                    return \"Increases the Town's max population by \" + pop + \".\";\r\n                } else {\r\n                    return \"This house is too far away from a road and has been abandoned.\";\r\n                }\r\n            case \"Watch Tower\":\r\n                var bonus = tier * 2 * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.construction.level * 0.1);\r\n                return \"Protects all buildings within 2 tiles, preventing mist from spreading. Increases effectiveness of Prod/Econ \" +\r\n                    \"buildings in range by \" + (Math.round(bonus * 10) / 10) + \"%.\";\r\n            case \"Market\":\r\n                if (tile.roadBuildable !== true && potential === false) {\r\n                    return \"The market is too far from the road. It must be next to a road to increase the economy.\";\r\n                }\r\n                var exchange = [5, 10, 25, 50, 100];\r\n                var points = []\r\n                for (var i = 0; i < region.markets.length; i++) {\r\n                    points.push({ x: region.markets[i][1], y: region.markets[i][0] });\r\n                }\r\n                var amount = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.floor(exchange[tier - 1] * tile.parent.townData.getProductionMulti()));\r\n                var closest = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].nearestPointInList(tile.x, tile.y, points, true);\r\n                var max = 5 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.nightmarket.level;\r\n                var bonus = Math.max(0, Math.min(max, (closest[1] / _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].TRADE_HOUSE_MAX_DISTANCE) * max)) *\r\n                    (tier / 100) * tile.towerBonus;\r\n                return \"Increases the Town's economy by \" + Math.floor(bonus * 10000) / 100 + \"%, based on distance to \" +\r\n                    \"the Town and other Markets. Exchanges up to \" + amount + \" resources with resources in short supply.\";\r\n            case \"Tavern\":\r\n                var maxDist = 1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.moonwine.level;\r\n                var bonus = 0;\r\n                var pop = 0;\r\n                for (var y = Math.max(0, tile.y - maxDist); y < Math.min(region.height, tile.y + maxDist + 1); y++) {\r\n                    for (var x = Math.max(0, tile.x - maxDist); x < Math.min(region.width, tile.x + maxDist + 1); x++) {\r\n                        if (Math.abs(y - tile.y) + Math.abs(x - tile.x) <= maxDist &&\r\n                            region.map[y][x].building !== undefined && region.map[y][x].building.name === \"Town House\" &&\r\n                            region.map[y][x].houseBuildable === true) {\r\n                            bonus += 0.02;\r\n                            pop += 1;\r\n                        }\r\n                    }\r\n                }\r\n                return \"Increases the Town's population by \" + pop + \" and economy by \" +\r\n                    Math.floor(tier * bonus * 1000 * tile.towerBonus) / 10 + \"%, based on nearby Town Houses.\";\r\n            case \"Road\":\r\n                var disconnectedText = tile.roadConnected === true || potential === true ? \"\" : \" This road is disconnected and gives no bonuses.\"\r\n                return \"Most buildings must be built adjacent to roads. Production buildings get a boost being adjacent to a road, and \" +\r\n                    \"produce nothing when more than \" + tier + \" tiles away.\" + disconnectedText;\r\n            case \"Docks\":\r\n                var dockEff = region._getDockEfficiency(tile.x, tile.y, potential);\r\n                var bonus = tier * _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DOCK_BASE_ECON * region.townData.getEconomyMulti() * dockEff * tile.towerBonus;\r\n                return \"Docks don't need roads and enables roads to be built beside them. Increases gold earned per week by \" +\r\n                    Math.floor(bonus) + \".\";\r\n            case \"Alchemy Lab\":\r\n                var drain = [1, 5, 13, 33, 77];\r\n                var gain = [0.05, 0.3, 0.9, 3, 8];\r\n                var amount = Math.floor(gain[tier - 1] * 100) / 100;\r\n                return \"Through strange magic converts \" + drain[tier - 1] + \" of all resources into \" + amount + \" of resources \" +\r\n                    \"of the next highest tier each day.\";\r\n            case \"Warehouse\":\r\n                var bonus = tier * (20 * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.construction.level * 0.1));\r\n                return \"Stores goods for transport, increasing production of nearby buildings by \" + Math.round(bonus * 10) / 10 + \"%.\";\r\n            case \"Dojo\":\r\n                if (tile.houseBuildable === false) {\r\n                    return \"Villagers once trained here, but now it is abandoned, waiting for a road to reach it.\"\r\n                }\r\n                var moonBonus = (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.devotion.level * 0.1) *\r\n                    (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.ninja.level * 0.25);\r\n                var pow = tier * 0.02 * _WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().powerMulti * moonBonus * tile.towerBonus;\r\n                var def = tier * 0.2 * _WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().healthMulti * moonBonus * tile.towerBonus;\r\n                return \"A place for your villagers to train. Each week it permanently increases Villager Power by \" + Math.floor(pow * 100) / 100 + \" and \" +\r\n                    \"Villager Health by \" + Math.floor(def * 100) / 100 + \".\";\r\n            case \"Garrison\":\r\n                return \"Provides housing for soldiers. Increases Army Size by \" + (tier * 2) +\r\n                    \". Garrisoned soldiers require payment and reduce your taxes.\";\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/Building.js?");

/***/ }),

/***/ "./src/data/BuildingRegistry.js":
/*!**************************************!*\
  !*** ./src/data/BuildingRegistry.js ***!
  \**************************************/
/*! exports provided: BuildingRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BuildingRegistry\", function() { return BuildingRegistry; });\n/* harmony import */ var _Building__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Building */ \"./src/data/Building.js\");\n\r\n\r\nclass BuildingRegistry {\r\n    static getBuildingByName(name) {\r\n        switch (name) {\r\n            case \"wood\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Lumberyard\", \"wood\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 0, w: 32, h: 32 },\r\n                    [0, 15, 0, 30, 45, 0], 50, 5);\r\n            case \"leather\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Hunter's Lodge\", \"leather\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 1, w: 32, h: 32 },\r\n                    [60, 0, 30, 0, 0, 0], 50, 5);\r\n            case \"metal\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Mine\", \"metal\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 2, w: 32, h: 32 },\r\n                    [30, 0, 0, 0, 45, 15], 50, 5);\r\n            case \"fiber\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Herbalist's Hut\", \"fiber\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 3, w: 32, h: 32 },\r\n                    [45, 30, 0, 0, 0, 15], 50, 5);\r\n            case \"stone\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Quarry\", \"stone\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 4, w: 32, h: 32 },\r\n                    [20, 0, 60, 0, 0, 0], 50, 5);\r\n            case \"crystal\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Crystal Loom\", \"crystal\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].PRODUCTION, { sprite: \"bldicons\", tile: 5, w: 32, h: 32 },\r\n                    [30, 0, 15, 0, 45, 0], 50, 5);\r\n            case \"house\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Town House\", \"house\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].HOUSE, { sprite: \"bldicons\", tile: 6, w: 32, h: 32 },\r\n                    [5, 5, 5, 5, 5, 0], 15, 5);\r\n            case \"watchtower\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Watch Tower\", \"watchtower\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].OTHER, { sprite: \"bldicons\", tile: 7, w: 32, h: 32 },\r\n                    [25, 0, 0, 0, 40, 0], 40, 5);\r\n            case \"market\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Market\", \"market\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ECON, { sprite: \"bldicons\", tile: 8, w: 32, h: 32 },\r\n                    [20, 10, 0, 10, 10, 10], 100, 5);\r\n            case \"tavern\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Tavern\", \"tavern\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].HOUSE, { sprite: \"bldicons\", tile: 9, w: 32, h: 32 },\r\n                    [25, 5, 0, 15, 0, 10], 100, 5);\r\n            case \"road\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Road\", \"road\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ROAD, { sprite: \"roadicons\", tile: 0, w: 32, h: 32 },\r\n                    [5, 0, 0, 0, 3, 0], 5, 7);\r\n            case \"docks\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Docks\", \"docks\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ROAD, { sprite: \"bldicons\", tile: 50, w: 32, h: 32 },\r\n                    [15, 10, 0, 0, 10, 0], 50, 5);\r\n            case \"town\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Town\", \"town\", 3, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ROAD, { sprite: \"roadicons\", tile: 38, w: 50, h: 50 },\r\n                    [0, 0, 0, 0, 0, 0], 0, 0);\r\n            case \"alchemy\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Alchemy Lab\", \"alchemy\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ECON, { sprite: \"bldicons\", tile: 51, w: 32, h: 32 },\r\n                    [10, 0, 20, 0, 10, 15], 150, 5);\r\n            case \"warehouse\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Warehouse\", \"warehouse\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].OTHER, { sprite: \"bldicons\", tile: 52, w: 32, h: 32 },\r\n                    [50, 10, 0, 10, 50, 0], 75, 5);\r\n            case \"dojo\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Dojo\", \"dojo\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ECON, { sprite: \"bldicons\", tile: 54, w: 32, h: 32 },\r\n                    [30, 0, 20, 20, 0, 10], 125, 5);\r\n            case \"garrison\":\r\n                return new _Building__WEBPACK_IMPORTED_MODULE_0__[\"Building\"](\"Garrison\", \"garrison\", 1, _Building__WEBPACK_IMPORTED_MODULE_0__[\"BuildingTypes\"].ECON, { sprite: \"bldicons\", tile: 53, w: 32, h: 32 },\r\n                    [50, 0, 20, 0, 50, 0], 150, 5);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/BuildingRegistry.js?");

/***/ }),

/***/ "./src/data/CombatManager.js":
/*!***********************************!*\
  !*** ./src/data/CombatManager.js ***!
  \***********************************/
/*! exports provided: CombatManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CombatManager\", function() { return CombatManager; });\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _utils_Combat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Combat */ \"./src/utils/Combat.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _RegionRegistry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CombatManager {\r\n    constructor() {\r\n        this.combatActive = false;\r\n        this.monsters = [];\r\n        this.globalAttackCooldown = 0;\r\n        this.target = 0;\r\n        this.fightCooldown = _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].COMBAT_COOLDOWN;\r\n        this.dropChances = [];\r\n        this.dropTotals = 0;\r\n\r\n        this.activeTile = undefined;\r\n        this.creatureHealthCallback = undefined;\r\n        this.creatureAttackCallback = undefined;\r\n        this.exploreCallback = undefined;\r\n        this.combatCallback = undefined;\r\n        this.combatEndCallback = undefined;\r\n        this.animationChangedCallback = undefined;\r\n        this.totalKills = 0;\r\n        this.poisonTimer = 0;\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        switch (event) {\r\n            case \"onCreatureHealthChanged\":\r\n                this.creatureHealthCallback = callback;\r\n                break;\r\n            case \"onCreatureAttackChanged\":\r\n                this.creatureAttackCallback = callback;\r\n                break;\r\n            case \"onExplore\":\r\n                this.exploreCallback = callback;\r\n                break;\r\n            case \"onCombatStart\":\r\n                this.combatCallback = callback;\r\n                break;\r\n            case \"onCombatEnd\":\r\n                this.combatEndCallback = callback;\r\n                break;\r\n            case \"onAnimationChanged\":\r\n                this.animationChangedCallback = callback;\r\n                break;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _monstersAlive() {\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            if (this.monsters[i].currentHealth > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _getTarget() {\r\n        if (this._monstersAlive() === false) {\r\n            return 0;\r\n        }\r\n\r\n        var target = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(0, this.monsters.length);\r\n        while (this.monsters[target].currentHealth <= 0) {\r\n            target = (target + 1) % this.monsters.length;\r\n        }\r\n        return target;\r\n    }\r\n\r\n    _creatureWorkaround(i) {\r\n        this.monsters[i].registerEvent('onHealthChanged', (x) => { this._creatureHealthChanged(x, i); });\r\n        this.monsters[i].registerEvent('onAttackCooldownChanged', (x) => { this._creatureAttackChanged(x, i); });\r\n        this.monsters[i].registerEvent('onAnimationChanged', (anim) => { this._animationChangedHandler(i, anim); });\r\n    }\r\n\r\n    _creatureHealthChanged(x, i) {\r\n        if (this.creatureHealthCallback !== undefined) {\r\n            this.creatureHealthCallback(x, i);\r\n        }\r\n    }\r\n    _creatureAttackChanged(x, i) {\r\n        if (this.creatureAttackCallback !== undefined) {\r\n            this.creatureAttackCallback(x, i);\r\n        }\r\n    }\r\n    _animationChangedHandler(i, anim) {\r\n        if (this.animationChangedCallback !== undefined) {\r\n            this.animationChangedCallback(i, anim);\r\n        }\r\n    }\r\n\r\n    setTile(tile) {\r\n        this.activeTile = tile;\r\n        this.dropChances = [100, 100, 100, 100, 100, 100];\r\n        this.dropTotals = 0;\r\n        var tileType = _RegionRegistry__WEBPACK_IMPORTED_MODULE_7__[\"RegionRegistry\"].TILE_TYPES[tile.regName];\r\n        for (var i = 0; i < tileType.yields.length; i++) {\r\n            this.dropChances[i] += tileType.yields[i];\r\n            this.dropTotals += this.dropChances[i];\r\n        }\r\n    }\r\n\r\n    initFightWithCreatures(monsterList) {\r\n        this.combatActive = true;\r\n        this.monsters = monsterList;\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            // to save context on i when calling functions, because scope fuckery.\r\n            this.monsters[i].initCombat();\r\n            this._creatureWorkaround(i);\r\n        }\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance().statBlock.initCombat();\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            var trait = this.monsters[i].findTrait(_Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].TRAIT_CORROSIVE);\r\n            if (trait !== undefined) {\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance().statBlock.corrosion += this.monsters[i].DamageMin() * 0.01 * trait.level;\r\n            }\r\n        }\r\n        this.target = this._getTarget();\r\n        if (this.combatCallback !== undefined) {\r\n            this.combatCallback(this.activeTile.isInvaded);\r\n        }\r\n    }\r\n\r\n    initFight() {\r\n        this.combatActive = true;\r\n        this.monsters = this.activeTile.generateMonsters();\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            // to save context on i when calling functions, because scope fuckery.\r\n            this.monsters[i].initCombat();\r\n            this._creatureWorkaround(i);\r\n        }\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance().statBlock.initCombat();\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            var trait = this.monsters[i].findTrait(_Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].TRAIT_CORROSIVE);\r\n            if (trait !== undefined) {\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance().statBlock.corrosion += this.monsters[i].DamageMin() * 0.01 * trait.level;\r\n            }\r\n        }\r\n        this.target = this._getTarget();\r\n        if (this.combatCallback !== undefined) {\r\n            this.combatCallback(this.activeTile.isInvaded);\r\n        }\r\n        this.poisonTimer = 0;\r\n    }\r\n\r\n    isInCombat() { return this.combatActive === true && this.fightCooldown <= 0; }\r\n\r\n    stopCombat() { this.combatActive = false; }\r\n\r\n    _getDropIndex() {\r\n        var c = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(0, this.dropTotals);\r\n        for (var i = 0; i < this.dropChances.length; i++) {\r\n            if (c < this.dropChances[i]) {\r\n                return i;\r\n            }\r\n            c -= this.dropChances[i];\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    _handleRewards() {\r\n        this.fightCooldown = _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].COMBAT_COOLDOWN;\r\n        var rewards = {\r\n            tier: this.activeTile.parent.resourceTier,\r\n            resource: [0, 0, 0, 0, 0, 0],\r\n            shade: 0,\r\n            gold: 0,\r\n            motes: 0,\r\n            friendship: 0,\r\n            regionLevel: this.activeTile.parent.regionLevel\r\n        }\r\n        var player = _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance();\r\n\r\n        //handle wizard gold gain here\r\n        if (Math.floor((this.totalKills + this.monsters.length) / 10) > Math.floor(this.totalKills / 10)) {\r\n            rewards.gold += player.getTalentLevel(\"alchemy\") * 5 * this.activeTile.parent.townData.economyMulti;\r\n        }\r\n        this.totalKills += this.monsters.length;\r\n\r\n        for (var i = 0; i < this.monsters.length; i++) {\r\n            rewards.shade += this.monsters[i].xpReward + player.runeBonuses.shadeFlat;\r\n            rewards.motes += this.monsters[i].motes;\r\n            if (Math.random() < player.runeBonuses.moteChance) {\r\n                rewards.motes += 1 * (1 + _StarData__WEBPACK_IMPORTED_MODULE_9__[\"StarData\"].getInstance().perks.bounty.level * 0.5);\r\n            }\r\n            // calculating bonus drops here\r\n            var lvl = player.getTalentLevel(\"bounty\");\r\n            var numRewards = 1 + (lvl / 10) + ((lvl % 10) / 10 > Math.random() ? 1 : 0);\r\n            var baseLvl = this.activeTile.parent.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease;\r\n            var dropMulti = (1 + (this.monsters[i].level - baseLvl) * 0.20) + (this.activeTile.parent.regionLevel * 0.1);\r\n            dropMulti = dropMulti * (1 + _StarData__WEBPACK_IMPORTED_MODULE_9__[\"StarData\"].getInstance().perks.bounty.level * 0.5);\r\n            for (var t = 0; t < numRewards; t++) {\r\n                var idx = this._getDropIndex();\r\n                rewards.resource[idx] += Math.max(0, (this.monsters[i].dropBase + player.runeBonuses.lootFlat) *\r\n                    dropMulti * (1 + player.runeBonuses.resourceMulti));\r\n            }\r\n            rewards.gold += (this.monsters[i].dropBase / 2 + Math.max(0, this.monsters[i].level / 12) +\r\n                _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.gold.level * 0.25 +\r\n                player.runeBonuses.goldFlat) * dropMulti;\r\n            rewards.friendship += this.activeTile.getFriendshipReward();\r\n        }\r\n        if (player.getTalentLevel('bundle') > 0) {\r\n            var totalBundle = this.monsters.length * player.getTalentLevel('bundle') * 0.02;\r\n            var townProd = this.activeTile.parent._getResourcesPerDay();\r\n            for (var i = 0; i < townProd.length; i++) {\r\n                rewards.resource[i] += townProd[i] * totalBundle;\r\n            }\r\n        }\r\n        rewards.gold = (rewards.gold * (this.activeTile.explored ? 1 : 4)) * this.activeTile.parent.townData.bountyMulti *\r\n            (1 + player.runeBonuses.goldMulti);\r\n        rewards.shade *= _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().getShadowBonus() * this.activeTile.parent.townData.getFriendshipBonus() *\r\n            (1 + player.runeBonuses.shadeMulti);\r\n        rewards.friendship *= (1 + player.runeBonuses.friendshipMulti) *\r\n            (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challenges.outcast.completions * 0.1) *\r\n            (1 + player.getTalentLevel('charisma') * 0.1);\r\n\r\n        if (this.activeTile.isInvaded === true) {\r\n            if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_5__[\"ProgressionStore\"].getInstance().unlocks.motes === false) {\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_5__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].UNLOCK_MOTES_UI,\r\n                    \"Well it happened. Some big bad monsters came back to spew their horrible mists all over the \" +\r\n                    \"place again, but fortunately for you you had prepared for this. After killing the \" +\r\n                    \"great misty one in the back it dropped something you haven't seen before... sort of like Shade, but like, \" +\r\n                    \"more solid. You should probably just call them Motes of Darkness. I'm sure the townsfolk \" +\r\n                    \"will be super impressed if you bring this dumb stone back and call it that.\\n\\n\" +\r\n                    \"Oh, you can probably try putting it on your weapon if you really wanted to. It's up to you.\");\r\n            }\r\n            rewards.motes += (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.heartofdarkness.level) *\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_8__[\"WorldData\"].getInstance().invasionReward *\r\n                (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challenges.invasion.completions * 0.05);\r\n        }\r\n\r\n        rewards.motes *= (1 + _RitualData__WEBPACK_IMPORTED_MODULE_10__[\"RitualData\"].getInstance().activePerks.offerings * 0.2);\r\n        for (var i = 0; i < rewards.resource.length; i++) {\r\n            rewards.resource[i] *= (1 + _RitualData__WEBPACK_IMPORTED_MODULE_10__[\"RitualData\"].getInstance().activePerks.offerings * 0.2);\r\n        }\r\n\r\n        return rewards;\r\n    }\r\n\r\n    update(delta) {\r\n        if (this.combatActive === false) {\r\n            return;\r\n        }\r\n        if (this.globalAttackCooldown > 0) {\r\n            this.globalAttackCooldown -= delta;\r\n            return;\r\n        }\r\n        var player = _PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance();\r\n        if (this._monstersAlive() === true) {\r\n\r\n            this.poisonTimer -= delta;\r\n            if (this.poisonTimer <= 0 && this.monsters[0].findTrait(_Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].TRAIT_POISONED) !== undefined) {\r\n                var poison = this.monsters[0].findTrait(_Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].TRAIT_POISONED);\r\n                for (var i = 0; i < this.monsters.length; i++) {\r\n                    var poisonDmg = player.statBlock.currentHealth / player.statBlock.MaxHealth() > 0.5 ?\r\n                        0.04 + poison.level * 0.01 : 0.08 + poison.level * 0.02;\r\n                    player.statBlock.takeDamage(this.monsters[i].DamageMax() * poisonDmg,\r\n                        _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DMG_MAGIC);\r\n                }\r\n                this.poisonTimer += _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].POISON_TICK_DELAY;\r\n            }\r\n            for (var i = 0; i < this.monsters.length; i++) {\r\n                if (this.monsters[i].currentHealth <= 0) {\r\n                    continue;\r\n                }\r\n                var multi = _utils_Combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getAttackSpeedMultiplier(this.monsters[i].Hit(), player.statBlock.Evasion());\r\n\r\n                this.monsters[i].tickAttackCooldown(delta, multi);\r\n                this.monsters[i].tickRegen(delta);\r\n\r\n                if (this.monsters[i].canAttack() === true) {\r\n                    var crit = this.monsters[i].CritChance() > Math.random();\r\n                    var dmg = this.monsters[i].attack(player.statBlock, crit);\r\n                    this.globalAttackCooldown = _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].GLOBAL_ATTACK_COOLDOWN;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // player regen is handled elsewhere so we dont tick it here.\r\n            var multi = _utils_Combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getAttackSpeedMultiplier(player.statBlock.Hit(), this.monsters[this.target].Evasion());\r\n            player.statBlock.tickAttackCooldown(delta, multi);\r\n\r\n            if (player.statBlock.canAttack() === true) {\r\n                var crit = player.statBlock.CritChance() > Math.random();\r\n                if (player.statBlock.canCastFireball !== undefined &&\r\n                    player.statBlock.canCastFireball() === true) {\r\n                    player.statBlock._castFireball(this.monsters);\r\n                } else {\r\n                    player.statBlock.attack(this.monsters[this.target], crit);\r\n                }\r\n                if (this.monsters[this.target].currentHealth <= 0) {\r\n                    player.statBlock.heal(player.statBlock.HealthRegen() * player.runeBonuses.regenOnKill);\r\n                }\r\n                if (player.getTalentLevel(\"cleave\") > 0 && Math.random() < 0.2) {\r\n                    var newTarget = this.target;\r\n                    for (var i = 0; i < this.monsters.length; i++) {\r\n                        var num = (newTarget + i) % this.monsters.length;\r\n                        if (this.monsters[num] !== undefined && this.monsters[num].currentHealth > 0) {\r\n                            newTarget = num;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (newTarget !== this.target) {\r\n                        crit = player.statBlock.CritChance() > Math.random();\r\n                        player.statBlock.cleave(this.monsters[newTarget], crit);\r\n                        if (this.monsters[newTarget].currentHealth <= 0) {\r\n                            player.statBlock.heal(player.statBlock.HealthRegen() * player.runeBonuses.regenOnKill);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.target = this._getTarget();\r\n                this.globalAttackCooldown = _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].GLOBAL_ATTACK_COOLDOWN;\r\n            }\r\n\r\n            if (this._monstersAlive() === false) {\r\n                var rewards = this._handleRewards();\r\n                if (this.combatEndCallback !== undefined) {\r\n                    this.combatEndCallback(rewards);\r\n                }\r\n                return;\r\n            }\r\n            if (player.statBlock.currentHealth <= 0) {\r\n                this.combatActive = false;\r\n                if (this.combatEndCallback !== undefined) {\r\n                    this.combatEndCallback();\r\n                }\r\n            }\r\n        } else {\r\n            this.fightCooldown -= delta;\r\n            this.activeTile.explore(delta);\r\n            if (this.exploreCallback !== undefined) {\r\n                this.exploreCallback(this.activeTile);\r\n            }\r\n            if (this.fightCooldown <= 0) {\r\n                this.initFight();\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/CombatManager.js?");

/***/ }),

/***/ "./src/data/CreatureBlock.js":
/*!***********************************!*\
  !*** ./src/data/CreatureBlock.js ***!
  \***********************************/
/*! exports provided: CreatureBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreatureBlock\", function() { return CreatureBlock; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n// holds information on a creatures stats\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// stat calculations:\r\n// attacks always hit, but attack speed is adjusted by hit chance/evasion. Higher hit chance means\r\n// faster attack speeds.\r\n// strength increases min damage by 0.4 and max by 1\r\n// dexterity increases hit chance by 7\r\n// agility increase evasion by 7\r\n// endurance increases health by 5,\r\n// recovery increases HP regen by 0.1 /s\r\n// defense increases armor by 0.2 and armor values from gear by 1.5%\r\n\r\n\r\nclass CreatureBlock {\r\n    constructor() {\r\n        this.stats = {\r\n            strength: 5, // damage\r\n            dexterity: 5, // hit chance\r\n            agility: 5, // evasion\r\n            endurance: 5, //health\r\n            recovery: 5, //hp/energy regen?\r\n            defense: 5, //armor increase\r\n            accuracy: 5, //crit power\r\n            hit: 40,\r\n            evasion: 40,\r\n            critPower: 25,\r\n            critResistance: 25\r\n        };\r\n        this.statBonuses = {\r\n            health: 0,\r\n            damageMin: 0,\r\n            damageMax: 0,\r\n            strength: 0,\r\n            dexterity: 0,\r\n            agility: 0,\r\n            endurance: 0,\r\n            recovery: 0,\r\n            defense: 0,\r\n            accuracy: 0,\r\n            hit: 0,\r\n            evasion: 0,\r\n            critPower: 0,\r\n            critResistance: 0,\r\n            critChance: 0,\r\n            healthRegen: 0,\r\n            armor: 0\r\n        };\r\n        this.hitAnim = \"claws\";\r\n        this.critAnim = \"clawscrit\";\r\n        this.level = 0;\r\n        this.currentHealth = 25;\r\n        this.attackCooldown = 0;\r\n        this.attackSpeed = 1500;\r\n        this.stunTimer = 0;\r\n        this.name = \"\";\r\n        this.xpReward = 0;\r\n        this.drops = [];\r\n        this.motes = 0;\r\n        this.icon = { sprite: \"enemyicons\", tile: 8 };\r\n        this.traits = [];\r\n        this.shieldValue = 0;\r\n        this.shieldCooldown = 0;\r\n        this.slowTimer = 0;\r\n        this.slowPercent = 0;\r\n        this.slowDamage = 0;\r\n        this.igniteTimer = 0;\r\n        this.igniteDamage = 0;\r\n        this.corrosion = 0;\r\n        this.magicHitCounter = 0;\r\n        this.dmgType = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_NORMAL;\r\n\r\n        this.healthChangedHandlers = [];\r\n        this.attackCooldownChangedHandlers = [];\r\n        this.animationChangedHandlers = [];\r\n    }\r\n\r\n    MaxHealth() {\r\n        var ret = this.statBonuses.health + this.Endurance() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HP_PER_ENDURANCE;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Strength() {\r\n        var ret = this.stats.strength + this.statBonuses.strength;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Dexterity() {\r\n        var ret = this.stats.dexterity + this.statBonuses.dexterity;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Agility() {\r\n        var ret = this.stats.agility + this.statBonuses.agility;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Endurance() {\r\n        var ret = this.stats.endurance + this.statBonuses.endurance;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Recovery() {\r\n        var ret = this.stats.recovery + this.statBonuses.recovery;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Defense() {\r\n        var ret = this.stats.defense + this.statBonuses.defense;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Accuracy() {\r\n        var ret = this.stats.accuracy + this.statBonuses.accuracy;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Hit() {\r\n        var ret = this.stats.hit + this.statBonuses.hit + this.Dexterity() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_PER_DEXTERITY;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Evasion() {\r\n        var ret = this.stats.evasion + this.statBonuses.evasion + this.Agility() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].EVA_PER_AGILITY;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    CritChance() {\r\n        var ret = this.statBonuses.critChance;\r\n        return ret;\r\n    }\r\n    Aim() {\r\n        var ret = this.stats.critPower + this.statBonuses.critPower + this.Accuracy() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CRITPOWER_PER_ACCURACY;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Toughness() {\r\n        var ret = this.stats.critResistance + this.statBonuses.critResistance + this.Endurance() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CRITRESISTANCE_PER_ENDURANCE;\r\n        ret = ret * (this.shieldValue > 0 ? 10 : 1);\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    DamageMin() {\r\n        var ret = this.statBonuses.damageMin + this.Strength() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].STRENGTH_DMG_MIN;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    DamageMax() {\r\n        var ret = this.statBonuses.damageMax + this.Strength() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].STRENGTH_DMG_MAX;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    HealthRegen() {\r\n        var ret = this.statBonuses.healthRegen + this.Recovery() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].REGEN_PER_RECOVERY;\r\n        return Math.floor(Math.max(0, ret) * 10) / 10;\r\n    }\r\n    Armor() {\r\n        var ret = this.Defense() * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].ARMOR_PER_DEFENSE + this.statBonuses.armor;\r\n        return Math.floor(Math.max(0, ret));\r\n    }\r\n    AttackSpeed() {\r\n        return this.attackSpeed;\r\n    }\r\n    CritDamage(tough) {\r\n        return Math.max(1, 1 + (-0.5 + (Math.sqrt(this.Aim()) / Math.sqrt(tough))) * 0.5);\r\n    }\r\n    GlancingChance(tough) {\r\n        return Math.min(0.5, (1 - (this.Aim() / tough)) / 2);\r\n    }\r\n    GlancingDamage(tough) {\r\n        return Math.min(1, this.Aim() / tough);\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        if (event === 'onHealthChanged') {\r\n            this.healthChangedHandlers.push(callback);\r\n        } else if (event === 'onAttackCooldownChanged') {\r\n            this.attackCooldownChangedHandlers.push(callback);\r\n        } else if (event === 'onAnimationChanged') {\r\n            this.animationChangedHandlers.push(callback);\r\n        }\r\n    }\r\n\r\n    _onHealthChanged() {\r\n        for (var i = 0; i < this.healthChangedHandlers.length; i++) {\r\n            this.healthChangedHandlers[i](this.currentHealth);\r\n        }\r\n    }\r\n    _onAttackCooldownChanged() {\r\n        for (var i = 0; i < this.attackCooldownChangedHandlers.length; i++) {\r\n            this.attackCooldownChangedHandlers[i](this.attackCooldown);\r\n        }\r\n    }\r\n    _onAnimationChanged(animKey) {\r\n        for (var i = 0; i < this.animationChangedHandlers.length; i++) {\r\n            this.animationChangedHandlers[i](animKey);\r\n        }\r\n    }\r\n\r\n    initCombat() {\r\n        this.corrosion = 0;\r\n        this.currentHealth = this.MaxHealth();\r\n        if (this.findTrait({ type: _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_FIRSTSTRIKE }) !== undefined) {\r\n            this.attackCooldown = this.AttackSpeed() * 0.95;\r\n        }\r\n    }\r\n\r\n    canAttack() { return this.attackCooldown >= this.AttackSpeed(); }\r\n\r\n    takeDamage(damage, __hitType, dmgType) {\r\n        var dmg = damage;\r\n        if (dmgType === _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_NORMAL) {\r\n            if (this.shieldValue > 0) {\r\n                var shieldDmg = Math.min(this.shieldValue, dmg);\r\n                this.shieldValue -= shieldDmg;\r\n                dmg -= shieldDmg;\r\n            }\r\n            if (dmg > 0) {\r\n                dmg = Math.max(1, dmg - this.Armor());\r\n            }\r\n        } else if (dmgType === _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC) {\r\n            // magic damage ignores 90% of armor but does half damage to shields\r\n            var shieldDmg = Math.min(this.shieldValue, dmg / 2);\r\n            this.shieldValue -= shieldDmg;\r\n            dmg -= shieldDmg * 2;\r\n            dmg = Math.max(1, dmg - this.Armor() * 0.1);\r\n        } else if (dmgType === _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_TRUE) {\r\n            //true damage bypasses shields?\r\n        }\r\n        this.currentHealth -= dmg;\r\n        this._onHealthChanged();\r\n        return dmg;\r\n    }\r\n    rollDamage() {\r\n        return _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].randint(this.DamageMin(), this.DamageMax() + 1);\r\n    }\r\n    tickRegen(delta, __inCombat = true) {\r\n        var oldVal = this.currentHealth;\r\n        var healMulti = 1;\r\n        this.currentHealth = Math.min(this.MaxHealth(), this.currentHealth + this.HealthRegen() * (delta / 1000) * healMulti);\r\n        //handle shielded here\r\n        var shielded = this.findTrait(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_SHIELDED);\r\n        if (shielded !== undefined) {\r\n            this.shieldCooldown -= delta;\r\n            if (this.shieldCooldown <= 0) {\r\n                this.shieldValue += this.Armor() * shielded.level * 0.2;\r\n                this.shieldCooldown = 1000;\r\n                this._onHealthChanged();\r\n            }\r\n        }\r\n        if (oldVal != this.currentHealth) {\r\n            this._onHealthChanged();\r\n        }\r\n\r\n    }\r\n    tickAttackCooldown(delta, multi) {\r\n        if (this.stunTimer > 0) {\r\n            this.stunTimer -= delta;\r\n            return;\r\n        }\r\n        if (this.igniteTimer > 0) {\r\n            this.igniteTimer -= delta;\r\n            this.takeDamage(this.igniteDamage * (delta / 1000), _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_TRUE);\r\n        }\r\n        if (this.slowTimer > 0) {\r\n            this.slowTimer -= delta;\r\n            this.takeDamage(this.slowDamage * (delta / 1000), _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_TRUE);\r\n            delta = delta * (1 - this.slowPercent);\r\n        }\r\n        var oldVal = this.attackCooldown;\r\n        this.attackCooldown = Math.min(this.attackSpeed, this.attackCooldown + delta * multi);\r\n        if (oldVal != this.attackCooldown) {\r\n            this._onAttackCooldownChanged();\r\n        }\r\n    }\r\n    attack(creature) {\r\n        var rawDmg = this.rollDamage();\r\n        var anim = this.hitAnim;\r\n        var hitType = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL;\r\n        var roll = Math.random();\r\n        if (roll <= this.CritChance()) {\r\n            anim = this.critAnim;\r\n            hitType = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_CRIT;\r\n            rawDmg = rawDmg * this.CritDamage(creature.Toughness());\r\n        } else if (roll > 1 - this.GlancingChance(creature.Toughness())) {\r\n            anim = \"glancing\";\r\n            hitType = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_GLANCING;\r\n            rawDmg = rawDmg * this.GlancingDamage(creature.Toughness());\r\n        }\r\n        var dmg = creature.takeDamage(rawDmg, hitType, this.dmgType);\r\n        creature.playAnimation(anim);\r\n        this.attackCooldown = 0;\r\n        //handle beserk trait, giving attack speed refresh\r\n        var beserk = this.findTrait(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_BESERK);\r\n        if (beserk !== undefined) {\r\n            if (Math.random() < (1 - Math.pow(0.92, beserk.level))) {\r\n                this.attackCooldown = this.attackSpeed / 2;\r\n            }\r\n        }\r\n        var magic = this.findTrait(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_MAGICAL);\r\n        if (magic !== undefined) {\r\n            this.magicHitCounter -= 1;\r\n            if (this.magicHitCounter <= 0) {\r\n                creature.takeDamage(this.DamageMax() * 0.20 * magic.level, hitType, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC);\r\n                this.magicHitCounter = 3;\r\n            }\r\n        }\r\n\r\n        this._onAttackCooldownChanged();\r\n        return dmg;\r\n    }\r\n    playAnimation(anim) {\r\n        this._onAnimationChanged(anim);\r\n    }\r\n\r\n    equip(gear) {\r\n        var bonus = gear.getStatBonuses();\r\n        for (const prop in bonus) {\r\n            this.statBonuses[prop] += bonus[prop];\r\n        }\r\n    }\r\n    unequip(gear) {\r\n        var bonus = gear.getStatBonuses();\r\n        for (const prop in bonus) {\r\n            this.statBonuses[prop] -= bonus[prop];\r\n        }\r\n    }\r\n\r\n\r\n    // used for monsters to add scaling based on level\r\n    setMonsterStats(name, scaleBlock, attackSpeed, critChance, dmgType, level, tier, shadeBase, rewardBase, icon) {\r\n        this.level = level;\r\n        // offset by 1, level 0 should have no bonuses\r\n        var rLvl = level - 1;\r\n        // negative scaling values are bad so ignore them here.\r\n        var sLvl = Math.max(0, rLvl);\r\n        // monster stat bonuses\r\n        var flatStat = rLvl * _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONSTER_STAT_PER_LEVEL;\r\n        var scaleStat = Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONSTER_STATSCALE_PER_LEVEL, sLvl) * Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONSTER_STATSCALE_PER_REGION, tier) *\r\n            Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONSTER_STATSCALE_POST_MYRAH, Math.max(0, tier - 10));\r\n        var scaleXp = Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONSTER_XPSCALE_PER_REGION, tier);\r\n        scaleStat *= (1 + _RitualData__WEBPACK_IMPORTED_MODULE_5__[\"RitualData\"].getInstance().activePerks.ruinouspower * 0.25);\r\n\r\n        this.stats.strength = (this.stats.strength + flatStat) * scaleBlock.strength * scaleStat;\r\n        this.stats.dexterity = (this.stats.dexterity + flatStat) * scaleBlock.dexterity * scaleStat;\r\n        this.stats.agility = (this.stats.agility + flatStat) * scaleBlock.agility * scaleStat;\r\n        this.stats.endurance = (this.stats.endurance + flatStat) * scaleBlock.endurance * scaleStat;\r\n        this.stats.recovery = (this.stats.recovery + flatStat) * scaleBlock.recovery * scaleStat;\r\n        this.stats.defense = (this.stats.defense + flatStat) * scaleBlock.defense * scaleStat;\r\n        this.stats.accuracy = (this.stats.accuracy + flatStat) * scaleBlock.accuracy * scaleStat;\r\n        this.statBonuses.armor = this.Armor() * (scaleBlock.armor - 1);\r\n        this.statBonuses.healthRegen = this.HealthRegen() * (scaleBlock.healthRegen - 1);\r\n        this.statBonuses.damageMin = this.DamageMin() * (scaleBlock.damageMin - 1);\r\n        this.statBonuses.damageMax = this.DamageMax() * (scaleBlock.damageMax - 1);\r\n        this.statBonuses.hit = this.Hit() * (scaleBlock.hit - 1);\r\n        this.statBonuses.evasion = this.Evasion() * (scaleBlock.evasion - 1);\r\n        this.statBonuses.health = this.MaxHealth() * (scaleBlock.health - 1);\r\n        this.statBonuses.critChance = critChance;\r\n\r\n        this.attackSpeed = attackSpeed;\r\n        this.attackCooldown = 0;\r\n        this.dmgType = dmgType;\r\n\r\n        this.currentHealth = this.MaxHealth();\r\n        this.name = level < 1 ? \"Weak \" + name : name;\r\n        var shade = shadeBase + (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.shadow2.level * 2);\r\n        this.xpReward = shade + (shade / 4) * rLvl;\r\n        this.xpReward = this.xpReward * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.megamonsters.completions * 0.05) * scaleXp *\r\n            (1 + _StarData__WEBPACK_IMPORTED_MODULE_4__[\"StarData\"].getInstance().perks.mists.level * 0.25);\r\n        this.dropBase = rewardBase;\r\n        this.icon = icon;\r\n    }\r\n\r\n    findTrait(trait) {\r\n        for (var i = 0; i < this.traits.length; i++) {\r\n            if (this.traits[i].type === trait) {\r\n                return this.traits[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    applyTraits() {\r\n        var extraStats = {\r\n            health: 0,\r\n            damageMin: 0,\r\n            damageMax: 0,\r\n            strength: 0,\r\n            dexterity: 0,\r\n            agility: 0,\r\n            endurance: 0,\r\n            recovery: 0,\r\n            defense: 0,\r\n            accuracy: 0,\r\n            hit: 0,\r\n            evasion: 0,\r\n            critPower: 0,\r\n            critResistance: 0,\r\n            critChance: 0,\r\n            healthRegen: 0,\r\n            armor: 0,\r\n            xpReward: 0,\r\n            motes: 0\r\n        };\r\n        var firstStrike = false;\r\n        var traitLevels = 0;\r\n\r\n        for (var i = 0; i < this.traits.length; i++) {\r\n            var trait = this.traits[i];\r\n            traitLevels += trait.level;\r\n            switch (trait.type) {\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_DIRE:\r\n                    extraStats.strength += this.Strength() * (0.2 * trait.level);\r\n                    extraStats.dexterity += this.Dexterity() * (0.2 * trait.level);\r\n                    extraStats.agility += this.Agility() * (0.2 * trait.level);\r\n                    extraStats.endurance += this.Endurance() * (0.2 * trait.level);\r\n                    extraStats.recovery += this.Recovery() * (0.2 * trait.level);\r\n                    extraStats.defense += this.Defense() * (0.2 * trait.level);\r\n                    extraStats.accuracy += this.Accuracy() * (0.2 * trait.level);\r\n                    extraStats.xpReward += this.xpReward * (0.75 * trait.level);\r\n                    extraStats.motes += trait.level + Math.floor(this.level / 20);\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_MONSTROUS:\r\n                    extraStats.damageMin += this.DamageMin() * (0.1 * trait.level);\r\n                    extraStats.damageMax += this.DamageMax() * (0.1 * trait.level);\r\n                    extraStats.health += this.MaxHealth() * (0.25 * trait.level);\r\n                    this.attackSpeed = this.attackSpeed * 1.15;\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_QUICK:\r\n                    extraStats.evasion += this.Evasion() * (0.25 * trait.level);\r\n                    this.attackSpeed = this.attackSpeed * 0.85;\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_DEADLY:\r\n                    extraStats.critChance = this.statBonuses.critChance;\r\n                    extraStats.critPower += this.Aim() * (0.3 * trait.level);\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_BESERK:\r\n                    extraStats.hit += this.Hit() * (0.2 * trait.level);\r\n                    extraStats.healthRegen += this.HealthRegen() * (0.1 * trait.level);\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_FIRSTSTRIKE:\r\n                    firstStrike = true;\r\n                    extraStats.accuracy += this.Accuracy() * (0.25 * trait.level);\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_REGENERATING:\r\n                    extraStats.healthRegen = this.HealthRegen() * 0.3 * trait.level;\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_THORNS:\r\n                    extraStats.armor += this.Armor() * (0.1 * trait.level);\r\n                    break;\r\n                case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_INVADER:\r\n                    var pow = _WorldData__WEBPACK_IMPORTED_MODULE_3__[\"WorldData\"].getInstance().getInvasionPower() - 1;\r\n                    var reward = _WorldData__WEBPACK_IMPORTED_MODULE_3__[\"WorldData\"].getInstance().getInvasionReward() - 1;\r\n                    extraStats.strength += this.Strength() * pow;\r\n                    extraStats.dexterity += this.Dexterity() * pow;\r\n                    extraStats.agility += this.Agility() * pow;\r\n                    extraStats.endurance += this.Endurance() * pow;\r\n                    extraStats.recovery += this.Recovery() * pow;\r\n                    extraStats.defense += this.Defense() * pow;\r\n                    extraStats.accuracy += this.Accuracy() * pow;\r\n                    extraStats.xpReward += this.xpReward * reward;\r\n                    break;\r\n            }\r\n            extraStats.xpReward += this.xpReward * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.megamonsters.completions * 0.01 * trait.level);\r\n        }\r\n        var moteChance = _StarData__WEBPACK_IMPORTED_MODULE_4__[\"StarData\"].getInstance().perks.solidification.level * traitLevels;\r\n        extraStats.motes += Math.floor(moteChance / 10);\r\n        extraStats.motes += Math.random() < (moteChance % 10) / 10 ? 1 : 0;\r\n\r\n        for (const prop in this.statBonuses) {\r\n            this.statBonuses[prop] += extraStats[prop];\r\n        }\r\n        this.xpReward += extraStats.xpReward;\r\n        this.motes += extraStats.motes;\r\n        this.currentHealth = this.MaxHealth();\r\n        if (firstStrike === true) {\r\n            this.attackCooldown = this.AttackSpeed() * 0.95;\r\n        }\r\n    }\r\n\r\n    addTrait(trait, level) {\r\n        var newTrait = this.findTrait(trait);\r\n        if (newTrait === undefined) {\r\n            newTrait = { type: trait, level: level };\r\n            this.traits.push(newTrait);\r\n        } else {\r\n            newTrait.level += level;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/CreatureBlock.js?");

/***/ }),

/***/ "./src/data/CreatureRegistry.js":
/*!**************************************!*\
  !*** ./src/data/CreatureRegistry.js ***!
  \**************************************/
/*! exports provided: CreatureRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreatureRegistry\", function() { return CreatureRegistry; });\n/* harmony import */ var _CreatureBlock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CreatureBlock */ \"./src/data/CreatureBlock.js\");\n/* harmony import */ var _DungeonBlock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DungeonBlock */ \"./src/data/DungeonBlock.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\n\r\n\r\nvar creatureDefs = {};\r\nvar dungeonDefs = {};\r\n\r\ncreatureDefs['wolf'] = {\r\n    name: \"Wolf\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.85,\r\n        dexterity: 1.3,\r\n        agility: 1,\r\n        endurance: 0.7,\r\n        recovery: 1,\r\n        defense: 0.95,\r\n        accuracy: 1.3,\r\n        armor: 1.5,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 1.27,\r\n        damageMax: 1.3,\r\n        hit: 1,\r\n        evasion: 1.3\r\n    },\r\n    attackSpeed: 1100,\r\n    critChance: 0.3,\r\n    shadeBase: 19,\r\n    rewardBase: 1.9,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 2 }\r\n};\r\ncreatureDefs['bear'] = {\r\n    name: \"Bear\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.3,\r\n        dexterity: 0.8,\r\n        agility: 0.8,\r\n        endurance: 1.4,\r\n        recovery: 1.2,\r\n        defense: 1.25,\r\n        accuracy: 0.8,\r\n        armor: 1.8,\r\n        health: 1.2,\r\n        healthRegen: 1,\r\n        damageMin: 0.75,\r\n        damageMax: 1.32,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1800,\r\n    critChance: 0.14,\r\n    shadeBase: 28,\r\n    rewardBase: 2.4,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 5 }\r\n};\r\ncreatureDefs['plant'] = {\r\n    name: \"Plant\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.85,\r\n        dexterity: 1.2,\r\n        agility: 1.2,\r\n        endurance: 1.2,\r\n        recovery: 1,\r\n        defense: 1,\r\n        accuracy: 1,\r\n        armor: 1.75,\r\n        health: 0.8,\r\n        healthRegen: 1.3,\r\n        damageMin: 1,\r\n        damageMax: 1.12,\r\n        hit: 1.2,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1350,\r\n    critChance: 0.1,\r\n    shadeBase: 19,\r\n    rewardBase: 2.2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 3 }\r\n};\r\ncreatureDefs['slime'] = {\r\n    name: \"Slime\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.875,\r\n        dexterity: 1,\r\n        agility: 1.2,\r\n        endurance: 1,\r\n        recovery: 1.2,\r\n        defense: 0.95,\r\n        accuracy: 0.8,\r\n        armor: 1.25,\r\n        health: 1,\r\n        healthRegen: 2.3,\r\n        damageMin: 1,\r\n        damageMax: 1.1,\r\n        hit: 1,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1300,\r\n    critChance: 0.1,\r\n    shadeBase: 16,\r\n    rewardBase: 1.8,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 0 }\r\n};\r\ncreatureDefs['bloom'] = {\r\n    name: \"Bloom\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1,\r\n        dexterity: 1.4,\r\n        agility: 0.6,\r\n        endurance: 1,\r\n        recovery: 1.2,\r\n        defense: 1,\r\n        accuracy: 0.6,\r\n        armor: 1.55,\r\n        health: 1,\r\n        healthRegen: 1.4,\r\n        damageMin: 1.075,\r\n        damageMax: 1.075,\r\n        hit: 1,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1100,\r\n    critChance: 0.17,\r\n    shadeBase: 17,\r\n    rewardBase: 2.2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 4 }\r\n};\r\ncreatureDefs['goblin'] = {\r\n    name: \"Goblin\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.77,\r\n        dexterity: 1.2,\r\n        agility: 1.6,\r\n        endurance: 0.8,\r\n        recovery: 0.8,\r\n        defense: 1,\r\n        accuracy: 1.4,\r\n        armor: 1.15,\r\n        health: 1,\r\n        healthRegen: 0.8,\r\n        damageMin: 1.275,\r\n        damageMax: 1.375,\r\n        hit: 0.9,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1300,\r\n    critChance: 0.4,\r\n    shadeBase: 15,\r\n    rewardBase: 1.7,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 12 }\r\n};\r\ncreatureDefs['formation'] = {\r\n    name: \"Formation\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.1,\r\n        dexterity: 1.1,\r\n        agility: 0.8,\r\n        endurance: 1.1,\r\n        recovery: 1.1,\r\n        defense: 1.15,\r\n        accuracy: 1.1,\r\n        armor: 2.9,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 1.15,\r\n        damageMax: 1.15,\r\n        hit: 1.1,\r\n        evasion: 1.1\r\n    },\r\n    attackSpeed: 1400,\r\n    critChance: 0.11,\r\n    shadeBase: 27,\r\n    rewardBase: 2.7,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 10 }\r\n};\r\ncreatureDefs['whale'] = {\r\n    name: \"Whale\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.5,\r\n        dexterity: 0.85,\r\n        agility: 0.55,\r\n        endurance: 1.5,\r\n        recovery: 1.5,\r\n        defense: 0.95,\r\n        accuracy: 0.8,\r\n        armor: 1.5,\r\n        health: 1.5,\r\n        healthRegen: 1.5,\r\n        damageMin: 1.5,\r\n        damageMax: 1.55,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 2400,\r\n    critChance: 0.1,\r\n    shadeBase: 35,\r\n    rewardBase: 3.5,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 6 }\r\n};\r\ncreatureDefs['fish'] = {\r\n    name: \"Fish\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.94,\r\n        dexterity: 1.1,\r\n        agility: 1.4,\r\n        endurance: 1,\r\n        recovery: 0.8,\r\n        defense: 1.25,\r\n        accuracy: 1,\r\n        armor: 1.4,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 1,\r\n        damageMax: 1.1,\r\n        hit: 1,\r\n        evasion: 1.3\r\n    },\r\n    attackSpeed: 1200,\r\n    critChance: 0.17,\r\n    shadeBase: 19,\r\n    rewardBase: 2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 7 }\r\n};\r\ncreatureDefs['lizard'] = {\r\n    name: \"Lizard\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.54,\r\n        dexterity: 1.4,\r\n        agility: 0.7,\r\n        endurance: 1.3,\r\n        recovery: 0.6,\r\n        defense: 1.45,\r\n        accuracy: 1,\r\n        armor: 1.95,\r\n        health: 1.3,\r\n        healthRegen: 1,\r\n        damageMin: 1.1,\r\n        damageMax: 1.1,\r\n        hit: 1.1,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1700,\r\n    critChance: 0.14,\r\n    shadeBase: 33,\r\n    rewardBase: 2.6,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 13 }\r\n};\r\ncreatureDefs['gateguardian'] = {\r\n    name: \"Gate Guardian\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.65,\r\n        dexterity: 1.1,\r\n        agility: 0.8,\r\n        endurance: 1.5,\r\n        recovery: 1.3,\r\n        defense: 1.1,\r\n        accuracy: 0.9,\r\n        armor: 2.7,\r\n        health: 1.2,\r\n        healthRegen: 1,\r\n        damageMin: 1.2,\r\n        damageMax: 1.25,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 2000,\r\n    critChance: 0.19,\r\n    shadeBase: 44,\r\n    rewardBase: 3.7,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['elk'] = {\r\n    name: \"Elk\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.15,\r\n        dexterity: 1.5,\r\n        agility: 1.2,\r\n        endurance: 1.2,\r\n        recovery: 0.7,\r\n        defense: 1,\r\n        accuracy: 0.5,\r\n        armor: 1.65,\r\n        health: 1.15,\r\n        healthRegen: 1,\r\n        damageMin: 1,\r\n        damageMax: 1.15,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1600,\r\n    critChance: 0.15,\r\n    shadeBase: 22,\r\n    rewardBase: 2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 1 }\r\n};\r\ncreatureDefs['drake'] = {\r\n    name: \"Drake\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.45,\r\n        dexterity: 1.1,\r\n        agility: 1.1,\r\n        endurance: 1.5,\r\n        recovery: 1,\r\n        defense: 1.55,\r\n        accuracy: 1,\r\n        armor: 2,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 1.2,\r\n        damageMax: 1.3,\r\n        hit: 1,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1850,\r\n    critChance: 0.17,\r\n    shadeBase: 39,\r\n    rewardBase: 3.2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['cactus'] = {\r\n    name: \"Cactus\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.95,\r\n        dexterity: 1.2,\r\n        agility: 0.7,\r\n        endurance: 0.9,\r\n        recovery: 1.3,\r\n        defense: 1.45,\r\n        accuracy: 1,\r\n        armor: 2.1,\r\n        health: 1.2,\r\n        healthRegen: 1.5,\r\n        damageMin: 1,\r\n        damageMax: 1.125,\r\n        hit: 1,\r\n        evasion: 0.9\r\n    },\r\n    attackSpeed: 1800,\r\n    critChance: 0.31,\r\n    shadeBase: 26,\r\n    rewardBase: 2.1,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 11 }\r\n};\r\ncreatureDefs['moss'] = {\r\n    name: \"Moss\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.35,\r\n        dexterity: 1.2,\r\n        agility: 1,\r\n        endurance: 1.2,\r\n        recovery: 1.5,\r\n        defense: 1.9,\r\n        accuracy: 1,\r\n        armor: 1.65,\r\n        health: 1,\r\n        healthRegen: 1.5,\r\n        damageMin: 1.05,\r\n        damageMax: 1.15,\r\n        hit: 1,\r\n        evasion: 0.9\r\n    },\r\n    attackSpeed: 1850,\r\n    critChance: 0.21,\r\n    shadeBase: 37,\r\n    rewardBase: 3.5,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['lion'] = {\r\n    name: \"Lion\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.425,\r\n        dexterity: 0.9,\r\n        agility: 1.4,\r\n        endurance: 1.5,\r\n        recovery: 1,\r\n        defense: 1.25,\r\n        accuracy: 1.4,\r\n        armor: 1.5,\r\n        health: 1.3,\r\n        healthRegen: 0.9,\r\n        damageMin: 1.25,\r\n        damageMax: 1.45,\r\n        hit: 1,\r\n        evasion: 1.1\r\n    },\r\n    attackSpeed: 2300,\r\n    critChance: 0.21,\r\n    shadeBase: 37,\r\n    rewardBase: 2.5,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['gnoll'] = {\r\n    name: \"Gnoll\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.15,\r\n        dexterity: 1.5,\r\n        agility: 1.2,\r\n        endurance: 1.1,\r\n        recovery: 0.5,\r\n        defense: 1.15,\r\n        accuracy: 1.2,\r\n        armor: 2.2,\r\n        health: 1.1,\r\n        healthRegen: 1,\r\n        damageMin: 1.15,\r\n        damageMax: 1.25,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1450,\r\n    critChance: 0.1,\r\n    shadeBase: 28,\r\n    rewardBase: 2.7,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['coyote'] = {\r\n    name: \"Coyote\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1,\r\n        dexterity: 1.5,\r\n        agility: 1.4,\r\n        endurance: 1,\r\n        recovery: 1,\r\n        defense: 1,\r\n        accuracy: 1.6,\r\n        armor: 1.45,\r\n        health: 1.1,\r\n        healthRegen: 1,\r\n        damageMin: 1.15,\r\n        damageMax: 1.2,\r\n        hit: 1.1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1300,\r\n    critChance: 0.25,\r\n    shadeBase: 28,\r\n    rewardBase: 2.1,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['catfish'] = {\r\n    name: \"Catfish\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.25,\r\n        dexterity: 1.1,\r\n        agility: 1.7,\r\n        endurance: 1,\r\n        recovery: 1,\r\n        defense: 1.25,\r\n        accuracy: 1.3,\r\n        armor: 1.3,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 0.95,\r\n        damageMax: 1.175,\r\n        hit: 1.2,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1250,\r\n    critChance: 0.27,\r\n    shadeBase: 26,\r\n    rewardBase: 2.2,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ncreatureDefs['lootgoblin'] = {\r\n    name: \"Loot Goblin\",\r\n    scaleBlock:\r\n    {\r\n        strength: 0.77,\r\n        dexterity: 1.2,\r\n        agility: 1.6,\r\n        endurance: 0.9,\r\n        recovery: 0.9,\r\n        defense: 1,\r\n        accuracy: 1.15,\r\n        armor: 1.5,\r\n        health: 1.4,\r\n        healthRegen: 0.8,\r\n        damageMin: 1.275,\r\n        damageMax: 1.375,\r\n        hit: 0.9,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1400,\r\n    critChance: 0.4,\r\n    shadeBase: 190,\r\n    rewardBase: 15,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 14 }\r\n};\r\ncreatureDefs['star1'] = {\r\n    name: \"Raging Star\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.5,\r\n        dexterity: 1.4,\r\n        agility: 1,\r\n        endurance: 1.2,\r\n        recovery: 1,\r\n        defense: 1,\r\n        accuracy: 0.9,\r\n        armor: 1.9,\r\n        health: 1,\r\n        healthRegen: 1,\r\n        damageMin: 1.1,\r\n        damageMax: 1.3,\r\n        hit: 1.2,\r\n        evasion: 1.2\r\n    },\r\n    attackSpeed: 1350,\r\n    critChance: 0.17,\r\n    shadeBase: 28,\r\n    rewardBase: 2.4,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 16 }\r\n};\r\ncreatureDefs['star2'] = {\r\n    name: \"Pulsing Star\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.1,\r\n        dexterity: 1.4,\r\n        agility: 1.7,\r\n        endurance: 0.9,\r\n        recovery: 1.4,\r\n        defense: 1.1,\r\n        accuracy: 1.1,\r\n        armor: 1.4,\r\n        health: 1,\r\n        healthRegen: 1.1,\r\n        damageMin: 1.1,\r\n        damageMax: 1.35,\r\n        hit: 1.1,\r\n        evasion: 1.1\r\n    },\r\n    attackSpeed: 1150,\r\n    critChance: 0.35,\r\n    shadeBase: 30,\r\n    rewardBase: 2.6,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 18 }\r\n};\r\ncreatureDefs['star3'] = {\r\n    name: \"Rising Star\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.5,\r\n        dexterity: 0.8,\r\n        agility: 1,\r\n        endurance: 1.6,\r\n        recovery: 1.2,\r\n        defense: 1.3,\r\n        accuracy: 0.9,\r\n        armor: 1.5,\r\n        health: 1.5,\r\n        healthRegen: 1,\r\n        damageMin: 1,\r\n        damageMax: 1.5,\r\n        hit: 1,\r\n        evasion: 1\r\n    },\r\n    attackSpeed: 1700,\r\n    critChance: 0.1,\r\n    shadeBase: 32,\r\n    rewardBase: 2.8,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 17 }\r\n};\r\ncreatureDefs['void'] = {\r\n    name: \"Voidspawn\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.2,\r\n        dexterity: 1.2,\r\n        agility: 1.2,\r\n        endurance: 1.2,\r\n        recovery: 1.2,\r\n        defense: 1.2,\r\n        accuracy: 1.2,\r\n        armor: 1.1,\r\n        health: 1.5,\r\n        healthRegen: 1.1,\r\n        damageMin: 1,\r\n        damageMax: 1.2,\r\n        hit: 1.1,\r\n        evasion: 1.1\r\n    },\r\n    attackSpeed: 1400,\r\n    critChance: 0.25,\r\n    shadeBase: 30,\r\n    rewardBase: 2.6,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 19 }\r\n};\r\ncreatureDefs['myrah1'] = {\r\n    name: \"Star Queen\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.3,\r\n        dexterity: 1.3,\r\n        agility: 1.3,\r\n        endurance: 1.3,\r\n        recovery: 1.3,\r\n        defense: 1.3,\r\n        accuracy: 1.3,\r\n        armor: 1.3,\r\n        health: 1.3,\r\n        healthRegen: 1.3,\r\n        damageMin: 1,\r\n        damageMax: 1.5,\r\n        hit: 1.3,\r\n        evasion: 1.3\r\n    },\r\n    attackSpeed: 1000,\r\n    critChance: 0.22,\r\n    shadeBase: 30,\r\n    rewardBase: 2.6,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 20 }\r\n};\r\ncreatureDefs['myrah2'] = {\r\n    name: \"MYRAH\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.5,\r\n        dexterity: 1.5,\r\n        agility: 1.5,\r\n        endurance: 1.5,\r\n        recovery: 1.5,\r\n        defense: 1.5,\r\n        accuracy: 1.5,\r\n        armor: 1.5,\r\n        health: 1.5,\r\n        healthRegen: 1.5,\r\n        damageMin: 1,\r\n        damageMax: 1.5,\r\n        hit: 1.5,\r\n        evasion: 1.5\r\n    },\r\n    attackSpeed: 1000,\r\n    critChance: 0.33,\r\n    shadeBase: 30,\r\n    rewardBase: 2.6,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_NORMAL,\r\n    icon: { sprite: \"enemyicons\", tile: 21 }\r\n};\r\ncreatureDefs['cultist'] = {\r\n    name: \"Cultist\",\r\n    scaleBlock:\r\n    {\r\n        strength: 1.4,\r\n        dexterity: 1.2,\r\n        agility: 1.3,\r\n        endurance: 1.0,\r\n        recovery: 0.8,\r\n        defense: 1.3,\r\n        accuracy: 1.3,\r\n        armor: 1.1,\r\n        health: 1.4,\r\n        healthRegen: 1.0,\r\n        damageMin: 1.2,\r\n        damageMax: 1.5,\r\n        hit: 1.0,\r\n        evasion: 1.3\r\n    },\r\n    attackSpeed: 1700,\r\n    critChance: 0.1,\r\n    shadeBase: 40,\r\n    rewardBase: 3,\r\n    dmgType: _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DMG_MAGIC,\r\n    icon: { sprite: \"enemyicons\", tile: 15 }\r\n};\r\n\r\ndungeonDefs['goblin'] = {\r\n    name: \"Goblin Horde\",\r\n    powerScale: 0.9,\r\n    healthScale: 0.9,\r\n    icon: { sprite: \"enemyicons\", tile: 12 }\r\n};\r\ndungeonDefs['wolf'] = {\r\n    name: \"Wolf Pack\",\r\n    powerScale: 1.1,\r\n    healthScale: 0.8,\r\n    icon: { sprite: \"enemyicons\", tile: 2 }\r\n};\r\ndungeonDefs['lizard'] = {\r\n    name: \"Lizard Hunting Party\",\r\n    powerScale: 1.15,\r\n    healthScale: 1.05,\r\n    icon: { sprite: \"enemyicons\", tile: 13 }\r\n};\r\ndungeonDefs['guardian'] = {\r\n    name: \"Crypt Guardians\",\r\n    powerScale: 1.0,\r\n    healthScale: 1.3,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ndungeonDefs['slime'] = {\r\n    name: \"Gelatinous Cube\",\r\n    powerScale: 0.9,\r\n    healthScale: 1.4,\r\n    icon: { sprite: \"enemyicons\", tile: 0 }\r\n};\r\ndungeonDefs['drake'] = {\r\n    name: \"Ancient Dragon\",\r\n    powerScale: 1.1,\r\n    healthScale: 1.2,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ndungeonDefs['shadow'] = {\r\n    name: \"Nameless Shadow\",\r\n    powerScale: 1.25,\r\n    healthScale: 0.9,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\ndungeonDefs['void'] = {\r\n    name: \"Crystaline Void\",\r\n    powerScale: 0.95,\r\n    healthScale: 1.4,\r\n    icon: { sprite: \"enemyicons\", tile: 9 }\r\n};\r\n// used only for player\r\ndungeonDefs['villager'] = {\r\n    name: \"Villager Horde\",\r\n    powerScale: 1,\r\n    healthScale: 1,\r\n    icon: { sprite: \"enemyicons\", tile: 8 }\r\n};\r\n\r\nclass CreatureRegistry {\r\n    static GetCreatureByName(name, level, tier) {\r\n        var creature = new _CreatureBlock__WEBPACK_IMPORTED_MODULE_0__[\"CreatureBlock\"]();\r\n        creature.setMonsterStats(creatureDefs[name].name, creatureDefs[name].scaleBlock, creatureDefs[name].attackSpeed,\r\n            creatureDefs[name].critChance, creatureDefs[name].dmgType, level, tier, creatureDefs[name].shadeBase,\r\n            creatureDefs[name].rewardBase, creatureDefs[name].icon);\r\n        return creature;\r\n    }\r\n    static GetDungeonCreatureByName(name, power, health, count) {\r\n        var creature = new _DungeonBlock__WEBPACK_IMPORTED_MODULE_1__[\"DungeonBlock\"]();\r\n        creature.setArmyStats(power, health, count, dungeonDefs[name]);\r\n        return creature;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/CreatureRegistry.js?");

/***/ }),

/***/ "./src/data/Dungeon.js":
/*!*****************************!*\
  !*** ./src/data/Dungeon.js ***!
  \*****************************/
/*! exports provided: Dungeon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dungeon\", function() { return Dungeon; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst dungeonPrefix = ['Starlit', 'Poisoned', 'Malevolent', 'Monstrous', 'Dank', 'Moody', 'Submerged', 'Burning', 'Ancient',\r\n    'Foggy', 'Winding', 'Whispering', 'Bloody', 'Malignant', 'Baleful', 'Gloomy', 'Glowing', 'Old', 'Blasted', 'Pestilent',\r\n    'Forgotten'];\r\nconst dungeonSuffix = ['Tomb', 'Crypt', 'Grove', 'Garden', 'Tower', 'Spire', 'Dungeon', 'Barrow', 'Mausoleum', 'Catacomb', 'Prison'];\r\n\r\nclass Dungeon {\r\n    constructor(level, difficulty, tier, regionLevel, maxRooms, randomizeRewards = true) {\r\n        this.level = level;\r\n        this.difficulty = difficulty;\r\n        this.tier = tier;\r\n        this.maxRooms = maxRooms;\r\n        this.completedRooms = 0;\r\n        this.rewards = [];\r\n        this.regionLevel = regionLevel;\r\n        if (randomizeRewards === true) {\r\n            this.name = this._randomizeName();\r\n            this._randomizeRewards();\r\n        }\r\n    }\r\n\r\n    _randomizeName() {\r\n        return dungeonPrefix[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, dungeonPrefix.length)] + \" \" + dungeonSuffix[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, dungeonSuffix.length)];\r\n    }\r\n\r\n    _rewardAlreadyPicked(rewardType) {\r\n        for (var i = 0; i < this.rewards.length; i++) {\r\n            if (rewardType === this.rewards[i].type) {\r\n                return true;\r\n            }\r\n        }\r\n        if (rewardType === _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.STARSHARDS &&\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_2__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === false) {\r\n            return true;\r\n        }\r\n        if (rewardType === _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.RITUAL_POINTS &&\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_2__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === false) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _randomizeRewards() {\r\n        this.rewards = [];\r\n        for (var i = 0; i < 3; i++) {\r\n            if (this.tier === 0) {\r\n                var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, 6);\r\n                while (this._rewardAlreadyPicked(num) === true) {\r\n                    var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, 6);\r\n                }\r\n                switch (num) {\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.RESOURCES:\r\n                        this.rewards.push({ type: num, amount: 28 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.SHADE:\r\n                        var shade = Math.floor((4000 + _MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().moonperks.shadow2.level * 200) * (1 + (this.level / 4)) *\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().getShadowBonus() * (1 + _StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.mists.level * 0.25));\r\n                        this.rewards.push({ type: num, amount: shade });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.MOTES:\r\n                        var motes = (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().moonperks.heartofdarkness.level) * 50 * (1 + (this.level / 5));\r\n                        this.rewards.push({ type: num, amount: motes });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.GOLD:\r\n                        var gold = Math.floor(_WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().getGoldCap() * 0.25);\r\n                        this.rewards.push({ type: num, amount: gold });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.GEAR_LEVELS:\r\n                        this.rewards.push({ type: num, amount: 5 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.RUNES:\r\n                        this.rewards.push({ type: num, amount: 4 });\r\n                        break;\r\n                }\r\n            } else if (this.tier === 1) {\r\n                var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(10, 18);\r\n                while (this._rewardAlreadyPicked(num) === true) {\r\n                    var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(10, 18);\r\n                }\r\n                switch (num) {\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.WOOD:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.LEATHER:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.METAL:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.FIBER:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.STONE:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.CRYSTAL:\r\n                        this.rewards.push({ type: num, amount: 0.15 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.PRODUCTION:\r\n                        this.rewards.push({ type: num, amount: 0.30 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.ECONOMY:\r\n                        this.rewards.push({ type: num, amount: 0.30 });\r\n                        break;\r\n                }\r\n            } else {\r\n                var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(20, 33);\r\n                while (this._rewardAlreadyPicked(num) === true) {\r\n                    var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(20, 33);\r\n                }\r\n                switch (num) {\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.STRENGTH:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.DEXTERITY:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.AGILITY:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.ENDURANCE:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.RECOVERY:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.DEFENSE:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.ACCURACY:\r\n                        this.rewards.push({ type: num, amount: 0.2 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.MOONLIGHT:\r\n                        this.rewards.push({ type: num, amount: 0.1 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.TALENTS:\r\n                        this.rewards.push({ type: num, amount: 4 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.PERM_VPOWER:\r\n                        this.rewards.push({ type: num, amount: this.level * 0.25 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.PERM_VHEALTH:\r\n                        this.rewards.push({ type: num, amount: this.level * 2.5 });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.STARSHARDS:\r\n                        var shards = _WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().getRegion(this.regionLevel).starshardsPerTile * 2;\r\n                        this.rewards.push({ type: num, amount: shards });\r\n                        break;\r\n                    case _Statics__WEBPACK_IMPORTED_MODULE_4__[\"Statics\"].DUNGEON.RITUAL_POINTS:\r\n                        this.rewards.push({ type: num, amount: Math.floor(1 + (this.regionLevel / 4)) });\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomEnemy() {\r\n\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            l: this.level,\r\n            d: this.difficulty,\r\n            t: this.tier,\r\n            rl: this.regionLevel,\r\n            n: this.name,\r\n            mr: this.maxRooms,\r\n            cr: this.completedRooms,\r\n            r: this.rewards\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    static loadFromFile(saveObj, ver) {\r\n        var dungeon = new Dungeon(saveObj.l, saveObj.d, saveObj.t, saveObj.rl, saveObj.mr, false);\r\n        dungeon.completedRooms = saveObj.cr;\r\n        dungeon.rewards = saveObj.r;\r\n        dungeon.name = saveObj.n;\r\n        return dungeon;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/Dungeon.js?");

/***/ }),

/***/ "./src/data/DungeonBlock.js":
/*!**********************************!*\
  !*** ./src/data/DungeonBlock.js ***!
  \**********************************/
/*! exports provided: DungeonBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DungeonBlock\", function() { return DungeonBlock; });\n//creatures for dungeon fights\r\nclass DungeonBlock {\r\n    constructor() {\r\n        this.power = 1;\r\n        this.health = 10;\r\n        this.maxHealth = this.health * 1;\r\n        this.currentHealth = this.maxHealth;\r\n        this.texture = { sprite: \"icons\", tile: 24 };\r\n        this.name = \"Villager\";\r\n        this.armySize = 1;\r\n    }\r\n\r\n    setArmyStats(power, health, armySize, armyDef) {\r\n        this.power = power * armyDef.powerScale;\r\n        this.health = health * armyDef.healthScale;\r\n        this.maxHealth = this.health * armySize;\r\n        this.currentHealth = this.maxHealth;\r\n        this.name = armyDef.name;\r\n        this.texture = armyDef.icon;\r\n        this.armySize = armySize;\r\n    }\r\n\r\n    ArmySize() { return Math.ceil(this.currentHealth / this.health); }\r\n    Power() { return this.ArmySize() * this.power; }\r\n    CurrentHealth() { return Math.ceil(this.currentHealth); }\r\n    MaxHealth() { return Math.ceil(this.ArmySize() * this.health); }\r\n\r\n    takeDamage(dmg) {\r\n        this.currentHealth = Math.max(0, this.currentHealth - dmg);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/DungeonBlock.js?");

/***/ }),

/***/ "./src/data/DungeonManager.js":
/*!************************************!*\
  !*** ./src/data/DungeonManager.js ***!
  \************************************/
/*! exports provided: DungeonManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DungeonManager\", function() { return DungeonManager; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CreatureRegistry */ \"./src/data/CreatureRegistry.js\");\n\r\n\r\n\r\nconst MONSTERS = ['goblin', 'wolf', 'lizard', 'guardian', 'slime'];\r\nconst BOSSES = ['shadow', 'drake', 'void'];\r\n\r\nclass DungeonManager {\r\n    constructor() {\r\n        this.combatActive = false;\r\n        this.attackCooldown = 0;\r\n        this.villagerBlock = undefined;\r\n        this.enemyBlock = undefined;\r\n        this.activeDungeon = undefined;\r\n        this.enemyCount = 0;\r\n\r\n        this.creatureChangedHandler = [];\r\n        this.playerDeathHandler = [];\r\n        this.enemyDeathHandler = [];\r\n        this.roomCompleteHandler = [];\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        switch (event) {\r\n            case \"OnCreatureChanged\":\r\n                this.creatureChangedHandler.push(callback);\r\n                break;\r\n            case \"OnPlayerDeath\":\r\n                this.playerDeathHandler.push(callback);\r\n                break;\r\n            case \"OnEnemyDeath\":\r\n                this.enemyDeathHandler.push(callback);\r\n                break;\r\n            case \"OnRoomComplete\":\r\n                this.roomCompleteHandler.push(callback);\r\n                break;\r\n        }\r\n    }\r\n\r\n    exploreDungeon(dungeon, villagerBlock) {\r\n        this.activeDungeon = dungeon;\r\n        this.combatActive = true;\r\n        this.villagerBlock = villagerBlock;\r\n        this._setupRoom();\r\n        this._onCreaturesChanged();\r\n    }\r\n\r\n    endDungeon() {\r\n        this.combatActive = false;\r\n    }\r\n\r\n    _setupRoom() {\r\n        if (this.activeDungeon.completedRooms === this.activeDungeon.maxRooms - 1) {\r\n            this._initBoss();\r\n            this.enemyCount = 1;\r\n        } else if (this.activeDungeon.completedRooms % 5 === 4) {\r\n            this._initMiniBoss();\r\n            this.enemyCount = 1;\r\n        } else {\r\n            this._initMonster();\r\n            this.enemyCount = 5;\r\n        }\r\n    }\r\n\r\n    _onCreaturesChanged() {\r\n        for (var i = 0; i < this.creatureChangedHandler.length; i++) {\r\n            this.creatureChangedHandler[i](this.villagerBlock, this.enemyBlock);\r\n        }\r\n    }\r\n    _onPlayerDeath() {\r\n        for (var i = 0; i < this.playerDeathHandler.length; i++) {\r\n            this.playerDeathHandler[i]();\r\n        }\r\n    }\r\n    _onEnemyDeath() {\r\n        for (var i = 0; i < this.enemyDeathHandler.length; i++) {\r\n            this.enemyDeathHandler[i]();\r\n        }\r\n    }\r\n    _onRoomComplete() {\r\n        for (var i = 0; i < this.roomCompleteHandler.length; i++) {\r\n            this.roomCompleteHandler[i](this.activeDungeon);\r\n        }\r\n    }\r\n\r\n    _initMonster() {\r\n        var min = 3 + Math.floor(this.activeDungeon.level / 5);\r\n        var count = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(min, Math.ceil(min * 1.2));\r\n        this.enemyBlock = _CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__[\"CreatureRegistry\"].GetDungeonCreatureByName(MONSTERS[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, MONSTERS.length)],\r\n            this.activeDungeon.difficulty, this.activeDungeon.difficulty * 10, count);\r\n    }\r\n\r\n    _initMiniBoss() {\r\n        var min = 2 + Math.floor(this.activeDungeon.level / 10);\r\n        var count = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(min, Math.ceil(min * 1.2));\r\n        var tierBonus = [3, 4];\r\n        var diff = this.activeDungeon.difficulty * tierBonus[Math.floor(this.activeDungeon.completedRooms / 5)];\r\n        this.enemyBlock = _CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__[\"CreatureRegistry\"].GetDungeonCreatureByName(MONSTERS[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, MONSTERS.length)],\r\n            Math.floor(diff), Math.floor(diff * 10), count);\r\n        this.enemyBlock.name = \"Elite \" + this.enemyBlock.name;\r\n    }\r\n\r\n    _initBoss() {\r\n        var min = 3 + Math.floor(this.activeDungeon.level / 5);\r\n        var count = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(min, Math.ceil(min * 1.2));\r\n        var tierBonus = [2, 2.5, 3];\r\n        var diff = count * tierBonus[this.activeDungeon.tier] * this.activeDungeon.difficulty;\r\n        this.enemyBlock = _CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__[\"CreatureRegistry\"].GetDungeonCreatureByName(BOSSES[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, BOSSES.length)],\r\n            Math.floor(diff), Math.floor(diff * 10), 1);\r\n    }\r\n\r\n    update(delta) {\r\n        if (this.combatActive === false) {\r\n            return;\r\n        }\r\n\r\n        this.attackCooldown -= delta;\r\n        if (this.attackCooldown <= 0) {\r\n            this.attackCooldown += 1000;\r\n\r\n            this.enemyBlock.takeDamage(this.villagerBlock.Power());\r\n            if (this.enemyBlock.currentHealth <= 0) {\r\n                this._onEnemyDeath();\r\n                this.enemyCount -= 1;\r\n                if (this.enemyCount <= 0) {\r\n                    this._onRoomComplete();\r\n                    this._setupRoom();\r\n                } else {\r\n                    this._initMonster();\r\n                }\r\n            } else {\r\n                this.villagerBlock.takeDamage(this.enemyBlock.Power());\r\n                if (this.villagerBlock.currentHealth <= 0) {\r\n                    this._onPlayerDeath();\r\n                    this.combatActive = false;\r\n                }\r\n            }\r\n            this._onCreaturesChanged();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/DungeonManager.js?");

/***/ }),

/***/ "./src/data/DynamicSettings.js":
/*!*************************************!*\
  !*** ./src/data/DynamicSettings.js ***!
  \*************************************/
/*! exports provided: DynamicSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DynamicSettings\", function() { return DynamicSettings; });\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\n// this class exists purely to save the lore page for reloading\r\nclass DynamicSettings {\r\n    constructor() {\r\n        if (!DynamicSettings.instance) {\r\n            // min region required for gates\r\n            this.minGateRegion = 0;\r\n            this.regionSize = [11, 13];\r\n            this.regionDifficultyIncrease = 20;\r\n            this.maxGearTier = 8;\r\n            this.maxResourceTier = 8;\r\n            this.buildingsAllowed = true;\r\n            this.gearAllowed = true;\r\n            this.gearCostMulti = 1;\r\n            this.maxRunTime = -1;\r\n            this.exploreSpeed = 1;\r\n            this.talentsEnabled = true;\r\n            this.challengeName = \"\";\r\n            this.startingTraits = 0;\r\n            this.fixedTraits = [];\r\n            this.productionMulti = 1;\r\n            this.econMulti = 1;\r\n            this.productionBuildingCost = 0;\r\n            this.spendFriendship = false;\r\n            this.friendshipToProduction = false;\r\n            this.invasionTimer = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_INVASIONS;\r\n            this.expandTimer = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_EXPANSION;\r\n            this.invasionLevelBonus = 0;\r\n            this.minResourceTier = 0 + _StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().perks.worldsmith.level;\r\n\r\n            // game settings\r\n            this.openCombatOnExplore = true;\r\n            this.autoExploreWeakestFirst = true;\r\n            this.autoExploreRegions = true;\r\n            this.autoTownUpgradeDefault = false;\r\n            this.autoGearUpgrade = false;\r\n            this.autoExplore = false;\r\n            this.autoInvade = -1;\r\n            this.autoExploreOptions = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].AUTOEXPLORE_WEAKEST;\r\n\r\n            //programmatic settings\r\n            this.saveEnabled = true;\r\n\r\n            DynamicSettings.instance = this;\r\n        }\r\n\r\n        return DynamicSettings.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!DynamicSettings.instance) {\r\n            return new DynamicSettings();\r\n        }\r\n        return DynamicSettings.instance;\r\n    }\r\n\r\n    toggleAutoInvade() {\r\n        this.autoInvade += 1;\r\n        if (this.autoInvade > 3) {\r\n            this.autoInvade = -1;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.minGateRegion = 0;\r\n        this.regionSize = [11, 13];\r\n        this.regionDifficultyIncrease = 20;\r\n        this.maxGearTier = 8;\r\n        this.maxResourceTier = 8;\r\n        this.buildingsAllowed = true;\r\n        this.gearAllowed = true;\r\n        this.gearCostMulti = 1;\r\n        this.maxRunTime = -1;\r\n        this.exploreSpeed = 1;\r\n        this.talentsEnabled = true;\r\n        this.challengeName = \"\";\r\n        this.startingTraits = 0;\r\n        this.fixedTraits = [];\r\n        this.productionMulti = 1;\r\n        this.econMulti = 1;\r\n        this.productionBuildingCost = 0;\r\n        this.spendFriendship = false;\r\n        this.friendshipToProduction = false;\r\n        this.invasionTimer = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_INVASIONS;\r\n        this.expandTimer = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_EXPANSION;\r\n        this.invasionLevelBonus = 0;\r\n        this.minResourceTier = 0 + _StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().perks.worldsmith.level;\r\n\r\n        this.saveEnabled = true;\r\n    }\r\n\r\n    setupChallenge(challenge) {\r\n        this.reset();\r\n        this.challengeName = challenge.name;\r\n        switch (challenge.name) {\r\n            case \"A Matter of Years\":\r\n                this.minGateRegion = 1;\r\n                this.maxRunTime = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TIME_PER_YEAR * (5 - challenge.completions);\r\n                break;\r\n            case \"Forged Ahead\":\r\n                this.minGateRegion = 1;\r\n                this.gearCostMulti = 10 + (10 * challenge.completions);\r\n                break;\r\n            case \"Giant Lands\":\r\n                this.regionSize = [5, 7];\r\n                this.minGateRegion = challenge.completions;\r\n                this.exploreSpeed = 1 / 25;\r\n                this.fixedTraits = [{ type: _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TRAIT_MONSTROUS, level: 2 + challenge.completions * 2 }];\r\n                break;\r\n            case \"Invasion\":\r\n                this.minGateRegion = 0 + challenge.completions;\r\n                this.invasionTimer = 5 - 1 * challenge.completions;\r\n                this.expandTimer = 2 - 0.2 * challenge.completions;\r\n                this.invasionLevelBonus = 5 + 5 * challenge.completions;\r\n                break;\r\n            case \"Lazy Townsfolk\":\r\n                this.minGateRegion = 2 + challenge.completions;\r\n                this.buildingsAllowed = false;\r\n                break;\r\n            case \"Talentless\":\r\n                this.minGateRegion = 2 + challenge.completions;\r\n                this.talentsEnabled = false;\r\n                break;\r\n            case \"Mega Monsters\":\r\n                this.minGateRegion = 4 + challenge.completions;\r\n                this.startingTraits = 4 + challenge.completions * 2;\r\n                break;\r\n            case \"Outcast\":\r\n                this.productionMulti = 0.5 - (challenge.completions * 0.1);\r\n                this.spendFriendship = true;\r\n                this.friendshipToProduction = true;\r\n                this.regionDifficultyIncrease = 30 + (5 * challenge.completions);\r\n                this.minGateRegion = 3 + challenge.completions;\r\n                break;\r\n            case \"A Matter of Decades\":\r\n                this.minGateRegion = 9;\r\n                this.maxRunTime = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TIME_PER_YEAR * (10 - challenge.completions * 2);\r\n                this.regionDifficultyIncrease = 25;\r\n                break;\r\n            case \"Forged Ahead 2: Reforged\":\r\n                this.minGateRegion = 9;\r\n                this.gearCostMulti = 1000;\r\n                this.maxGearTier = 8 - challenge.completions;\r\n                this.regionDifficultyIncrease = 25;\r\n                break;\r\n            case \"Capitalism\":\r\n                this.minGateRegion = 9;\r\n                this.productionBuildingCost = 250 + (challenge.completions * 250);\r\n                this.regionDifficultyIncrease = 25;\r\n                this.econMulti = 0.5;\r\n                break;\r\n        }\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            mgr: this.minGateRegion,\r\n            rs: this.regionSize,\r\n            rdi: this.regionDifficultyIncrease,\r\n            mgt: this.maxGearTier,\r\n            mrt: this.maxResourceTier,\r\n            ba: this.buildingsAllowed,\r\n            ga: this.gearAllowed,\r\n            gcm: this.gearCostMulti,\r\n            mrun: this.maxRunTime,\r\n            es: this.exploreSpeed,\r\n            te: this.talentsEnabled,\r\n            cn: this.challengeName,\r\n            st: this.startingTraits,\r\n            ft: this.fixedTraits,\r\n            pm: this.productionMulti,\r\n            em: this.econMulti,\r\n            pbc: this.productionBuildingCost,\r\n            sf: this.spendFriendship,\r\n            ftp: this.friendshipToProduction,\r\n            it2: this.invasionTimer,\r\n            et: this.expandTimer,\r\n            ilb: this.invasionLevelBonus,\r\n            sce: this.openCombatOnExplore,\r\n            saeo: this.autoExploreOptions,\r\n            mnrt: this.minResourceTier,\r\n            aer: this.autoExploreRegions,\r\n            atu: this.autoTownUpgradeDefault,\r\n            agu: this.autoGearUpgrade,\r\n            ae: this.autoExplore,\r\n            ai2: this.autoInvade\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n    load(saveObj) {\r\n        this.minGateRegion = saveObj.mgr;\r\n        this.regionSize = saveObj.rs;\r\n        this.regionDifficultyIncrease = saveObj.rdi;\r\n        this.maxGearTier = saveObj.mgt;\r\n        this.maxResourceTier = saveObj.mrt;\r\n        this.buildingsAllowed = saveObj.ba;\r\n        this.gearAllowed = saveObj.ga;\r\n        this.gearCostMulti = saveObj.gcm;\r\n        this.maxRunTime = saveObj.mrun;\r\n        this.exploreSpeed = saveObj.es;\r\n        this.talentsEnabled = saveObj.te;\r\n        this.challengeName = saveObj.cn;\r\n        this.startingTraits = saveObj.st;\r\n        this.fixedTraits = saveObj.ft;\r\n        this.productionMulti = saveObj.pm !== undefined ? saveObj.pm : 1;\r\n        this.spendFriendship = saveObj.sf !== undefined ? saveObj.sf : false;\r\n        this.friendshipToProduction = saveObj.ftp !== undefined ? saveObj.ftp : false;\r\n        this.invasionTimer = saveObj.it2 !== undefined ? saveObj.it2 : _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_INVASIONS;\r\n        this.expandTimer = saveObj.et !== undefined ? saveObj.et : _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DAYS_BETWEEN_EXPANSION;\r\n        this.invasionLevelBonus = saveObj.ilb !== undefined ? saveObj.ilb : 0;\r\n        this.invasionsIncreaseDifficulty = saveObj.iid !== undefined ? saveObj.iid : false;\r\n        this.openCombatOnExplore = saveObj.sce !== undefined ? saveObj.sce : true;\r\n        this.autoExploreOptions = saveObj.saeo !== undefined ? saveObj.saeo : _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].AUTOEXPLORE_WEAKEST;\r\n        this.minResourceTier = saveObj.mnrt !== undefined ? saveObj.mnrt : 0;\r\n        this.productionBuildingCost = saveObj.pbc !== undefined ? saveObj.pbc : 0;\r\n        this.autoExploreRegions = saveObj.aer !== undefined ? saveObj.aer : true;\r\n        this.econMulti = saveObj.em !== undefined ? saveObj.em : 1;\r\n        this.autoTownUpgradeDefault = saveObj.atu !== undefined ? saveObj.atu : false;\r\n        this.autoGearUpgrade = saveObj.agu !== undefined ? saveObj.agu : false;\r\n        this.autoExplore = saveObj.ae !== undefined ? saveObj.ae : false;\r\n        this.autoInvade = saveObj.ai2 !== undefined ? saveObj.ai2 : false;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/DynamicSettings.js?");

/***/ }),

/***/ "./src/data/Gear.js":
/*!**************************!*\
  !*** ./src/data/Gear.js ***!
  \**************************/
/*! exports provided: Gear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gear\", function() { return Gear; });\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _RuneRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RuneRegistry */ \"./src/data/RuneRegistry.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\n\r\n\r\nclass Gear {\r\n    constructor(name, shortname, tier, slotType, stats, costs, costsLvl) {\r\n        this.tier = tier;\r\n        this.slotType = slotType;\r\n        this.name = name;\r\n        this.shortname = shortname;\r\n        this.statBonuses = stats;\r\n        this.statsPerLevel = { critChance: 0 };\r\n        this._totalBonuses = stats;\r\n        this.level = 0;\r\n        this.costs = costs;\r\n        this.costsPerLevel = costsLvl;\r\n        this.motesFused = 0;\r\n        this.runes = [];\r\n        this.compiledRunes = [];\r\n        this._runeBonuses = {};\r\n        this.rampingCostMulti = 1;\r\n\r\n        for (const prop in this.statBonuses) {\r\n            this.statBonuses[prop] = this.statBonuses[prop] * (1 + _StarData__WEBPACK_IMPORTED_MODULE_2__[\"StarData\"].getInstance().perks.stellar.level * 0.1);\r\n            if (prop !== 'critChance') {\r\n                this.statsPerLevel[prop] = this.statBonuses[prop] * (0.25 + _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.soulbound.level * 0.01);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < _Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].RUNESLOTS_PER_TIER[tier]; i++) {\r\n            this.runes.push({ word: \"Empty\", level: 0 });\r\n        }\r\n    }\r\n\r\n    bringToLevel(level) {\r\n        for (var i = this.level; i < level; i++) {\r\n            var tlvl = i - 1;\r\n            // first level does not add stats (ie level 0 to 1 counts as crafting the item)\r\n            if (tlvl >= 0) {\r\n                for (const prop in this.statBonuses) {\r\n                    this.statBonuses[prop] += this.statsPerLevel[prop] * Math.ceil((i + 1) / 5);\r\n                }\r\n            }\r\n            // to prevent cost increase from happening at level 1, every 25 levels item costs increase, with a major increase every 100\r\n            if (i > 10 && i % 25 === 0) {\r\n                this.rampingCostMulti = this.rampingCostMulti * _Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].SCALING_GEAR_MULTIPLIER;\r\n            }\r\n            if (i > 10 && i % 100 === 0) {\r\n                this.rampingCostMulti = this.rampingCostMulti * _Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].SCALING_GEAR_MULTIPLIER_2;\r\n            }\r\n            for (var t = 0; t < this.costs.length; t++) {\r\n                this.costs[t] += this.costsPerLevel[t] * (i + 1) * this.rampingCostMulti;\r\n            }\r\n        }\r\n        this.level = level;\r\n        this._calculateStats();\r\n    }\r\n\r\n    getMotePower() {\r\n        var softCap = _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().getMoteSoftCap();\r\n        return (Math.min(softCap, this.motesFused) +\r\n            Math.pow(Math.max(0, this.motesFused - softCap), _Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].MOTE_SOFT_CAP_POWER)) * _Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].MOTE_BONUS\r\n    }\r\n\r\n    _calculateStats() {\r\n        this._totalBonuses = {};\r\n        var motePower = 1 + this.getMotePower();\r\n        for (const prop in this.statBonuses) {\r\n            if (this.statBonuses[prop] !== 0) {\r\n                this._totalBonuses[prop] = this.statBonuses[prop] > 0 ? this.statBonuses[prop] * motePower : this.statBonuses[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    _calculateRuneBonuses() {\r\n        this.compiledRunes = _RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneWordsAndBonuses(this.runes);\r\n        this._runeBonuses = {};\r\n\r\n        for (var i = 0; i < this.compiledRunes.length; i++) {\r\n            for (const prop in this.compiledRunes[i].bonus) {\r\n                if (this._runeBonuses[prop] === undefined) {\r\n                    this._runeBonuses[prop] = 0;\r\n                }\r\n                this._runeBonuses[prop] += this.compiledRunes[i].bonus[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    fuseMotes(motes) {\r\n        this.motesFused += motes;\r\n        this._calculateStats();\r\n    }\r\n\r\n    destroyRune(slot) {\r\n        if (slot < 0 || slot >= this.runes.length) {\r\n            return;\r\n        }\r\n        this.runes[slot] = { word: \"Empty\", level: 0 };\r\n        this._calculateRuneBonuses();\r\n    }\r\n    addRune(rune, slot) {\r\n        if (slot < 0 || slot >= this.runes.length) {\r\n            return;\r\n        }\r\n        this.runes[slot] = rune;\r\n        this._calculateRuneBonuses();\r\n    }\r\n\r\n    getStatBonuses() { return this._totalBonuses; }\r\n    getRuneBonuses() { return this._runeBonuses; }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            lv: this.level,\r\n            mote: this.motesFused,\r\n            rn: this.runes\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, __ver) {\r\n        for (const prop in this.statBonuses) {\r\n            if (prop !== 'critChance') {\r\n                this.statsPerLevel[prop] = this.statBonuses[prop] * (0.25 + _MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.soulbound.level * 0.01);\r\n            }\r\n        }\r\n        this.motesFused = saveObj.mote;\r\n        this.runes = saveObj.rn === undefined ? [] : saveObj.rn;\r\n        this.bringToLevel(saveObj.lv);\r\n        this._calculateRuneBonuses();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/Gear.js?");

/***/ }),

/***/ "./src/data/GearData.js":
/*!******************************!*\
  !*** ./src/data/GearData.js ***!
  \******************************/
/*! exports provided: GearData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GearData\", function() { return GearData; });\n/* harmony import */ var _Gear__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Gear */ \"./src/data/Gear.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GearData {\r\n    constructor() {\r\n        if (!GearData.instance) {\r\n            this.gear = [];\r\n            this._initGear();\r\n            GearData.instance = this;\r\n        }\r\n\r\n        return GearData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!GearData.instance) {\r\n            return new GearData();\r\n        }\r\n        return GearData.instance;\r\n    }\r\n\r\n    save() {\r\n        var gearList = [];\r\n        for (var i = 0; i < this.gear.length; i++) {\r\n            gearList.push(this.gear[i].save());\r\n        }\r\n        var saveObj = {\r\n            gear: gearList,\r\n            ta: this.tiersAvailable,\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this._initGear();\r\n        for (var i = 0; i < saveObj.gear.length; i++) {\r\n            this.gear[i].load(saveObj.gear[i], ver);\r\n        }\r\n        this.tiersAvailable = saveObj.ta;\r\n    }\r\n\r\n    rebirth() {\r\n        this._initGear();\r\n    }\r\n\r\n    getGearByName(name) {\r\n        for (var i = 0; i < this.gear.length; i++) {\r\n            if (this.gear[i].name === name) {\r\n                return this.gear[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    getGearCost(gear) {\r\n        var craftCostMulti = gear.tier <= 0 ? 1 : _PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().getCraftingCosts(gear.tier - 1);\r\n        var res = [];\r\n        var resTier = Math.min(7, Math.max(_DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().minResourceTier,\r\n            _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().minResourceTier + gear.tier - 1));\r\n        for (var i = 0; i < gear.costs.length; i++) {\r\n            res.push(gear.costs[i] * craftCostMulti);\r\n        }\r\n        return [res, resTier];\r\n    }\r\n\r\n    upgradeGear(gear) {\r\n        var player = _PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance();\r\n        var cost = this.getGearCost(gear);\r\n        if (_utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].canCraft(cost[0], player.resources[cost[1]]) === false) {\r\n            return;\r\n        }\r\n        player.spendResource(cost[0], cost[1]);\r\n        if (player.isEquippedItem(gear)) {\r\n            player.unequip(gear.slotType);\r\n            gear.bringToLevel(gear.level + 1);\r\n            player.equip(gear);\r\n        } else {\r\n            if (gear.level === 0 && _StarData__WEBPACK_IMPORTED_MODULE_5__[\"StarData\"].getInstance().perks.starmetal.level > 0) {\r\n                gear.bringToLevel(gear.level + 1);\r\n                gear.bringToLevel(_StarData__WEBPACK_IMPORTED_MODULE_5__[\"StarData\"].getInstance().perks.starmetal.level * 5);\r\n            } else {\r\n                gear.bringToLevel(gear.level + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    fuseGear(gear, motes) {\r\n        var player = _PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance();\r\n        if (player.isEquippedItem(gear)) {\r\n            player.unequip(gear.slotType);\r\n            gear.fuseMotes(motes);\r\n            player.equip(gear);\r\n        } else {\r\n            gear.fuseMotes(motes);\r\n        }\r\n        player.addMote(-motes);\r\n    }\r\n\r\n    _initGear() {\r\n        this.gear = [];\r\n        this.tiersAvailable = 0;\r\n\r\n        // TIER 0\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 1, damageMax: 1, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 0, 0, 0, 0, 0];\r\n        var costlvl = [5, 0, 10, 0, 0, 0];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Broken Sword\", \"B. Sword\", 0, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 1\r\n        };\r\n        var cost = [0, 0, 0, 0, 0, 0];\r\n        var costlvl = [0, 10, 0, 5, 0, 0];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Old Leathers\", \"Old Lth\", 0, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 1, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 0, 0, 0, 0, 0];\r\n        var costlvl = [10, 0, 0, 0, 5, 0];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Barrel Lid\", \"Barrel Lid\", 0, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //initial gear should be available\r\n        this.gear[0].bringToLevel(1);\r\n        this.gear[1].bringToLevel(1);\r\n        this.gear[2].bringToLevel(1);\r\n\r\n        //////////////////////////////\r\n        // TIER 1\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 2, damageMax: 4, strength: 1,\r\n            dexterity: 1, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.05, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [10, 0, 25, 5, 0, 0];\r\n        var costlvl = [6, 0, 15, 4, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Iron Sword\", \"Iron Swd\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 1, damageMax: 5, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 6, critResistance: 0, critChance: 0.07, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [20, 0, 15, 5, 0, 0];\r\n        var costlvl = [13, 0, 9, 3, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Iron Axe\", \"Iron Axe\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 1, damageMax: 2.75, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 12, evasion: 4,\r\n            critPower: 0, critResistance: 0, critChance: 0.13, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [5, 0, 20, 10, 0, 5];\r\n        var costlvl = [3, 0, 14, 8, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dagger\", \"Dagger\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 3, damageMax: 5.25, strength: 1,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 1, accuracy: 0, hit: -10, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.04, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [10, 10, 0, 0, 0, 20];\r\n        var costlvl = [8, 8, 0, 0, 0, 14];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Crystal Hammer\", \"Crt Hammer\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 4, evasion: 12,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 1\r\n        };\r\n        var cost = [0, 10, 0, 30, 0, 0];\r\n        var costlvl = [0, 5, 0, 20, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Cloak\", \"Cloak\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 1,\r\n            defense: 0, accuracy: 1, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 2\r\n        };\r\n        var cost = [0, 30, 0, 10, 0, 0];\r\n        var costlvl = [0, 20, 0, 5, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Hide Armor\", \"Hide Armor\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 7, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: -8,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 3\r\n        };\r\n        var cost = [0, 10, 30, 0, 0, 0];\r\n        var costlvl = [0, 5, 20, 0, 0, 5];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Half Plate\", \"Half Plate\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 2, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 4, critChance: 0, healthRegen: 0, armor: 1\r\n        };\r\n        var cost = [30, 0, 10, 0, 0, 0];\r\n        var costlvl = [17, 0, 10, 0, 0, 8];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Wooden Shield\", \"Wood Shld\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 2.5, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0.5, armor: 0\r\n        };\r\n        var cost = [0, 0, 10, 0, 25, 5];\r\n        var costlvl = [0, 0, 7, 0, 20, 8];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Warm Stone\", \"Warm Stone\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 1, agility: 1, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 1, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.05, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 20, 0, 10, 0, 10];\r\n        var costlvl = [0, 15, 0, 7, 0, 13];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Wolf-Tooth Necklace\", \"W.T. Neck\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 2, hit: 15, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 1\r\n        };\r\n        var cost = [0, 15, 0, 20, 0, 5];\r\n        var costlvl = [0, 10, 0, 17, 0, 8];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Gloves\", \"Gloves\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T1 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 1, strength: 3,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 25, 0, 10, 5];\r\n            var costlvl = [0, 0, 20, 0, 7, 8];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm α\", \"STR Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 3, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 15, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 25, 0, 10, 0, 5];\r\n            var costlvl = [0, 20, 0, 7, 0, 8];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet α\", \"DEX Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 3, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 15,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 10, 0, 25, 0, 5];\r\n            var costlvl = [0, 7, 0, 20, 0, 8];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads α\", \"AGI Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 0) {\r\n            var stat = {\r\n                health: 7, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 3, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 3, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 10, 0, 25, 5];\r\n            var costlvl = [0, 0, 7, 0, 20, 8];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone α\", \"END Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 3,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0.5, armor: 0\r\n            };\r\n            var cost = [25, 0, 0, 5, 5, 5];\r\n            var costlvl = [20, 0, 0, 3, 3, 9];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer α\", \"REC Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 3, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 1\r\n            };\r\n            var cost = [0, 10, 0, 0, 5, 25];\r\n            var costlvl = [0, 7, 0, 0, 3, 25];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil α\", \"DEF Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 0) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 3, hit: 0, evasion: 0,\r\n                critPower: 6, critResistance: 0, critChance: 0.05, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [10, 0, 0, 10, 10, 10];\r\n            var costlvl = [8, 0, 0, 8, 8, 11];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant α\", \"ACC Trnk α\", 1, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n\r\n        //////////////////////////////\r\n        // TIER 2\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 8, damageMax: 15, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -20, evasion: 30,\r\n            critPower: 0, critResistance: 0, critChance: 0.15, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [25, 0, 25, 0, 0, 0];\r\n        var costlvl = [14, 0, 14, 0, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Great Spear\", \"Grt Spear\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 5, damageMax: 11, strength: 1.5,\r\n            dexterity: 2.5, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.13, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [15, 0, 25, 10, 0, 0];\r\n        var costlvl = [9, 0, 14, 5, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Steel Sword\", \"Stl Sword\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 3, damageMax: 8, strength: 0,\r\n            dexterity: 0, agility: 1, endurance: 0, recovery: 2,\r\n            defense: 0, accuracy: 1, hit: 30, evasion: 0,\r\n            critPower: 11, critResistance: 0, critChance: 0.17, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [5, 0, 20, 15, 0, 10];\r\n        var costlvl = [4, 0, 15, 9, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Hunting Dagger\", \"Hunt Dagger\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 15, evasion: 45,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 4\r\n        };\r\n        var cost = [0, 15, 0, 35, 0, 0];\r\n        var costlvl = [0, 9, 0, 19, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Thief Garb\", \"Thief Garb\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 4,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 6\r\n        };\r\n        var cost = [0, 35, 0, 15, 0, 0];\r\n        var costlvl = [0, 19, 0, 9, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Hunting Leathers\", \"Hunt Lth\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 15, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: -20,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 8\r\n        };\r\n        var cost = [0, 0, 35, 15, 0, 0];\r\n        var costlvl = [0, 0, 19, 9, 0, 7];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Full Plate\", \"Full Plate\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 2, recovery: 0,\r\n            defense: 3, accuracy: 3, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.05, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 10, 0, 0, 30, 10];\r\n        var costlvl = [0, 8, 0, 0, 22, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Lucky Rock\", \"L. Rock\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 5, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 20,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 1.75\r\n        };\r\n        var cost = [0, 30, 0, 15, 0, 5];\r\n        var costlvl = [0, 19, 0, 11, 0, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Boots of Speed\", \"Boots Spd\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 2,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 7, accuracy: 0, hit: -20, evasion: 0,\r\n            critPower: 0, critResistance: 7, critChance: 0, healthRegen: 0, armor: 2\r\n        };\r\n        var cost = [0, 15, 0, 10, 25, 0];\r\n        var costlvl = [0, 8, 0, 6, 16, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Heavy Bracers\", \"Heavy Brcr\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 2.5,\r\n            dexterity: 2.5, agility: 2.5, endurance: 2.5, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 10, 25, 0, 0, 15];\r\n        var costlvl = [0, 8, 17, 0, 0, 15];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Adventurer's Medallion\", \"Adv. Med.\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T2 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 1.75, strength: 6,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 30, 0, 10, 10];\r\n            var costlvl = [0, 0, 20, 0, 7, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm ß\", \"STR Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 6, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 30, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 30, 0, 10, 0, 10];\r\n            var costlvl = [0, 20, 0, 7, 0, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet ß\", \"DEX Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 6, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 30,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 10, 0, 30, 0, 10];\r\n            var costlvl = [0, 7, 0, 20, 0, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads ß\", \"AGI Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 1) {\r\n            var stat = {\r\n                health: 15, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 6, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 6, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 10, 0, 30, 10];\r\n            var costlvl = [0, 0, 7, 0, 20, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone ß\", \"END Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 6,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0.9, armor: 0\r\n            };\r\n            var cost = [30, 0, 0, 7, 8, 10];\r\n            var costlvl = [20, 0, 0, 3, 3, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer ß\", \"REC Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 6, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 2\r\n            };\r\n            var cost = [0, 15, 0, 0, 5, 30];\r\n            var costlvl = [0, 7, 0, 0, 3, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil ß\", \"DEF Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 1) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 6, hit: 0, evasion: 0,\r\n                critPower: 10, critResistance: 0, critChance: 0.06, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [15, 0, 0, 15, 10, 10];\r\n            var costlvl = [10, 0, 0, 10, 8, 12];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant ß\", \"ACC Trnk ß\", 2, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 3\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 16, damageMax: 35, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -42, evasion: 55,\r\n            critPower: 22, critResistance: 0, critChance: 0.18, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 10, 35, 0, 20, 0];\r\n        var costlvl = [0, 7, 17, 0, 11, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Thunder Spear\", \"Thnd Spr\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 16, damageMax: 27, strength: 0,\r\n            dexterity: 4, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 30, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.15, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [15, 0, 40, 0, 0, 10];\r\n        var costlvl = [8, 0, 22, 0, 0, 15];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Ardent Blade\", \"Ardent Bld\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 12, damageMax: 17, strength: 7.5,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 70, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.22, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 25, 25, 15, 0, 0];\r\n        var costlvl = [0, 15, 15, 5, 0, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dire Claw\", \"Dire Claw\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 3, damageMax: 4.25, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 70,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 11\r\n        };\r\n        var cost = [0, 20, 0, 45, 0, 0];\r\n        var costlvl = [0, 10, 0, 25, 0, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Assassin Cloak\", \"Ass. Cloak\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 2.5, recovery: 5,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 15\r\n        };\r\n        var cost = [0, 45, 0, 20, 0, 0];\r\n        var costlvl = [0, 25, 0, 10, 0, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Beastmaster Vest\", \"Bst Vest\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 36, damageMin: 0, damageMax: 0, strength: 4,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -15, evasion: -55,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 20\r\n        };\r\n        var cost = [0, 20, 45, 0, 0, 0];\r\n        var costlvl = [0, 10, 25, 0, 0, 10];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Lizardscale Armor\", \"Lzrd Armor\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 9, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 6, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.08, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 40, 0, 15, 0, 10];\r\n        var costlvl = [0, 27, 0, 10, 0, 13];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Wolf Gloves\", \"Wolf Glvs\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 18, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 105, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0.6, armor: 0\r\n        };\r\n        var cost = [0, 0, 0, 0, 35, 30];\r\n        var costlvl = [0, 0, 0, 0, 24, 26];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Hyperstone\", \"Hyperstone\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 3.5, recovery: 0,\r\n            defense: 7.5, accuracy: 0, hit: 0, evasion: -37,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 3.5\r\n        };\r\n        var cost = [15, 10, 40, 0, 0, 0];\r\n        var costlvl = [9, 6, 22, 0, 0, 13];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Tower Shield\", \"Twr Shld\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 10,\r\n            dexterity: 0, agility: 0, endurance: 5, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -33, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 2\r\n        };\r\n        var cost = [0, 35, 0, 20, 10, 0];\r\n        var costlvl = [0, 18, 0, 13, 6, 13];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Ogre Belt\", \"Ogre Belt\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T3 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 3.75, strength: 11,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 40, 0, 15, 10];\r\n            var costlvl = [0, 0, 27, 0, 10, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm σ\", \"STR Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 11, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 70, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 40, 0, 15, 0, 10];\r\n            var costlvl = [0, 27, 0, 10, 0, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet σ\", \"DEX Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 11, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 70,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 15, 0, 40, 0, 10];\r\n            var costlvl = [0, 10, 0, 27, 0, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads σ\", \"AGI Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 2) {\r\n            var stat = {\r\n                health: 36, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 11, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 13, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 15, 0, 40, 10];\r\n            var costlvl = [0, 0, 10, 0, 27, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone σ\", \"END Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 11,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 1.4, armor: 0\r\n            };\r\n            var cost = [40, 0, 0, 10, 10, 10];\r\n            var costlvl = [27, 0, 0, 3, 3, 13];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer σ\", \"REC Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 11, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 3.5\r\n            };\r\n            var cost = [0, 17, 0, 0, 8, 40];\r\n            var costlvl = [0, 10, 0, 0, 5, 35];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil σ\", \"DEF Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 2) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 11, hit: 0, evasion: 0,\r\n                critPower: 22, critResistance: 0, critChance: 0.1, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [20, 0, 0, 15, 15, 15];\r\n            var costlvl = [15, 0, 0, 10, 10, 15];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant σ\", \"ACC Trnk σ\", 3, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 4\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 22, damageMax: 57, strength: 9,\r\n            dexterity: 0, agility: 0, endurance: 4, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -80, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.20, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [40, 10, 35, 0, 0, 0];\r\n        var costlvl = [22, 5, 19, 0, 0, 14];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Giant's Axe\", \"G Axe\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 26, damageMax: 44, strength: 0,\r\n            dexterity: 0, agility: 6.5, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 62, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.19, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [25, 0, 45, 15, 0, 0];\r\n        var costlvl = [14, 0, 24, 8, 0, 14];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Elven Longsword\", \"Elv Swd\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 19, damageMax: 32, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 7, hit: 144, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.24, healthRegen: 1.5, armor: 0\r\n        };\r\n        var cost = [0, 0, 45, 30, 0, 10];\r\n        var costlvl = [0, 0, 24, 19, 0, 17];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Sacrificial Dagger\", \"Sac Dagger\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 6.5, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 6.5, accuracy: 0, hit: 0, evasion: 148,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 19\r\n        };\r\n        var cost = [0, 15, 0, 60, 0, 10];\r\n        var costlvl = [0, 12, 0, 32, 0, 16];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Spellweave Robe\", \"Spl Robe\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 8,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 5, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 28\r\n        };\r\n        var cost = [0, 65, 0, 20, 0, 0];\r\n        var costlvl = [0, 36, 0, 10, 0, 14];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dire Bear Cloak\", \"D Cloak\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 68, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 13, accuracy: 0, hit: -65, evasion: -157,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 35\r\n        };\r\n        var cost = [0, 0, 0, 15, 50, 20];\r\n        var costlvl = [0, 0, 0, 11, 26, 23];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Ancient Armor\", \"Anc Armor\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: -24, damageMin: 0, damageMax: 0, strength: 16,\r\n            dexterity: 16, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 42, critResistance: 0, critChance: 0, healthRegen: -1.1, armor: 0\r\n        };\r\n        var cost = [30, 15, 0, 0, 40, 0];\r\n        var costlvl = [14, 9, 0, 0, 22, 20];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Demonic Sigil\", \"Dmn Sigil\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 11, accuracy: 7, hit: 0, evasion: -60,\r\n            critPower: 0, critResistance: 27, critChance: 0, healthRegen: 0, armor: 6\r\n        };\r\n        var cost = [10, 0, 50, 0, 0, 25];\r\n        var costlvl = [7, 0, 31, 0, 0, 27];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Mirror Shield\", \"Mr Shld\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 7.5, damageMax: 10.5, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 1.25, armor: 0\r\n        };\r\n        var cost = [0, 45, 0, 0, 30, 10];\r\n        var costlvl = [0, 24, 0, 0, 19, 22];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dragonbone Charm\", \"Dgn Charm\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 8, agility: 8, endurance: 5, recovery: 0,\r\n            defense: 0, accuracy: 5, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.08, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [25, 0, 15, 0, 45, 0];\r\n        var costlvl = [13, 0, 9, 0, 23, 20];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Spirit Ring\", \"Sprt Ring\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T4 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 7, strength: 19,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 50, 0, 20, 15];\r\n            var costlvl = [0, 0, 35, 0, 12, 18];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm Σ\", \"STR Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 19, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 125, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 50, 0, 20, 0, 15];\r\n            var costlvl = [0, 35, 0, 12, 0, 18];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet Σ\", \"DEX Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 19, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 125,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 20, 0, 50, 0, 15];\r\n            var costlvl = [0, 12, 0, 35, 0, 18];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads Σ\", \"AGI Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 3) {\r\n            var stat = {\r\n                health: 68, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 19, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 25, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 20, 0, 50, 15];\r\n            var costlvl = [0, 0, 12, 0, 35, 18];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone Σ\", \"END Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 19,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 2.1, armor: 0\r\n            };\r\n            var cost = [50, 0, 0, 10, 10, 15];\r\n            var costlvl = [35, 0, 0, 6, 6, 18];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer Σ\", \"REC Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 19, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 6\r\n            };\r\n            var cost = [0, 20, 0, 0, 15, 50];\r\n            var costlvl = [0, 12, 0, 0, 8, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil Σ\", \"DEF Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 3) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 19, hit: 0, evasion: 0,\r\n                critPower: 42, critResistance: 0, critChance: 0.12, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [25, 0, 0, 20, 20, 20];\r\n            var costlvl = [15, 0, 0, 15, 15, 20];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant Σ\", \"ACC Trnk Σ\", 4, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 5\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 54, damageMax: 96, strength: 10,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 10, accuracy: 0, hit: -122, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.17, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [40, 0, 60, 0, 0, 10];\r\n        var costlvl = [24, 0, 35, 0, 0, 21];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Quake Hammer\", \"Q Hammer\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 49, damageMax: 73, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 12,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 75, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [30, 30, 50, 0, 0, 0];\r\n        var costlvl = [17, 17, 30, 0, 0, 16];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dawnblade\", \"D Blade\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 36, damageMax: 54, strength: 5,\r\n            dexterity: 0, agility: 5, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 200, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.30, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 30, 35, 45, 0, 0];\r\n        var costlvl = [0, 17, 20, 27, 0, 16];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dragon Tooth\", \"Dgn Tooth\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 10, accuracy: 0, hit: 0, evasion: 190,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 1.7, armor: 30\r\n        };\r\n        var cost = [0, 40, 0, 70, 0, 0];\r\n        var costlvl = [0, 24, 0, 40, 0, 16];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Fire Rat Tunic\", \"F Tunic\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 6, damageMax: 9, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 45, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 39\r\n        };\r\n        var cost = [0, 70, 0, 40, 0, 0];\r\n        var costlvl = [0, 40, 0, 24, 0, 16];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Savage Leather\", \"Svg Lth\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 100, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: -173,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 52\r\n        };\r\n        var cost = [0, 0, 70, 0, 20, 20];\r\n        var costlvl = [0, 0, 40, 0, 12, 28];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Enchanted Plate\", \"En Plate\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 5,\r\n            dexterity: 5, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 5, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 75, critResistance: 0, critChance: 0.17, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [20, 0, 0, 0, 40, 50];\r\n        var costlvl = [11, 0, 0, 0, 24, 50];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Power Shard\", \"Pow Shard\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: -7,\r\n            defense: 18, accuracy: 0, hit: 50, evasion: 130,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 11\r\n        };\r\n        var cost = [0, 45, 0, 45, 0, 20];\r\n        var costlvl = [0, 27, 0, 27, 0, 31];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Cloak of Displacement\", \"Cloak Dsp\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 20,\r\n            dexterity: -5, agility: -5, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 20, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.14, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [15, 0, 0, 20, 75, 0];\r\n        var costlvl = [9, 0, 0, 11, 44, 21];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Pendant of Sin\", \"Pdn Sin\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 18, endurance: 0, recovery: 20,\r\n            defense: 0, accuracy: 0, hit: -30, evasion: 117,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [40, 40, 0, 30, 0, 0];\r\n        var costlvl = [24, 24, 0, 16, 0, 21];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Windwalk Cape\", \"Wnd Cape\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T5 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 12, strength: 30,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 65, 0, 25, 20];\r\n            var costlvl = [0, 0, 45, 0, 17, 23];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm Φ\", \"STR Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 30, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 200, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 65, 0, 25, 0, 20];\r\n            var costlvl = [0, 45, 0, 17, 0, 23];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet Φ\", \"DEX Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 30, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 200,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 25, 0, 65, 0, 20];\r\n            var costlvl = [0, 17, 0, 45, 0, 23];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads Φ\", \"AGI Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 4) {\r\n            var stat = {\r\n                health: 100, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 30, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 40, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 25, 0, 65, 20];\r\n            var costlvl = [0, 0, 17, 0, 45, 23];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone Φ\", \"END Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 30,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 3.25, armor: 0\r\n            };\r\n            var cost = [65, 0, 0, 12, 13, 20];\r\n            var costlvl = [45, 0, 0, 8, 9, 23];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer Φ\", \"REC Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 30, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 11\r\n            };\r\n            var cost = [0, 25, 0, 0, 20, 65];\r\n            var costlvl = [0, 17, 0, 0, 13, 55];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil Φ\", \"DEF Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 4) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 30, hit: 0, evasion: 0,\r\n                critPower: 75, critResistance: 0, critChance: 0.16, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [30, 0, 0, 30, 25, 25];\r\n            var costlvl = [23, 0, 0, 22, 20, 20];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant Φ\", \"ACC Trnk Φ\", 5, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 6\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 92, damageMax: 140, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -195, evasion: 0,\r\n            critPower: 120, critResistance: 0, critChance: 0.35, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [60, 0, 50, 0, 30, 0];\r\n        var costlvl = [36, 0, 31, 0, 19, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Spear of Desolation\", \"Spr Des\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 77, damageMax: 119, strength: 0,\r\n            dexterity: 0, agility: 11, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 11, hit: 111, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [45, 0, 65, 30, 0, 0];\r\n        var costlvl = [27, 0, 40, 19, 0, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Arcane Sword\", \"Arc Swd\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 66, damageMax: 93, strength: 12,\r\n            dexterity: 6, agility: 6, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 335, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.4, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [60, 0, 60, 0, 20, 0];\r\n        var costlvl = [37, 0, 37, 0, 12, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Orichalcum Dagger\", \"Orh Dagger\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 170, evasion: 340,\r\n            critPower: 0, critResistance: 0, critChance: 0.14, healthRegen: 0, armor: 49\r\n        };\r\n        var cost = [0, 50, 0, 90, 0, 0];\r\n        var costlvl = [0, 31, 0, 55, 0, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Vestigial Clothes\", \"Vst Clothes\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 18,\r\n            dexterity: -4, agility: -4, endurance: 15, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 65\r\n        };\r\n        var cost = [0, 100, 0, 40, 0, 0];\r\n        var costlvl = [0, 61, 0, 25, 0, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Storm Giant Tunic\", \"St. Tunic\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 120, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 26, accuracy: 0, hit: -164, evasion: -472,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 82\r\n        };\r\n        var cost = [30, 0, 80, 0, 30, 0];\r\n        var costlvl = [19, 0, 48, 0, 19, 19];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Immovable Plate\", \"Im Plate\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: -70, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 14,\r\n            defense: 8, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 8.5, armor: 0\r\n        };\r\n        var cost = [0, 50, 0, 0, 50, 40];\r\n        var costlvl = [0, 31, 0, 0, 31, 48];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Slime Core\", \"Slime Core\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 11, agility: 11, endurance: 0, recovery: 0,\r\n            defense: 11, accuracy: 0, hit: 0, evasion: -142,\r\n            critPower: 0, critResistance: 45, critChance: 0, healthRegen: 0, armor: 20\r\n        };\r\n        var cost = [25, 0, 0, 0, 55, 60];\r\n        var costlvl = [15, 0, 0, 0, 34, 61];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Phase Shield\", \"Phs Shld\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 27, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: -10, hit: 0, evasion: 350,\r\n            critPower: 0, critResistance: 0, critChance: 0.12, healthRegen: 0, armor: 9\r\n        };\r\n        var cost = [0, 40, 0, 70, 0, 30];\r\n        var costlvl = [0, 24, 0, 43, 0, 43];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Hermes Boots\", \"Hrm Boots\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 12, damageMax: 19, strength: 22,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 10, hit: -186, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 60, 30, 50, 0, 0];\r\n        var costlvl = [0, 36, 20, 30, 0, 24];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Gloves of Power\", \"Glvs Pow\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T6 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 17, strength: 42,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 80, 0, 35, 25];\r\n            var costlvl = [0, 0, 60, 0, 25, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm Θ\", \"STR Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 42, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 350, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 80, 0, 35, 0, 25];\r\n            var costlvl = [0, 60, 0, 25, 0, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet Θ\", \"DEX Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 42, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 350,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 35, 0, 80, 0, 25];\r\n            var costlvl = [0, 25, 0, 60, 0, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads Θ\", \"AGI Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 5) {\r\n            var stat = {\r\n                health: 175, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 42, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 60, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 35, 0, 80, 25];\r\n            var costlvl = [0, 0, 25, 0, 60, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone Θ\", \"END Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 42,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 4.75, armor: 0\r\n            };\r\n            var cost = [80, 0, 0, 17, 18, 25];\r\n            var costlvl = [60, 0, 0, 12, 13, 30];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer Θ\", \"REC Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 42, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 17\r\n            };\r\n            var cost = [0, 35, 0, 0, 25, 80];\r\n            var costlvl = [0, 25, 0, 0, 15, 75];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil Θ\", \"DEF Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 5) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 42, hit: 0, evasion: 0,\r\n                critPower: 120, critResistance: 0, critChance: 0.2, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [35, 0, 0, 35, 35, 35];\r\n            var costlvl = [27, 0, 0, 27, 27, 27];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant Θ\", \"ACC Trnk Θ\", 6, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 7\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 138, damageMax: 215, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 15, recovery: 0,\r\n            defense: 20, accuracy: 0, hit: -245, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [30, 45, 100, 0, 0, 0];\r\n        var costlvl = [19, 29, 64, 0, 0, 23];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dark One's Mace\", \"D. Mace\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 122, damageMax: 170, strength: 12,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 180, critResistance: 0, critChance: 0.40, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [35, 0, 70, 0, 0, 70];\r\n        var costlvl = [22, 0, 45, 0, 0, 68];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Vorpal Blade\", \"Vrpl Bld\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 112, damageMax: 145, strength: 10,\r\n            dexterity: 10, agility: 10, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 460, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.45, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [15, 0, 120, 40, 0, 0];\r\n        var costlvl = [10, 0, 77, 25, 0, 23];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Adamantine Claws\", \"Adm Claws\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 14, accuracy: 0, hit: 120, evasion: 450,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 75\r\n        };\r\n        var cost = [0, 65, 0, 110, 0, 0];\r\n        var costlvl = [0, 42, 0, 70, 0, 23];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shaed\", \"Shaed\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 27,\r\n            defense: 0, accuracy: 8, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 98\r\n        };\r\n        var cost = [0, 110, 0, 15, 0, 50];\r\n        var costlvl = [0, 70, 0, 10, 0, 55];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Crystaline Scales\", \"Crst Scl\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 220, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -70, evasion: -370,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 4, armor: 120\r\n        };\r\n        var cost = [0, 0, 70, 0, 60, 45];\r\n        var costlvl = [0, 0, 45, 0, 38, 52];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Runic Armor\", \"Rune Arm\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 14,\r\n            dexterity: 14, agility: 14, endurance: 14, recovery: 0,\r\n            defense: 14, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: -0.15, healthRegen: 3, armor: 14\r\n        };\r\n        var cost = [0, 0, 0, 40, 95, 40];\r\n        var costlvl = [0, 0, 0, 26, 61, 53];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Soul Gem\", \"Soul Gem\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 30, accuracy: 30, hit: 0, evasion: -270,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 24\r\n        };\r\n        var cost = [130, 20, 0, 0, 25, 0];\r\n        var costlvl = [83, 13, 0, 0, 16, 28];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Lidless Eye\", \"Lid Eye\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 17, damageMax: 24, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 170, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [70, 0, 0, 45, 0, 60];\r\n        var costlvl = [45, 0, 0, 29, 0, 66];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Circlet of Power\", \"Crlt Pow\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: -185, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 30, agility: 30, endurance: 0, recovery: 30,\r\n            defense: -15, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.15, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [0, 70, 0, 70, 35, 0];\r\n        var costlvl = [0, 45, 0, 45, 22, 28];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Demonic Wraps\", \"Dmn Wraps\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T7 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 24, strength: 53,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 95, 0, 45, 35];\r\n            var costlvl = [0, 0, 70, 0, 30, 40];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm Ω\", \"STR Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 53, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 470, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 95, 0, 45, 0, 35];\r\n            var costlvl = [0, 70, 0, 30, 0, 40];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet Ω\", \"DEX Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 53, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 470,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 45, 0, 95, 0, 35];\r\n            var costlvl = [0, 30, 0, 70, 0, 40];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads Ω\", \"AGI Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 6) {\r\n            var stat = {\r\n                health: 240, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 53, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 80, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 45, 0, 95, 35];\r\n            var costlvl = [0, 0, 30, 0, 70, 40];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone Ω\", \"END Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 53,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 6.25, armor: 0\r\n            };\r\n            var cost = [95, 0, 0, 22, 23, 35];\r\n            var costlvl = [70, 0, 0, 15, 15, 40];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer Ω\", \"REC Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 53, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 24\r\n            };\r\n            var cost = [0, 45, 0, 0, 35, 95];\r\n            var costlvl = [0, 30, 0, 0, 25, 85];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil Ω\", \"DEF Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 6) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 53, hit: 0, evasion: 0,\r\n                critPower: 170, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [45, 0, 0, 45, 45, 40];\r\n            var costlvl = [35, 0, 0, 35, 35, 35];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant Ω\", \"ACC Trnk Ω\", 7, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        //////////////////////////////\r\n        // TIER 8\r\n        //////////////////////////////\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 166, damageMax: 333, strength: 40,\r\n            dexterity: 0, agility: -9, endurance: 15, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -430, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.37, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [90, 0, 100, 25, 0, 0];\r\n        var costlvl = [59, 0, 67, 17, 0, 27];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Ragnarok\", \"Ragnarok\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 182, damageMax: 265, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0.5, healthRegen: 7, armor: 0\r\n        };\r\n        var cost = [0, 45, 90, 0, 80, 0];\r\n        var costlvl = [0, 30, 60, 0, 53, 27];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"9 Lives Stealer\", \"9 Swd\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 152, damageMax: 201, strength: 16,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 590, evasion: 0,\r\n            critPower: 210, critResistance: 0, critChance: 0.65, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [55, 0, 70, 90, 0, 0];\r\n        var costlvl = [37, 0, 47, 59, 0, 27];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Chthonic Dagger\", \"Chth Dagger\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_WEAPON, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 100, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 780,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 115\r\n        };\r\n        var cost = [0, 45, 0, 140, 0, 30];\r\n        var costlvl = [0, 30, 0, 93, 0, 47];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Angelic Garments\", \"Agl Garm\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 12, recovery: 34,\r\n            defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 145\r\n        };\r\n        var cost = [0, 140, 0, 75, 0, 0];\r\n        var costlvl = [0, 93, 0, 50, 0, 27];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Terrasque Leather\", \"Trq Lth\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 325, damageMin: 0, damageMax: 0, strength: 12,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: -150, evasion: -620,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 180\r\n        };\r\n        var cost = [0, 0, 150, 0, 40, 25];\r\n        var costlvl = [0, 0, 100, 0, 27, 43];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"God Plate\", \"God Plate\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_ARMOR, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 230, damageMin: 0, damageMax: 0, strength: -15,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 42, accuracy: 0, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 200, critChance: -0.12, healthRegen: 0, armor: 31\r\n        };\r\n        var cost = [0, 0, 50, 0, 100, 65];\r\n        var costlvl = [0, 0, 33, 0, 67, 75];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Sigil of Protection\", \"Sgl Prot\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 19, damageMax: 32, strength: 50,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: -20, accuracy: 0, hit: 240, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: -16\r\n        };\r\n        var cost = [75, 90, 0, 0, 0, 50];\r\n        var costlvl = [50, 60, 0, 0, 0, 65];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Aura of Bloodlust\", \"Aura Bld\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: -210, damageMin: 0, damageMax: 0, strength: 0,\r\n            dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n            defense: 0, accuracy: 0, hit: 580, evasion: 580,\r\n            critPower: 220, critResistance: 0, critChance: 0.25, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [60, 0, 0, 140, 0, 15];\r\n        var costlvl = [40, 0, 0, 93, 0, 42];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Winds of Battle\", \"Wnd Btl\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        var stat = {\r\n            health: 0, damageMin: 0, damageMax: 0, strength: 13,\r\n            dexterity: 13, agility: 13, endurance: 13, recovery: 13,\r\n            defense: 13, accuracy: 13, hit: 0, evasion: 0,\r\n            critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n        };\r\n        var cost = [60, 60, 60, 0, 0, 35];\r\n        var costlvl = [40, 40, 40, 0, 0, 55];\r\n        this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Inner Fire\", \"In Fire\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n\r\n        //// T8 MOON GEAR ////\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.strtrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 31, strength: 68,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 120, 0, 55, 40];\r\n            var costlvl = [0, 0, 95, 0, 35, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Wolf Charm ☼\", \"STR Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.dextrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 68, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 620, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 120, 0, 55, 0, 40];\r\n            var costlvl = [0, 95, 0, 35, 0, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonlight Circlet ☼\", \"DEX Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.agitrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 68, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 620,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 55, 0, 120, 0, 40];\r\n            var costlvl = [0, 35, 0, 95, 0, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moon Treads ☼\", \"AGI Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.endtrinket.level > 7) {\r\n            var stat = {\r\n                health: 325, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 68, recovery: 0,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 110, critChance: 0, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [0, 0, 55, 0, 120, 40];\r\n            var costlvl = [0, 0, 35, 0, 95, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Moonstone ☼\", \"END Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.rectrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 68,\r\n                defense: 0, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 8.5, armor: 0\r\n            };\r\n            var cost = [120, 0, 0, 27, 28, 40];\r\n            var costlvl = [95, 0, 0, 17, 17, 45];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Dreamlight Bracer ☼\", \"REC Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.deftrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 68, accuracy: 0, hit: 0, evasion: 0,\r\n                critPower: 0, critResistance: 0, critChance: 0, healthRegen: 0, armor: 31\r\n            };\r\n            var cost = [0, 55, 0, 0, 40, 120];\r\n            var costlvl = [0, 35, 0, 0, 30, 110];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Shadow Veil ☼\", \"DEF Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().moonperks.acctrinket.level > 7) {\r\n            var stat = {\r\n                health: 0, damageMin: 0, damageMax: 0, strength: 0,\r\n                dexterity: 0, agility: 0, endurance: 0, recovery: 0,\r\n                defense: 0, accuracy: 68, hit: 0, evasion: 0,\r\n                critPower: 230, critResistance: 0, critChance: 0.3, healthRegen: 0, armor: 0\r\n            };\r\n            var cost = [55, 0, 0, 55, 55, 50];\r\n            var costlvl = [36, 0, 0, 36, 36, 36];\r\n            this.gear.push(new _Gear__WEBPACK_IMPORTED_MODULE_0__[\"Gear\"](\"Nightmare Pendant ☼\", \"ACC Trnk ☼\", 8, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GEAR_TRINKET, stat, cost, costlvl));\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/GearData.js?");

/***/ }),

/***/ "./src/data/LoreStore.js":
/*!*******************************!*\
  !*** ./src/data/LoreStore.js ***!
  \*******************************/
/*! exports provided: LoreStore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LoreStore\", function() { return LoreStore; });\n// this class exists purely to save the lore page for reloading\r\nclass LoreStore {\r\n    constructor() {\r\n        if (!LoreStore.instance) {\r\n            this.lore = [];\r\n            LoreStore.instance = this;\r\n        }\r\n\r\n        return LoreStore.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!LoreStore.instance) {\r\n            return new LoreStore();\r\n        }\r\n        return LoreStore.instance;\r\n    }\r\n\r\n    rebirth() {\r\n        this.lore = [];\r\n    }\r\n\r\n    addLore(text) {\r\n        this.lore.push(text);\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            lore: this.lore\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n    load(saveObj, ver) {\r\n        this.lore = saveObj.lore;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/LoreStore.js?");

/***/ }),

/***/ "./src/data/MoonlightData.js":
/*!***********************************!*\
  !*** ./src/data/MoonlightData.js ***!
  \***********************************/
/*! exports provided: MoonlightData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoonlightData\", function() { return MoonlightData; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\nclass MoonlightData {\r\n    constructor() {\r\n        if (!MoonlightData.instance) {\r\n            this.moonlight = 0;\r\n            this.challengePoints = 0;\r\n\r\n            this.moonperks = {\r\n                str: {\r\n                    name: \"Moon's Strength\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 0 }\r\n                },\r\n                dex: {\r\n                    name: \"Moon's Dexterity\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 1 }\r\n                },\r\n                agi: {\r\n                    name: \"Moon's Agility\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 2 }\r\n                },\r\n                end: {\r\n                    name: \"Moon's Endurance\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 3 }\r\n                },\r\n                rec: {\r\n                    name: \"Moon's Recovery\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 4 }\r\n                },\r\n                def: {\r\n                    name: \"Moon's Defense\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 5 }\r\n                },\r\n                acc: {\r\n                    name: \"Moon's Accuracy\", level: 0, maxLevel: -1, requires: [], cost: [7, 4, 1.05],\r\n                    texture: { sprite: \"moonicons\", tile: 6 }\r\n                },\r\n                vault: {\r\n                    name: \"Hero's Vault\", level: 0, maxLevel: -1, requires: [], cost: [60, 45, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 9 }\r\n                },\r\n                nightmarket: {\r\n                    name: \"Night Market\", level: 0, maxLevel: -1, requires: [], cost: [50, 45, 1.35],\r\n                    texture: { sprite: \"moonicons\", tile: 22 }\r\n                },\r\n                hardenedvillagers: {\r\n                    name: \"Hardened Villagers\", level: 0, maxLevel: -1, requires: [], cost: [50, 50, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 11 }\r\n                },\r\n                shadow: {\r\n                    name: \"Shadow's Blessing\", level: 0, maxLevel: -1, requires: [], cost: [10, 15, 1.2],\r\n                    texture: { sprite: \"moonicons\", tile: 12 }\r\n                },\r\n                runes: {\r\n                    name: \"Moon Runes\", level: 0, maxLevel: 1, requires: [], cost: [1000, 0, 0],\r\n                    texture: { sprite: \"moonicons\", tile: 8 }\r\n                },\r\n                farstrider: {\r\n                    name: \"Farstrider\", level: 0, maxLevel: -1, requires: [], cost: [35, 35, 1.25],\r\n                    texture: { sprite: \"moonicons\", tile: 15 }\r\n                },\r\n                heartofdarkness: {\r\n                    name: \"Heart of Darkness\", level: 0, maxLevel: -1, requires: [], cost: [100, 150, 1.35],\r\n                    texture: { sprite: \"moonicons\", tile: 10 }\r\n                },\r\n                blackirongear: {\r\n                    name: \"Blackiron Gear\", level: 0, maxLevel: -1, requires: [\"heartofdarkness\"], cost: [75, 100, 1.4],\r\n                    texture: { sprite: \"moonicons\", tile: 10 }\r\n                },\r\n                runelands: {\r\n                    name: \"Runelands\", level: 0, maxLevel: -1, requires: [\"runes\"], cost: [300, 150, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 8 }\r\n                },\r\n                moonlightworkers: {\r\n                    name: \"Moonlight Workers\", level: 0, maxLevel: -1, requires: [\"hardenedvillagers\"], cost: [150, 150, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 19 }\r\n                },\r\n                heropouch: {\r\n                    name: \"Hero's Pouch\", level: 0, maxLevel: -1, requires: [\"vault\"], cost: [70, 50, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 9 }\r\n                },\r\n                moonwine: {\r\n                    name: \"Moonwine\", level: 0, maxLevel: 2, requires: [\"nightmarket\"], cost: [500, 500, 5],\r\n                    texture: { sprite: \"moonicons\", tile: 14 }\r\n                },\r\n                metal: {\r\n                    name: \"Shadow's Metal\", level: 0, maxLevel: -1, requires: [\"str\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 26 }\r\n                },\r\n                leather: {\r\n                    name: \"Shadow's Leather\", level: 0, maxLevel: -1, requires: [\"dex\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 25 }\r\n                },\r\n                fiber: {\r\n                    name: \"Shadow's Fiber\", level: 0, maxLevel: -1, requires: [\"agi\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 27 }\r\n                },\r\n                stone: {\r\n                    name: \"Shadow's Stone\", level: 0, maxLevel: -1, requires: [\"end\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 28 }\r\n                },\r\n                wood: {\r\n                    name: \"Shadow's Wood\", level: 0, maxLevel: -1, requires: [\"rec\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 24 }\r\n                },\r\n                crystal: {\r\n                    name: \"Shadow's Crystal\", level: 0, maxLevel: -1, requires: [\"def\"], cost: [25, 15, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 29 }\r\n                },\r\n                gold: {\r\n                    name: \"Shadow's Gold\", level: 0, maxLevel: -1, requires: [\"acc\"], cost: [120, 75, 1.125],\r\n                    texture: { sprite: \"moonicons\", tile: 30 }\r\n                },\r\n                motivatedlabor: {\r\n                    name: \"Motivated Labor\", level: 0, maxLevel: -1, requires: [\"moonlightworkers\"], cost: [100, 75, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 17 }\r\n                },\r\n                shadow2: {\r\n                    name: \"Shadow's Chosen\", level: 0, maxLevel: -1, requires: [\"shadow\"], cost: [75, 75, 1.25],\r\n                    texture: { sprite: \"moonicons\", tile: 20 }\r\n                },\r\n                runes3: {\r\n                    name: \"Corrupted Runes\", level: 0, maxLevel: -1, requires: [\"runelands\"], cost: [400, 200, 1.35],\r\n                    texture: { sprite: \"moonicons\", tile: 8 }\r\n                },\r\n                soulbound: {\r\n                    name: \"Soulbound\", level: 0, maxLevel: -1, requires: [\"blackirongear\"], cost: [400, 400, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 21 }\r\n                },\r\n                discovery: {\r\n                    name: \"Discovery\", level: 0, maxLevel: -1, requires: [\"farstrider\"], cost: [100, 75, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 16 }\r\n                },\r\n                crownlands: {\r\n                    name: \"Crown Lands\", level: 0, maxLevel: -1, requires: [\"discovery\"], cost: [60, 45, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 18 }\r\n                },\r\n                construction: {\r\n                    name: \"Inspired Construction\", level: 0, maxLevel: -1, requires: [\"moonwine\"], cost: [75, 100, 1.4],\r\n                    texture: { sprite: \"moonicons\", tile: 36 }\r\n                },\r\n                shadow3: {\r\n                    name: \"Shadow's Harvest\", level: 0, maxLevel: -1, requires: [\"shadow2\"], cost: [150, 100, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 31 }\r\n                },\r\n                strtrinket: {\r\n                    name: \"Shadow Wolf Charm\", level: 0, maxLevel: 8, requires: [\"metal\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                dextrinket: {\r\n                    name: \"Moonlight Circlet\", level: 0, maxLevel: 8, requires: [\"leather\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                agitrinket: {\r\n                    name: \"Moon Treads\", level: 0, maxLevel: 8, requires: [\"fiber\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                endtrinket: {\r\n                    name: \"Moonstone\", level: 0, maxLevel: 8, requires: [\"stone\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                rectrinket: {\r\n                    name: \"Dreamlight Bracer\", level: 0, maxLevel: 8, requires: [\"wood\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                deftrinket: {\r\n                    name: \"Shadow Veil\", level: 0, maxLevel: 8, requires: [\"crystal\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                acctrinket: {\r\n                    name: \"Nightmare Pendant\", level: 0, maxLevel: 8, requires: [\"gold\"], cost: [100, 100, 2],\r\n                    texture: { sprite: \"moonicons\", tile: 32 }\r\n                },\r\n                nightlabour: {\r\n                    name: \"Night Labour\", level: 0, maxLevel: -1, requires: [\"heropouch\"], cost: [150, 100, 1.5],\r\n                    texture: { sprite: \"moonicons\", tile: 9 }\r\n                },\r\n                devotion: {\r\n                    name: \"Devotion\", level: 0, maxLevel: -1, requires: [], cost: [150, 75, 1.25],\r\n                    texture: { sprite: \"moonicons\", tile: 34 }\r\n                },\r\n                ninja: {\r\n                    name: \"Ninjas\", level: 0, maxLevel: -1, requires: [\"devotion\"], cost: [750, 500, 1.3],\r\n                    texture: { sprite: \"moonicons\", tile: 35 }\r\n                },\r\n                urbanization: {\r\n                    name: \"Urbanization\", level: 0, maxLevel: -1, requires: [\"ninja\"], cost: [10000, 7500, 4],\r\n                    texture: { sprite: \"moonicons\", tile: 33 }\r\n                }\r\n            };\r\n\r\n            this.challenges = {\r\n                time: { name: \"A Matter of Years\", completions: 0, maxCompletions: 5, unlocked: true, fastestTime: 0 },\r\n                forge: { name: \"Forged Ahead\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                explore: { name: \"Giant Lands\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                invasion: { name: \"Invasion\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                buildings: { name: \"Lazy Townsfolk\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                talent: { name: \"Talentless\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                megamonsters: { name: \"Mega Monsters\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                outcast: { name: \"Outcast\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                time2: { name: \"A Matter of Decades\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                forge2: { name: \"Forged Ahead 2: Reforged\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n                capitalism: { name: \"Capitalism\", completions: 0, maxCompletions: 5, unlocked: false, fastestTime: 0 },\r\n            };\r\n\r\n            MoonlightData.instance = this;\r\n        }\r\n\r\n        return MoonlightData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!MoonlightData.instance) {\r\n            return new MoonlightData();\r\n        }\r\n        return MoonlightData.instance;\r\n    }\r\n\r\n    static getMoonlightEarned(statLvl, region) {\r\n        return Math.floor(statLvl * Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MOONLIGHT_REGION_POWER, region));\r\n    }\r\n\r\n    getChallengeFromName(name) {\r\n        switch (name) {\r\n            case \"A Matter of Years\":\r\n                return this.challenges.time;\r\n            case \"Forged Ahead\":\r\n                return this.challenges.forge;\r\n            case \"Giant Lands\":\r\n                return this.challenges.explore;\r\n            case \"Invasion\":\r\n                return this.challenges.invasion;\r\n            case \"Lazy Townsfolk\":\r\n                return this.challenges.buildings;\r\n            case \"Talentless\":\r\n                return this.challenges.talent;\r\n            case \"Mega Monsters\":\r\n                return this.challenges.megamonsters;\r\n            case \"Outcast\":\r\n                return this.challenges.outcast;\r\n            case \"A Matter of Decades\":\r\n                return this.challenges.time2;\r\n            case \"Forged Ahead 2: Reforged\":\r\n                return this.challenges.forge2;\r\n            case \"Capitalism\":\r\n                return this.challenges.capitalism;\r\n        }\r\n    }\r\n\r\n    getShadowBonus() { return 1 + this.moonperks.shadow.level * 0.1; }\r\n    getMoteSoftCap() { return _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MOTE_BASE_SOFT_CAP + this.moonperks.blackirongear.level * 40; }\r\n\r\n    _haveMoonlightRequirements(perk) {\r\n        for (var i = 0; i < perk.requires.length; i++) {\r\n            if (this.moonperks[perk.requires[i]].level === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    levelUpPerk(perk) {\r\n        if (perk.level >= perk.maxLevel && perk.maxLevel !== -1) {\r\n            return;\r\n        }\r\n        var cost = Math.floor((perk.cost[0] + perk.cost[1] * (perk.level)) * Math.pow(perk.cost[2], perk.level));\r\n        if (this.moonlight <= cost || this._haveMoonlightRequirements(perk) === false) {\r\n            return;\r\n        }\r\n        this.moonlight -= cost;\r\n        perk.level += 1;\r\n    }\r\n\r\n    save() {\r\n        var perks = [];\r\n        for (const prop in this.moonperks) {\r\n            perks.push([prop, this.moonperks[prop].level]);\r\n        }\r\n        var challenge = [];\r\n        for (const prop in this.challenges) {\r\n            challenge.push([prop, this.challenges[prop].completions, this.challenges[prop].unlocked, this.challenges[prop].fastestTime]);\r\n        }\r\n        var saveObj = {\r\n            ml: this.moonlight,\r\n            mp: perks,\r\n            cp: this.challengePoints,\r\n            c: challenge\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this.moonlight = saveObj.ml;\r\n        for (var i = 0; i < saveObj.mp.length; i++) {\r\n            if (this.moonperks[saveObj.mp[i][0]] !== undefined) {\r\n                this.moonperks[saveObj.mp[i][0]].level = saveObj.mp[i][1];\r\n            }\r\n        }\r\n        this.challengePoints = saveObj.cp;\r\n        for (var i = 0; i < saveObj.c.length; i++) {\r\n            this.challenges[saveObj.c[i][0]].completions = saveObj.c[i][1];\r\n            this.challenges[saveObj.c[i][0]].unlocked = saveObj.c[i][2];\r\n            this.challenges[saveObj.c[i][0]].fastestTime = saveObj.c[i][3];\r\n        }\r\n        if (this.challenges.time.completions > 0) {\r\n            this.challenges.invasion.unlocked = true;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/MoonlightData.js?");

/***/ }),

/***/ "./src/data/PlayerData.js":
/*!********************************!*\
  !*** ./src/data/PlayerData.js ***!
  \********************************/
/*! exports provided: PlayerData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayerData\", function() { return PlayerData; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _AdventurerBlock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AdventurerBlock */ \"./src/data/AdventurerBlock.js\");\n/* harmony import */ var _WizardBlock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WizardBlock */ \"./src/data/WizardBlock.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _GearData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GearData */ \"./src/data/GearData.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _TooltipRegistry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _Blueprint__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Blueprint */ \"./src/data/Blueprint.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass PlayerData {\r\n    constructor() {\r\n        if (!PlayerData.instance) {\r\n            this.statChangedHandlers = [];\r\n            this.resourceChangedHandlers = [];\r\n            this.talentChangedHandlers = [];\r\n            this.classSelectedHandlers = [];\r\n\r\n            this.baseVillagerPower = 1;\r\n            this.baseVillagerHealth = 10;\r\n            this.blueprints = [];\r\n            this.baseStats = {\r\n                strength: 5,\r\n                dexterity: 5,\r\n                agility: 5,\r\n                endurance: 5,\r\n                recovery: 5,\r\n                defense: 5,\r\n                accuracy: 5\r\n            }\r\n            for (var i = 0; i < 5; i++) {\r\n                this.blueprints.push(new _Blueprint__WEBPACK_IMPORTED_MODULE_9__[\"Blueprint\"]());\r\n            }\r\n\r\n            this._init();\r\n            this.statBlock = new _AdventurerBlock__WEBPACK_IMPORTED_MODULE_1__[\"AdventurerBlock\"](this);\r\n\r\n            PlayerData.instance = this;\r\n        }\r\n\r\n        return PlayerData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!PlayerData.instance) {\r\n            return new PlayerData();\r\n        }\r\n        return PlayerData.instance;\r\n    }\r\n    _setClassStatics() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                _TooltipRegistry__WEBPACK_IMPORTED_MODULE_8__[\"TooltipRegistry\"].setDefaultNames();\r\n                this.classStatics = {\r\n                    STRENGTH_DMG_MIN: 0.4,\r\n                    STRENGTH_DMG_MAX: 1,\r\n                    HIT_PER_DEXTERITY: 7,\r\n                    EVA_PER_AGILITY: 7,\r\n                    HP_PER_ENDURANCE: 5,\r\n                    REGEN_PER_RECOVERY: 0.15,\r\n                    ARMOR_PER_DEFENSE: 0.2,\r\n                    SCALING_DIMINISHING_MULTIPLIER: 0.01,\r\n                    CRITPOWER_PER_ACCURACY: 3,\r\n                    CRITRESISTANCE_PER_ENDURANCE: 3,\r\n                    AGI_EXPLORE_POWER: 0.44,\r\n                    AGI_EXPLORE_MULTI: 0.03,\r\n                    SCALING_DIMINISHING_POWER: 0.6\r\n                }\r\n                this.talents = {\r\n                    str: { name: \"Strength\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 0 } },\r\n                    dex: { name: \"Dexterity\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 1 } },\r\n                    agi: { name: \"Agility\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 2 } },\r\n                    end: { name: \"Endurance\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 3 } },\r\n                    rec: { name: \"Recovery\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 4 } },\r\n                    def: { name: \"Defense\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 5 } },\r\n                    acc: { name: \"Accuracy\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 6 } },\r\n                    cleave: { name: \"Cleave\", level: 0, maxLevel: 5, requires: [\"str\"], texture: { sprite: \"icons\", tile: 8 } },\r\n                    hit: { name: \"Hit\", level: 0, maxLevel: -1, requires: [\"dex\"], texture: { sprite: \"icons\", tile: 9 } },\r\n                    evasion: { name: \"Evasion\", level: 0, maxLevel: -1, requires: [\"agi\"], texture: { sprite: \"icons\", tile: 10 } },\r\n                    resilient: { name: \"Resilient\", level: 0, maxLevel: -1, requires: [\"end\"], texture: { sprite: \"icons\", tile: 11 } },\r\n                    quickrecovery: { name: \"Quick Recovery\", level: 0, maxLevel: -1, requires: [\"rec\"], texture: { sprite: \"icons\", tile: 12 } },\r\n                    block: { name: \"Block\", level: 0, maxLevel: -1, requires: [\"def\"], texture: { sprite: \"icons\", tile: 13 } },\r\n                    crit: { name: \"Critical\", level: 0, maxLevel: -1, requires: [\"acc\"], texture: { sprite: \"icons\", tile: 14 } },\r\n                    stun: { name: \"Stunning Hit\", level: 0, maxLevel: 5, requires: [\"cleave\"], texture: { sprite: \"icons\", tile: 16 } },\r\n                    followthrough: { name: \"Follow Through\", level: 0, maxLevel: 5, requires: [\"hit\"], texture: { sprite: \"icons\", tile: 17 } },\r\n                    dodge: { name: \"Dodge\", level: 0, maxLevel: 5, requires: [\"evasion\"], texture: { sprite: \"icons\", tile: 18 } },\r\n                    magicresist: { name: \"Magic Resistance\", level: 0, maxLevel: -1, requires: [\"resilient\"], texture: { sprite: \"icons\", tile: 19 } },\r\n                    secondwind: { name: \"Second Wind\", level: 0, maxLevel: 5, requires: [\"quickrecovery\"], texture: { sprite: \"icons\", tile: 20 } },\r\n                    parry: { name: \"Parry\", level: 0, maxLevel: 5, requires: [\"block\"], texture: { sprite: \"icons\", tile: 21 } },\r\n                    serration: { name: \"Serration\", level: 0, maxLevel: -1, requires: [\"crit\"], texture: { sprite: \"icons\", tile: 22 } },\r\n                    bounty: { name: \"Bounty\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 7 } },\r\n                    explorer: { name: \"Explorer\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 15 } },\r\n                    guardian: { name: \"Guardian\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 39 } },\r\n                    governance: { name: \"Governance\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 38 } },\r\n                    lootgoblin: { name: \"Loot Goblin\", level: 0, maxLevel: 10, requires: [\"bounty\"], texture: { sprite: \"icons\", tile: 51 } },\r\n                    bundle: { name: \"Bundle\", level: 0, maxLevel: -1, requires: [\"explorer\"], texture: { sprite: \"icons\", tile: 52 } },\r\n                    charisma: { name: \"Charisma\", level: 0, maxLevel: -1, requires: [\"governance\"], texture: { sprite: \"icons\", tile: 53 } },\r\n                    townguard: { name: \"Town Guard\", level: 0, maxLevel: -1, requires: [\"guardian\"], texture: { sprite: \"icons\", tile: 50 } }\r\n                }\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                this.classStatics = {\r\n                    STRENGTH_DMG_MIN: 0.4,\r\n                    STRENGTH_DMG_MAX: 1,\r\n                    HIT_PER_DEXTERITY: 7,\r\n                    EVA_PER_AGILITY: 7,\r\n                    HP_PER_ENDURANCE: 5,\r\n                    REGEN_PER_RECOVERY: 0.15,\r\n                    ARMOR_PER_DEFENSE: 0.2,\r\n                    SCALING_DIMINISHING_MULTIPLIER: 0.01,\r\n                    CRITPOWER_PER_ACCURACY: 3,\r\n                    CRITRESISTANCE_PER_ENDURANCE: 3,\r\n                    AGI_EXPLORE_POWER: 0.44,\r\n                    AGI_EXPLORE_MULTI: 0.03,\r\n                    SCALING_DIMINISHING_POWER: 0.6\r\n                }\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                _TooltipRegistry__WEBPACK_IMPORTED_MODULE_8__[\"TooltipRegistry\"].setWizardNames();\r\n                this.classStatics = {\r\n                    STRENGTH_DMG_MIN: 0.2,\r\n                    STRENGTH_DMG_MAX: 0.5,\r\n                    HIT_PER_DEXTERITY: 7,\r\n                    EVA_PER_AGILITY: 5,\r\n                    HP_PER_ENDURANCE: 3,\r\n                    REGEN_PER_RECOVERY: 0.15,\r\n                    ARMOR_PER_WARD: 0.06,\r\n                    SHIELD_PER_WARD: 3,\r\n                    GEAR_ARMOR_TO_SHIELD: 2,\r\n                    GEAR_DAMAGE_TO_MAGIC: 0.5,\r\n                    SPELL_POWER_PER_POWER: 1,\r\n                    CRITRESISTANCE_PER_ENDURANCE: 3,\r\n                    AGI_EXPLORE_POWER: 0.44,\r\n                    AGI_EXPLORE_MULTI: 0.03,\r\n                    SCALING_DIMINISHING_MULTIPLIER: 0.01,\r\n                    SCALING_DIMINISHING_POWER: 0.5\r\n                }\r\n                this.talents = {\r\n                    cantrip: { name: \"Cantrip\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"talenticons\", tile: 0 } },\r\n                    first: { name: \"First Level Spell\", level: 0, maxLevel: 1, requires: [\"cantrip\"], texture: { sprite: \"talenticons\", tile: 1 } },\r\n                    second: { name: \"Second Level Spell\", level: 0, maxLevel: 2, requires: [\"first\"], texture: { sprite: \"talenticons\", tile: 2 } },\r\n                    third: { name: \"Third Level Spell\", level: 0, maxLevel: 3, requires: [\"second\"], texture: { sprite: \"talenticons\", tile: 3 } },\r\n                    fourth: { name: \"Fourth Level Spell\", level: 0, maxLevel: 4, requires: [\"third\"], texture: { sprite: \"talenticons\", tile: 4 } },\r\n                    fifth: { name: \"Fifth Level Spell\", level: 0, maxLevel: 5, requires: [\"fourth\"], texture: { sprite: \"talenticons\", tile: 5 } },\r\n                    entangle: { name: \"Entagle\", level: 0, maxLevel: -1, requires: [\"first\"], texture: { sprite: \"talenticons\", tile: 9 } },\r\n                    thorns: { name: \"Thorns\", level: 0, maxLevel: -1, requires: [\"entangle\"], texture: { sprite: \"talenticons\", tile: 17 } },\r\n                    barrier: { name: \"Barrier\", level: 0, maxLevel: -1, requires: [\"second\"], texture: { sprite: \"talenticons\", tile: 10 } },\r\n                    shell: { name: \"Shell\", level: 0, maxLevel: -1, requires: [\"barrier\"], texture: { sprite: \"talenticons\", tile: 18 } },\r\n                    fireball: { name: \"Fireball\", level: 0, maxLevel: -1, requires: [\"third\"], texture: { sprite: \"talenticons\", tile: 11 } },\r\n                    ignite: { name: \"Ignite\", level: 0, maxLevel: -1, requires: [\"fireball\"], texture: { sprite: \"talenticons\", tile: 19 } },\r\n                    haste: { name: \"Haste\", level: 0, maxLevel: 10, requires: [\"fourth\"], texture: { sprite: \"talenticons\", tile: 12 } },\r\n                    quicken: { name: \"Quicken\", level: 0, maxLevel: -1, requires: [\"haste\"], texture: { sprite: \"talenticons\", tile: 20 } },\r\n                    powerwordkill: { name: \"Power Word Kill\", level: 0, maxLevel: -1, requires: [\"fifth\"], texture: { sprite: \"talenticons\", tile: 13 } },\r\n                    powerwordstun: { name: \"Power Word Stun\", level: 0, maxLevel: 5, requires: [\"powerwordkill\"], texture: { sprite: \"talenticons\", tile: 21 } },\r\n                    wizstr: { name: \"Elective Studies: Strength\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"icons\", tile: 0 } },\r\n                    wizdex: { name: \"Elective Studies: Dexterity\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"icons\", tile: 1 } },\r\n                    wizagi: { name: \"Elective Studies: Agility\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"icons\", tile: 2 } },\r\n                    wizend: { name: \"Elective Studies: Endurance\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"icons\", tile: 3 } },\r\n                    alchemy: { name: \"Alchemy\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"talenticons\", tile: 8 } },\r\n                    runemancy: { name: \"Runemancy\", level: 0, maxLevel: -1, requires: [\"cantrip\"], texture: { sprite: \"talenticons\", tile: 16 } },\r\n                    magicarmor: { name: \"Magic Armor\", level: 0, maxLevel: -1, requires: [\"runemancy\"], texture: { sprite: \"talenticons\", tile: 25 } },\r\n                    magicweapon: { name: \"Magic Weapon\", level: 0, maxLevel: -1, requires: [\"runemancy\"], texture: { sprite: \"talenticons\", tile: 24 } },\r\n                    codex: { name: \"Chromatic Codex\", level: 0, maxLevel: -1, requires: [\"fifth\"], texture: { sprite: \"talenticons\", tile: 26 } },\r\n                    bounty: { name: \"Bounty\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 7 } },\r\n                    explorer: { name: \"Explorer\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 15 } },\r\n                    guardian: { name: \"Guardian\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 39 } },\r\n                    governance: { name: \"Governance\", level: 0, maxLevel: -1, requires: [], texture: { sprite: \"icons\", tile: 38 } },\r\n                    lootgoblin: { name: \"Loot Goblin\", level: 0, maxLevel: 10, requires: [\"bounty\"], texture: { sprite: \"icons\", tile: 51 } },\r\n                    bundle: { name: \"Bundle\", level: 0, maxLevel: -1, requires: [\"explorer\"], texture: { sprite: \"icons\", tile: 52 } },\r\n                    charisma: { name: \"Charisma\", level: 0, maxLevel: -1, requires: [\"governance\"], texture: { sprite: \"icons\", tile: 53 } },\r\n                    townguard: { name: \"Town Guard\", level: 0, maxLevel: -1, requires: [\"guardian\"], texture: { sprite: \"icons\", tile: 50 } }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    _init() {\r\n        this.shade = 0;\r\n        this.statPoints = 3;\r\n        this.talentPoints = _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.talent.completions;\r\n        this.statLevel = 1;\r\n        this.talentLevel = 1;\r\n        this.resources = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]];\r\n        this.craftingCosts = [1, 1, 1, 1, 1, 1, 1, 1];\r\n        this.dimCraftingCosts = [1, 1, 1, 1, 1, 1, 1, 1];\r\n        for (var i = 0; i < this.craftingCosts.length; i++) {\r\n            this.craftingCosts[i] = this.craftingCosts[i] * _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().gearCostMulti;\r\n            this.craftingCosts[i] = this.craftingCosts[i] * Math.pow(0.925,\r\n                _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.forge.completions);\r\n        }\r\n        this.starperkCostReduction = Math.pow(0.95, _StarData__WEBPACK_IMPORTED_MODULE_10__[\"StarData\"].getInstance().perks.forge.level);\r\n        this.starperkCostReduction *= Math.pow(0.95, _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.forge2.completions);\r\n        this.resourceTierReached = _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().minResourceTier;\r\n        this.gold = 0;\r\n        this.motes = 0;\r\n        this.challengeExploreMulti = 1 + (_MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.explore.completions * 0.25);\r\n        this.playerClass = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER;\r\n        this._setClassStatics();\r\n        this.classChosen = false;\r\n\r\n        this.weapon = undefined;\r\n        this.armor = undefined;\r\n        this.trinket = undefined;\r\n\r\n        this.runeBonuses = {\r\n            strPercent: 0,\r\n            strFlat: 0,\r\n            strTalents: 0,\r\n            dexPercent: 0,\r\n            dexFlat: 0,\r\n            dexTalents: 0,\r\n            agiPercent: 0,\r\n            agiFlat: 0,\r\n            agiTalents: 0,\r\n            endPercent: 0,\r\n            endFlat: 0,\r\n            endTalents: 0,\r\n            recPercent: 0,\r\n            recFlat: 0,\r\n            recTalents: 0,\r\n            defPercent: 0,\r\n            defFlat: 0,\r\n            defTalents: 0,\r\n            accPercent: 0,\r\n            accFlat: 0,\r\n            accTalents: 0,\r\n            hitPercent: 0,\r\n            evaPercent: 0,\r\n            regenPercent: 0,\r\n            weaponPercent: 0,\r\n            armorPercent: 0,\r\n            critPercent: 0,\r\n            healthPercent: 0,\r\n            weaponScaling: 0,\r\n            armorScaling: 0,\r\n            baseAttackSpeed: 0,\r\n            OOCRegen: 0,\r\n            enemyCrit: 0,\r\n            exploreSpeed: 0,\r\n            friendshipMulti: 0,\r\n            critChance: 0,\r\n            critPower: 0,\r\n            lootFlat: 0,\r\n            lootTalent: 0,\r\n            moteChance: 0,\r\n            shadeFlat: 0,\r\n            regenOnKill: 0,\r\n            dexToStr: 0,\r\n            endToRec: 0,\r\n            agiToDef: 0,\r\n            allPercent: 0,\r\n            guardianTalent: 0,\r\n            governanceTalent: 0,\r\n            agilityScaling: 0,\r\n            charismaTalent: 0,\r\n            chromaTalent: 0,\r\n            defToShield: 0,\r\n            goldFlat: 0,\r\n            goldMulti: 0,\r\n            resourceMulti: 0,\r\n            shadeMulti: 0,\r\n            gearScaling: 0,\r\n            baseTalents: 0\r\n        }\r\n\r\n        this.dungeonBonus = {\r\n            strength: 1,\r\n            dexterity: 1,\r\n            agility: 1,\r\n            endurance: 1,\r\n            recovery: 1,\r\n            defense: 1,\r\n            accuracy: 1,\r\n            wood: 1,\r\n            leather: 1,\r\n            metal: 1,\r\n            fiber: 1,\r\n            stone: 1,\r\n            crystal: 1,\r\n            moonlight: 1\r\n        }\r\n\r\n        this.runes = [];\r\n    }\r\n\r\n    selectClass(selectedClass) {\r\n        this.playerClass = selectedClass;\r\n        this.classChosen = true;\r\n        this._setClassStatics(selectedClass);\r\n\r\n        var newBlock;\r\n        switch (selectedClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                newBlock = new _AdventurerBlock__WEBPACK_IMPORTED_MODULE_1__[\"AdventurerBlock\"](this);\r\n                newBlock.convert(this.statBlock);\r\n                if (this.weapon !== undefined) {\r\n                    newBlock.equip(this.weapon);\r\n                }\r\n                if (this.armor !== undefined) {\r\n                    newBlock.equip(this.armor);\r\n                }\r\n                if (this.trinket !== undefined) {\r\n                    newBlock.equip(this.trinket);\r\n                }\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                newBlock = new _WizardBlock__WEBPACK_IMPORTED_MODULE_2__[\"WizardBlock\"](this);\r\n                newBlock.convert(this.statBlock);\r\n                if (this.weapon !== undefined) {\r\n                    newBlock.equip(this.weapon);\r\n                }\r\n                if (this.armor !== undefined) {\r\n                    newBlock.equip(this.armor);\r\n                }\r\n                if (this.trinket !== undefined) {\r\n                    newBlock.equip(this.trinket);\r\n                }\r\n                break;\r\n        }\r\n        this.statBlock = newBlock;\r\n        this._onClassSelected();\r\n    }\r\n\r\n    reduceCraftingCosts(tier, amount) {\r\n        for (var i = 0; i < Math.min(tier, 8); i++) {\r\n            if (this.craftingCosts[i] <= 0.1 && _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.forge2.completions > 0) {\r\n                this.dimCraftingCosts[i] = this.dimCraftingCosts[i] * amount;\r\n            } else {\r\n                this.craftingCosts[i] = Math.max(0.1, this.craftingCosts[i] * amount);\r\n            }\r\n        }\r\n    }\r\n    getCraftingCosts(tier) {\r\n        if (tier < 0 || tier >= 8) {\r\n            return 1;\r\n        }\r\n        return this.craftingCosts[tier] * this.starperkCostReduction *\r\n            Math.pow(this.dimCraftingCosts[tier], _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].FORGE_DIMINISHING_POWER);\r\n    }\r\n    getCraftingCosts(tier) {\r\n        if (tier < 0 || tier >= 8) {\r\n            return 1;\r\n        }\r\n        return this.craftingCosts[tier] * this.starperkCostReduction;\r\n    }\r\n\r\n    rebirth() {\r\n        this._init();\r\n        var block = new _AdventurerBlock__WEBPACK_IMPORTED_MODULE_1__[\"AdventurerBlock\"](this);\r\n        block.rebirth();\r\n        block.copyHandlers(this.statBlock);\r\n        this.statBlock = block;\r\n    }\r\n\r\n    applyRitualBonuses() {\r\n        var statHelper = (ritual) => { return (ritual.level * (12 + 12 + (ritual.level - 1) * 4)) / 2; };\r\n        // permanent stats\r\n        const rituals = _RitualData__WEBPACK_IMPORTED_MODULE_11__[\"RitualData\"].getInstance().rituals;\r\n        this.baseStats.strength += statHelper(rituals.permstr);\r\n        this.baseStats.dexterity += statHelper(rituals.permdex);\r\n        this.baseStats.agility += statHelper(rituals.permagi);\r\n        this.baseStats.endurance += statHelper(rituals.permend);\r\n        this.baseStats.recovery += statHelper(rituals.permrec);\r\n        this.baseStats.defense += statHelper(rituals.permdef);\r\n        this.baseStats.accuracy += statHelper(rituals.permacc);\r\n\r\n        this.baseVillagerPower += statHelper(rituals.permvp) / 2;\r\n        this.baseVillagerHealth += statHelper(rituals.permvh) * 5;\r\n    }\r\n\r\n    increaseStat(stat, val) {\r\n        var statChange = Math.min(this.statPoints, val);\r\n        if (statChange == 0) {\r\n            return;\r\n        }\r\n        this.statPoints -= statChange;\r\n        switch (stat) {\r\n            case 'str':\r\n                this.statBlock.stats.strength += statChange;\r\n                break;\r\n            case 'dex':\r\n                this.statBlock.stats.dexterity += statChange;\r\n                break;\r\n            case 'agi':\r\n                this.statBlock.stats.agility += statChange;\r\n                break;\r\n            case 'end':\r\n                this.statBlock.stats.endurance += statChange;\r\n                break;\r\n            case 'rec':\r\n                this.statBlock.stats.recovery += statChange;\r\n                break;\r\n            case 'def':\r\n                this.statBlock.stats.defense += statChange;\r\n                break;\r\n            case 'acc':\r\n                this.statBlock.stats.accuracy += statChange;\r\n                break;\r\n        }\r\n        this._onStatChanged();\r\n    }\r\n\r\n    strTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Strength determines how hard you hit. Each point increases your min Damage by \" +\r\n                    (Math.floor(this.classStatics.STRENGTH_DMG_MIN * ((1 + this.getTalentLevel(\"str\") * 0.07) * 100)) / 100) +\r\n                    \", max Damage by \" +\r\n                    (Math.floor(this.classStatics.STRENGTH_DMG_MAX * ((1 + this.getTalentLevel(\"str\") * 0.07) * 100)) / 100) +\r\n                    \". Your Strength increases damage from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Strength()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Strength determines how hard you hit. Each point increases your min Damage by \" +\r\n                    (Math.floor(this.classStatics.STRENGTH_DMG_MIN * ((1 + this.getTalentLevel(\"wizstr\") * 0.05) * 100)) / 100) +\r\n                    \", max Damage by \" +\r\n                    (Math.floor(this.classStatics.STRENGTH_DMG_MAX * ((1 + this.getTalentLevel(\"wizstr\") * 0.05) * 100)) / 100) +\r\n                    \". Your Strength increases damage from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Strength()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    dexTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Dexterity determines your ability to hit enemies. Each point increases your Hit by \" +\r\n                    (this.classStatics.HIT_PER_DEXTERITY + this.getTalentLevel('dex')) +\r\n                    \". Your Dexterity increases Hit from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Dexterity()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Dexterity determines your ability to hit enemies. Each point increases your Hit by \" +\r\n                    (this.classStatics.HIT_PER_DEXTERITY + this.getTalentLevel('wizdex')) +\r\n                    \". Your Dexterity increases Hit from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Dexterity()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    agiTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Agility determines how hard you are to hit. Each point increases your Evasion by \" +\r\n                    (this.classStatics.EVA_PER_AGILITY + this.getTalentLevel('agi')) + \" and gives a small boost to explore speed. \" +\r\n                    \"Your Agility increases Evasion from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Agility()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Agility determines how hard you are to hit. Each point increases your Evasion by \" +\r\n                    (Math.floor((this.classStatics.EVA_PER_AGILITY + this.getTalentLevel('wizagi') * 0.7) * 10) / 10) +\r\n                    \" and gives a small boost to explore speed. \" +\r\n                    \"Your Agility increases Evasion from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Agility()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    endTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Endurance determines your health and resistance against criticals. Each point increases your max Health by \" +\r\n                    (this.classStatics.HP_PER_ENDURANCE + this.getTalentLevel('end')) + \" and Toughness by 3.\" +\r\n                    \"Your Endurance increases Health and Toughness from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Endurance()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Endurance determines your health and resistance against criticals. Each point increases your max Health by \" +\r\n                    (this.classStatics.HP_PER_ENDURANCE + this.getTalentLevel('wizend') * 0.5) + \" and Toughness by 3.\" +\r\n                    \"Your Endurance increases Health and Toughness from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Endurance()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    recTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Recovery determines how easily you heal your wounds. Each point increases your Health Regen by \" +\r\n                    (Math.floor(this.classStatics.REGEN_PER_RECOVERY * ((1 + this.getTalentLevel(\"rec\") * 0.08) * 100)) / 100) + \"/s.\" +\r\n                    \"Your Recovery increases Health Regen from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Recovery()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Recovery determines how easily you heal your wounds. Each point increases your Health Regen by \" +\r\n                    (Math.floor(this.classStatics.REGEN_PER_RECOVERY * 100) / 100) + \"/s.\" +\r\n                    \"Your Recovery increases Health Regen from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Recovery()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    defTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Defense determines how durable your body is. Each point increases your armor by \" +\r\n                    (Math.floor(this.classStatics.ARMOR_PER_DEFENSE * ((1 + this.getTalentLevel(\"def\") * 0.13) * 100)) / 100) +\r\n                    \". Your Defense increases armor from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Defense()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Ward determines your magical protections. Each point increases your armor by \" +\r\n                    (Math.floor(this.classStatics.ARMOR_PER_WARD * 100) / 100) +\r\n                    \" and increases your start of combat shield by \" + this.classStatics.SHIELD_PER_WARD +\r\n                    \". Your Ward increases armor from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Defense()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    accTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Accuracy determines your ability to strike weak points. Each point increases your Aim by \" +\r\n                    (this.classStatics.CRITPOWER_PER_ACCURACY + this.getTalentLevel('acc') * 0.5) +\r\n                    \". Your Accuracy increases Aim from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Accuracy()) - 1) * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                var spellpower = this.classStatics.SPELL_POWER_PER_POWER * (1 + this.getTalentLevel('first') * 0.01) *\r\n                    (1 + this.getTalentLevel('second') * 0.01) * (1 + this.getTalentLevel('third') * 0.01) * (1 + this.getTalentLevel('fourth') * 0.01) *\r\n                    (1 + this.getTalentLevel('fifth') * 0.01) * (1 + this.getTalentLevel('runemancy') * this.getTotalSocketedRunes() * 0.01) *\r\n                    (1 + this.statBlock.CritChance()) * (1 + this.getTalentLevel('codex') * 0.06);\r\n                return \"Power determines your magical might. Each point increases your Spell Power by \" + (Math.floor(spellpower * 100) / 100) +\r\n                    \". Your Power increases Spell Power from gear by \" +\r\n                    Math.floor((this.statBlock._getScale(this.statBlock.Accuracy()) - 1) * 100) + \"%.\";\r\n        }\r\n    }\r\n    critTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Crit Chance. The chance any hit is a critical hit, dealing extra damage. Crit Chances above 50% are divided, multiplying \" +\r\n                    \"Crit Damage by the same amount. Current divider: \" + this.statBlock.CritDamageMulti();\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Power Multiplier. Your spell power is increased by this value.\";\r\n        }\r\n    }\r\n    critPowerTooltip() {\r\n        switch (this.playerClass) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER:\r\n                return \"Aim. Increases damage dealt with Critical Hits and reduces the chance of a Glancing Hit. Opposed by your opponents Toughness.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_BESERKER:\r\n                return \"\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_WIZARD:\r\n                return \"Spell Power. Increases the damage dealt by the majority of your spells.\";\r\n        }\r\n    }\r\n\r\n    _onStatChanged() {\r\n        for (var i = 0; i < this.statChangedHandlers.length; i++) {\r\n            this.statChangedHandlers[i]();\r\n        }\r\n    }\r\n    _onResourcesChanged(res, gold, tier) {\r\n        for (var i = 0; i < this.resourceChangedHandlers.length; i++) {\r\n            this.resourceChangedHandlers[i](res, gold, tier);\r\n        }\r\n    }\r\n    _onTalentChanged() {\r\n        for (var i = 0; i < this.talentChangedHandlers.length; i++) {\r\n            this.talentChangedHandlers[i]();\r\n        }\r\n    }\r\n    _onClassSelected() {\r\n        for (var i = 0; i < this.classSelectedHandlers.length; i++) {\r\n            this.classSelectedHandlers[i]();\r\n        }\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        if (event === \"onStatChanged\") {\r\n            this.statChangedHandlers.push(callback);\r\n        }\r\n        else if (event === \"onResourcesChanged\") {\r\n            this.resourceChangedHandlers.push(callback);\r\n        }\r\n        else if (event === \"onTalentChanged\") {\r\n            this.talentChangedHandlers.push(callback);\r\n        }\r\n        else if (event === \"onClassSelected\") {\r\n            this.classSelectedHandlers.push(callback);\r\n        }\r\n    }\r\n\r\n    earnableMoonlight(gateReached) {\r\n        var challengeBonus = _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.time2.completions <= 4 ? 1 :\r\n            1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints * 0.05 * 0.01;\r\n        return _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getMoonlightEarned((this.statLevel - 1) + (this.talentLevel - 1) *\r\n            (3 + _StarData__WEBPACK_IMPORTED_MODULE_10__[\"StarData\"].getInstance().perks.knowledge.level * 2), gateReached) *\r\n            (1 + 0.15 * _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.time.completions) * this.dungeonBonus.moonlight *\r\n            _RitualData__WEBPACK_IMPORTED_MODULE_11__[\"RitualData\"].getInstance().moonlightBonus * challengeBonus;\r\n    }\r\n\r\n    getExploreMulti() {\r\n        return (1 + this.talents.explorer.level * 0.2) *\r\n            (1 + this.runeBonuses.exploreSpeed) *\r\n            (1 + _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].AGI_EXPLORE_MULTI * Math.pow(this.statBlock.Agility(), _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].AGI_EXPLORE_POWER + this.runeBonuses.agilityScaling)) *\r\n            (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.farstrider.level * 0.1) *\r\n            this.challengeExploreMulti /\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_11__[\"RitualData\"].getInstance().activePerks.desolation * 0.5);\r\n    }\r\n\r\n    //(ritual.level * (12 + 12 + (ritual.level - 1) * 4)) / 2\r\n    getStatCost(buyAmount) {\r\n        var cost = (_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].STAT_COST_BASE - _StarData__WEBPACK_IMPORTED_MODULE_10__[\"StarData\"].getInstance().perks.statcost.level * 2);\r\n        var t = this.statLevel * cost;\r\n        return (buyAmount * (t + t + ((buyAmount - 1) * cost))) / 2;\r\n    }\r\n    //((c * t + (c * t + t(x - 1))) * x) / 2 = y\r\n    getStatCostMax(percentage) {\r\n        var cost = (_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].STAT_COST_BASE - _StarData__WEBPACK_IMPORTED_MODULE_10__[\"StarData\"].getInstance().perks.statcost.level * 2);\r\n        var tShade = this.shade * percentage;\r\n        var sLvl = this.statLevel;\r\n        var costSqrt = Math.sqrt(cost);\r\n        var t1 = Math.sqrt((4 * Math.pow(sLvl, 2) * cost) - (4 * sLvl * cost) + cost + (8 * tShade));\r\n        var t2 = 2 * sLvl * costSqrt;\r\n        var t3 = costSqrt;\r\n        var t4 = 2 * costSqrt;\r\n        var x = (t1 - t2 + t3) / t4;\r\n        return Math.max(1, Math.floor(x));\r\n    }\r\n    getTalentCost(buyAmount) {\r\n        var ret = 0;\r\n        var challengeMod = _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.talent.completions * 0.008;\r\n        for (var i = 0; i < buyAmount; i++) {\r\n            ret += _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TALENT_COST_BASE * Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TALENT_COST_POWER - challengeMod, (this.talentLevel - 1 + i));\r\n        }\r\n        return ret;\r\n    }\r\n    getTalentCostMax(percentage) {\r\n        var totalShade = this.shade * percentage;\r\n        var buyAmount = 1;\r\n        var power = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TALENT_COST_POWER - _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.talent.completions * 0.008;\r\n        var totalCost = _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TALENT_COST_BASE * Math.pow(power, (this.talentLevel - 1 + buyAmount));\r\n        while (totalCost < totalShade) {\r\n            buyAmount += 1;\r\n            totalCost += _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TALENT_COST_BASE * Math.pow(power, (this.talentLevel - 1 + buyAmount));\r\n        }\r\n        buyAmount = Math.max(1, buyAmount - 1);\r\n        return buyAmount;\r\n    }\r\n    getTalentLevel(name) {\r\n        if (this.talents[name] === undefined || _DynamicSettings__WEBPACK_IMPORTED_MODULE_6__[\"DynamicSettings\"].getInstance().talentsEnabled === false) {\r\n            return 0;\r\n        }\r\n        switch (name) {\r\n            case \"str\":\r\n            case \"wizstr\":\r\n                return this.talents[name].level + this.runeBonuses.strTalents + this.runeBonuses.baseTalents;\r\n            case \"cleave\":\r\n            case \"stun\":\r\n                return this.talents[name].level + this.runeBonuses.strTalents;\r\n            case \"dex\":\r\n            case \"wizdex\":\r\n                return this.talents[name].level + this.runeBonuses.dexTalents + this.runeBonuses.baseTalents;\r\n            case \"hit\":\r\n            case \"followthrough\":\r\n                return this.talents[name].level + this.runeBonuses.dexTalents;\r\n            case \"agi\":\r\n            case \"wizagi\":\r\n                return this.talents[name].level + this.runeBonuses.agiTalents + this.runeBonuses.baseTalents;\r\n            case \"evasion\":\r\n            case \"dodge\":\r\n                return this.talents[name].level + this.runeBonuses.agiTalents;\r\n            case \"end\":\r\n            case \"wizend\":\r\n                return this.talents[name].level + this.runeBonuses.endTalents + this.runeBonuses.baseTalents;\r\n            case \"resilient\":\r\n            case \"magicresist\":\r\n                return this.talents[name].level + this.runeBonuses.endTalents;\r\n            case \"rec\":\r\n                return this.talents[name].level + this.runeBonuses.recTalents + this.runeBonuses.baseTalents;\r\n            case \"quickrecovery\":\r\n            case \"secondwind\":\r\n                return this.talents[name].level + this.runeBonuses.recTalents;\r\n            case \"def\":\r\n                return this.talents[name].level + this.runeBonuses.defTalents + this.runeBonuses.baseTalents;\r\n            case \"block\":\r\n            case \"parry\":\r\n                return this.talents[name].level + this.runeBonuses.defTalents;\r\n            case \"acc\":\r\n                return this.talents[name].level + this.runeBonuses.accTalents + this.runeBonuses.baseTalents;\r\n            case \"crit\":\r\n            case \"serration\":\r\n                return this.talents[name].level + this.runeBonuses.accTalents;\r\n            case \"bounty\":\r\n                return this.talents[name].level + this.runeBonuses.lootTalent;\r\n            case \"governance\":\r\n                return this.talents[name].level + this.runeBonuses.governanceTalent;\r\n            case \"guardian\":\r\n                return this.talents[name].level + this.runeBonuses.guardianTalent;\r\n            case \"charisma\":\r\n                return this.talents[name].level + this.runeBonuses.charismaTalent;\r\n            case \"codex\":\r\n                return this.talents[name].level + this.runeBonuses.chromaTalent;\r\n        }\r\n        return this.talents[name].level;\r\n    }\r\n\r\n    getTotalSocketedRunes() {\r\n        var num = 0;\r\n        if (this.weapon !== undefined) {\r\n            for (var i = 0; i < this.weapon.runes.length; i++) {\r\n                num += this.weapon.runes[i].level !== 0 ? 1 : 0;\r\n            }\r\n        }\r\n        if (this.armor !== undefined) {\r\n            for (var i = 0; i < this.armor.runes.length; i++) {\r\n                num += this.armor.runes[i].level !== 0 ? 1 : 0;\r\n            }\r\n        }\r\n        if (this.trinket !== undefined) {\r\n            for (var i = 0; i < this.trinket.runes.length; i++) {\r\n                num += this.trinket.runes[i].level !== 0 ? 1 : 0;\r\n            }\r\n        }\r\n        return num;\r\n    }\r\n\r\n    buyStat(buyAmount) {\r\n        this.statPoints += buyAmount * (_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].STAT_POINTS_PER_BUY + _StarData__WEBPACK_IMPORTED_MODULE_10__[\"StarData\"].getInstance().perks.statpoints.level);\r\n        this.shade -= this.getStatCost(buyAmount);\r\n        this.statLevel += buyAmount;\r\n    }\r\n    buyTalent(buyAmount) {\r\n        this.talentPoints += buyAmount;\r\n        this.shade -= this.getTalentCost(buyAmount);\r\n        this.talentLevel += buyAmount;\r\n        if (this.talentLevel >= 50 && _ProgressionStore__WEBPACK_IMPORTED_MODULE_7__[\"ProgressionStore\"].getInstance().persistentUnlocks.wizardClass === false) {\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_7__[\"ProgressionStore\"].getInstance().persistentUnlocks.wizardClass = true;\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_7__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_GENERIC,\r\n                \"Your long training session of several minutes is over. Infusing the last bits of shade directly into your veins \" +\r\n                \"you are approached by a mysterious man in robes and a pointy hat! He speaks to you.\\n\\n\" +\r\n                \"\\\"My, you have become quite talented! I think it time you look for different paths. Broaden your horizons, \" +\r\n                \"only then will you gain mastery of the world around you.\\\"\\n\\n\" +\r\n                \"He then vainishes into thin air, leaving only his robe and hat. Your not sure what the crazy old man was talking \" +\r\n                \"about, but you aren't about to let these sweet digs go to waste. You put on your robe and wizard hat. Oh yeah, \" +\r\n                \"it's all coming together. Stylish, and you can take them through the portal! You've unlocked the Wizard Class!\");\r\n        }\r\n        this._onTalentChanged();\r\n    }\r\n    addTalentPoints(amount) {\r\n        this.talentPoints += amount;\r\n        this._onTalentChanged();\r\n    }\r\n\r\n    levelTalent(talent) {\r\n        if (talent.level < talent.maxLevel || talent.maxLevel === -1) {\r\n            talent.level += 1;\r\n            this.talentPoints -= 1;\r\n            this._onTalentChanged();\r\n        }\r\n    }\r\n\r\n    addResource(list, tier) {\r\n        this.resourceTierReached = Math.max(this.resourceTierReached, tier);\r\n        for (var i = 0; i < list.length; i++) {\r\n            this.resources[tier][i] += list[i];\r\n        }\r\n        this._onResourcesChanged(list, 0, tier);\r\n    }\r\n    spendResource(list, tier) {\r\n        var spentList = [0, 0, 0, 0, 0, 0];\r\n        for (var i = 0; i < list.length; i++) {\r\n            this.resources[tier][i] = Math.max(0, this.resources[tier][i] - list[i]);\r\n            spentList[i] -= list[i];\r\n        }\r\n        this._onResourcesChanged(spentList, 0, tier);\r\n    }\r\n    addGold(amount) {\r\n        var worldData = new _WorldData__WEBPACK_IMPORTED_MODULE_3__[\"WorldData\"]();\r\n        this.gold = Math.max(0, Math.min(worldData.getGoldCap(), this.gold + amount));\r\n        this._onResourcesChanged([0, 0, 0, 0, 0, 0], amount, 0);\r\n    }\r\n    addMote(amount) {\r\n        this.motes += amount;\r\n        this._onResourcesChanged([0, 0, 0, 0, 0, 0], 0, 0);\r\n    }\r\n    addShade(amount) {\r\n        this.shade += amount;\r\n        this._onResourcesChanged([0, 0, 0, 0, 0, 0], 0, 0);\r\n    }\r\n\r\n    addRune(rune) {\r\n        this.runes.push(rune);\r\n    }\r\n    removeRune(idx) {\r\n        if (idx < 0 || idx >= this.runes.length) {\r\n            return;\r\n        }\r\n        this.runes.splice(idx, 1);\r\n    }\r\n    sortRunes(sortType) {\r\n        switch (sortType) {\r\n            case 0: // BY NAME\r\n                this.runes.sort((a, b) => { return a.word.localeCompare(b.word); });\r\n                break;\r\n            case 1: // BY LEVEL\r\n                this.runes.sort((a, b) => { return b.level - a.level; });\r\n                break;\r\n        }\r\n    }\r\n    addBaseVillagerStats(power, health) {\r\n        this.baseVillagerPower += power;\r\n        this.baseVillagerHealth += health;\r\n    }\r\n\r\n    multiplyDungeonBonus(prop, value) {\r\n        if (this.dungeonBonus[prop] !== undefined) {\r\n            this.dungeonBonus[prop] = this.dungeonBonus[prop] * value;\r\n        }\r\n        this._onStatChanged();\r\n    }\r\n\r\n    isEquippedItem(gear) {\r\n        switch (gear.slotType) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_WEAPON:\r\n                return this.weapon !== undefined && gear.name === this.weapon.name;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_ARMOR:\r\n                return this.armor !== undefined && gear.name === this.armor.name;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_TRINKET:\r\n                return this.trinket !== undefined && gear.name === this.trinket.name;\r\n        }\r\n    }\r\n\r\n    equip(gear) {\r\n        switch (gear.slotType) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_WEAPON:\r\n                if (this.weapon !== undefined) {\r\n                    this.unequip(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_WEAPON);\r\n                }\r\n                this.weapon = gear;\r\n                this.statBlock.equip(this.weapon);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_ARMOR:\r\n                if (this.armor !== undefined) {\r\n                    this.unequip(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_ARMOR);\r\n                }\r\n                this.armor = gear;\r\n                this.statBlock.equip(this.armor);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_TRINKET:\r\n                if (this.trinket !== undefined) {\r\n                    this.unequip(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_TRINKET);\r\n                }\r\n                this.trinket = gear;\r\n                this.statBlock.equip(this.trinket);\r\n                break;\r\n        }\r\n        var runeBonus = gear.getRuneBonuses();\r\n        for (const prop in runeBonus) {\r\n            this.runeBonuses[prop] += runeBonus[prop];\r\n        }\r\n        this._onStatChanged();\r\n    }\r\n    unequip(slot) {\r\n        var runeBonus = {};\r\n        switch (slot) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_WEAPON:\r\n                this.statBlock.unequip(this.weapon);\r\n                runeBonus = this.weapon.getRuneBonuses();\r\n                this.weapon = undefined;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_ARMOR:\r\n                this.statBlock.unequip(this.armor);\r\n                runeBonus = this.armor.getRuneBonuses();\r\n                this.armor = undefined;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].GEAR_TRINKET:\r\n                this.statBlock.unequip(this.trinket);\r\n                runeBonus = this.trinket.getRuneBonuses();\r\n                this.trinket = undefined;\r\n                break;\r\n        }\r\n        for (const prop in runeBonus) {\r\n            this.runeBonuses[prop] -= runeBonus[prop];\r\n        }\r\n        this._onStatChanged();\r\n    }\r\n\r\n    save() {\r\n        var bpArray = [];\r\n        for (var i = 0; i < this.blueprints.length; i++) {\r\n            bpArray.push(this.blueprints[i].save());\r\n        }\r\n        var saveObj = {\r\n            stats: this.statBlock.save(),\r\n            shade: this.shade,\r\n            sp: this.statPoints,\r\n            tp: this.talentPoints,\r\n            spl: this.statLevel,\r\n            tpl: this.talentLevel,\r\n            res: this.resources,\r\n            rtr: this.resourceTierReached,\r\n            crf: this.craftingCosts,\r\n            dcf: this.dimCraftingCosts,\r\n            csp: this.starperkCostReduction,\r\n            pc: this.playerClass,\r\n            cc: this.classChosen,\r\n            bs: this.baseStats,\r\n            gold: this.gold,\r\n            mote: this.motes,\r\n            talents: this.talents,\r\n            runes: this.runes,\r\n            vp: this.baseVillagerPower,\r\n            vh: this.baseVillagerHealth,\r\n            db: this.dungeonBonus,\r\n            bp: bpArray,\r\n            w: this.weapon === undefined ? \"\" : this.weapon.name,\r\n            a: this.armor === undefined ? \"\" : this.armor.name,\r\n            t: this.trinket === undefined ? \"\" : this.trinket.name\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this.statBlock.load(saveObj.stats, ver);\r\n        this.shade = saveObj.shade;\r\n        this.statPoints = saveObj.sp;\r\n        this.talentPoints = saveObj.tp;\r\n        this.statLevel = saveObj.spl;\r\n        this.talentLevel = saveObj.tpl;\r\n        this.resources = saveObj.res;\r\n        this.resourceTierReached = saveObj.rtr;\r\n        this.craftingCosts = saveObj.crf;\r\n        this.playerClass = saveObj.pc === undefined ? _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].CLASS_ADVENTURER : saveObj.pc;\r\n        this.gold = saveObj.gold;\r\n        this.motes = saveObj.mote;\r\n        var tempStats = {\r\n            strength: 5,\r\n            dexterity: 5,\r\n            agility: 5,\r\n            endurance: 5,\r\n            recovery: 5,\r\n            defense: 5,\r\n            accuracy: 5\r\n        };\r\n        this.baseStats = saveObj.bs === undefined ? tempStats : saveObj.bs;\r\n        this.runes = saveObj.runes === undefined ? [] : saveObj.runes;\r\n        this.baseVillagerPower = saveObj.vp === undefined ? 1 : saveObj.vp;\r\n        this.baseVillagerHealth = saveObj.vh === undefined ? 10 : saveObj.vh;\r\n        this.dungeonBonus = saveObj.db === undefined ? this.dungeonBonus : saveObj.db;\r\n        this.starperkCostReduction = saveObj.csp === undefined ? 1 : saveObj.csp;\r\n        this.dimCraftingCosts = saveObj.dcf === undefined ? [1, 1, 1, 1, 1, 1, 1, 1] : saveObj.dcf;\r\n\r\n        this.selectClass(this.playerClass);\r\n        var keys = Object.keys(saveObj.talents);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (this.talents[keys[i]] !== undefined) {\r\n                this.talents[keys[i]].level = saveObj.talents[keys[i]].level;\r\n            }\r\n        }\r\n        this.classChosen = saveObj.cc === undefined ? true : saveObj.cc;\r\n\r\n        if (saveObj.bp !== undefined) {\r\n            this.blueprints = [];\r\n            for (var i = 0; i < saveObj.bp.length; i++) {\r\n                this.blueprints.push(_Blueprint__WEBPACK_IMPORTED_MODULE_9__[\"Blueprint\"].loadFromFile(saveObj.bp[i]));\r\n            }\r\n        }\r\n\r\n        var gearData = _GearData__WEBPACK_IMPORTED_MODULE_4__[\"GearData\"].getInstance();\r\n        if (saveObj.w !== \"\") {\r\n            this.equip(gearData.getGearByName(saveObj.w));\r\n        }\r\n        if (saveObj.a !== \"\") {\r\n            this.equip(gearData.getGearByName(saveObj.a));\r\n        }\r\n        if (saveObj.t !== \"\") {\r\n            this.equip(gearData.getGearByName(saveObj.t));\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/PlayerData.js?");

/***/ }),

/***/ "./src/data/ProgressionStore.js":
/*!**************************************!*\
  !*** ./src/data/ProgressionStore.js ***!
  \**************************************/
/*! exports provided: ProgressionStore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProgressionStore\", function() { return ProgressionStore; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n\r\n\r\n\r\n\r\nclass ProgressionStore {\r\n    constructor() {\r\n        if (!ProgressionStore.instance) {\r\n            this.unlocks = {\r\n                // Tabs\r\n                gearTab: false,\r\n                exploreTab: false,\r\n                combatTab: false,\r\n                townTab: false,\r\n                talentsTab: false,\r\n                worldTab: false,\r\n                // Mechanics\r\n                infuseUI: false,\r\n                resourceUI: false,\r\n                craftingUI: false,\r\n                buildings: false,\r\n                motes: false,\r\n                runes: false\r\n            };\r\n            this.exploreUnlocks = [\r\n                {\r\n                    count: 1,\r\n                    text: \"Well that's everything I can see in this area. If I want to keep searching \" +\r\n                        \"I'll need to leave this weirdly square land and find another square to explore. \" +\r\n                        \"You think you saw a town in the distance towards the north, but you could be seeing things.\"\r\n                },\r\n                {\r\n                    count: 5,\r\n                    text: \"You've seen a lot of what this world has to offer by now, and most of it wants \" +\r\n                        \"to kill you. The people in the town seem nice though, and many of them have been wanting \" +\r\n                        \"some way to help out. With the lands sort of safe to walk again they can get back to working.\\n\\n\" +\r\n                        \"The only problem is they don't have anything to build with so they want you to bring them some \" +\r\n                        \"from the monsters you've been killing.\"\r\n                },\r\n                {\r\n                    count: 10,\r\n                    text: \"Your surprised at how easy this has been going. Sure, every day is a new battle for your life \" +\r\n                        \"against horrible shadow monsters, but the tile's you've cleared seem way more vibrant and full of life.\\n\\n\" +\r\n                        \"Some of the townsfolk have been worried that the mists will return but the odds of that happening have \" +\r\n                        \"got to be astronomically low. Just to get them off your back you told them to give you some kind of \" +\r\n                        \"alert on the Region tab if something goes wrong. Hah! Like that will ever happen.\"\r\n                },\r\n                {\r\n                    count: 30,\r\n                    text: \"From what the townsfolk have told me there's a barrier preventing people from leaving this \" +\r\n                        \"region. I wonder what happens after I explore every tile there is to explore?\"\r\n                },\r\n                {\r\n                    count: 70,\r\n                    text: \"How many years has it been since I started this journey? All the days sort of melt together \" +\r\n                        \"into one long blur of monster slaying. You swear it's only been like, 1, 2 days tops though.\"\r\n                }\r\n            ];\r\n            this.killUnlocks = [\r\n                {\r\n                    count: 1,\r\n                    text: \"What the hell was that? It looked like a normal beast, but like, made \" +\r\n                        \"of shadows? Is this whole land filled with these monsters?\"\r\n                },\r\n                {\r\n                    count: 5,\r\n                    text: \"You're starting to get the hang of this, although your starting to \" +\r\n                        \"wonder what happened to the previous owner of this gear...\"\r\n                },\r\n                {\r\n                    count: 100,\r\n                    text: \"You did it, you've killed your 100th monster. This accomplishment fills you \" +\r\n                        \"with pride for a moment before you shrug and move onto the next one.\"\r\n                }\r\n            ];\r\n            this.shadeUnlocks = [\r\n                {\r\n                    count: 50,\r\n                    text: \"These strange monsters have been leaving behind these shadowy.. things. \" +\r\n                        \"I think I'll call them shade. It's strange, but I'm pretty sure it wants me \" +\r\n                        \"to do something with it.\"\r\n                },\r\n                {\r\n                    count: 400,\r\n                    text: \"Now that I've collected enough of this shade stuff, I think I can do \" +\r\n                        \"something even better with it, I just need enough of it all in one place.\"\r\n                },\r\n                {\r\n                    count: 5000,\r\n                    text: \"I've found a load of this shade stuff, where is it all coming from?\"\r\n                },\r\n            ];\r\n            this.resourceUnlocks = [\r\n                {\r\n                    count: 25,\r\n                    text: \"I've noticed some monsters leave behind more than just shadows. things like wood, stone \" +\r\n                        \"and metal.... Definitely things they shouldn't have inside them. You have enough now that \" +\r\n                        \"you could try and improve your gear with them. Slapping some metal onto the end of your \" +\r\n                        \"sword should do the trick.\"\r\n                },\r\n                {\r\n                    count: 100,\r\n                    text: \"You have so many resources your not sure what to do with them. Maybe its time to try your \" +\r\n                        \"hand at making some new gear? You've strapped enough garbage around your broken sword that \" +\r\n                        \"it's more of a club now then anything. You don't have a forge or tools, but it can't be harder \" +\r\n                        \"than upgrading your gear.\"\r\n                },\r\n                {\r\n                    count: 1000,\r\n                    text: \"So let me get this straight. It costs, what, 30-40 resources to craft a sword, but hundreds to \" +\r\n                        \"make it a little sharper? The townsfolk assure me this is normal, but I'm starting to think they just \" +\r\n                        \"want me to bring them free resources.\"\r\n                }\r\n            ];\r\n            this.statPointUnlocks = [\r\n                {\r\n                    count: 1,\r\n                    text: \"You finally got enough of that shade to try something. You grab a handful of the stuff and try \" +\r\n                        \"squeezing it into a ball only to find it slip from your hands and enter your chest! You look around \" +\r\n                        \"and see '+1 Stat Point' appear above your head. You're not sure what that means, but you \" +\r\n                        \"feel stronger than you did before! You're pretty sure you'll need even more shade to do this again, \" +\r\n                        \"but at least you found one use for it.\"\r\n                },\r\n                {\r\n                    count: 25,\r\n                    text: \"You're not entirely sure what this shade is doing, but boy do you feel strong!\"\r\n                },\r\n                {\r\n                    count: 50,\r\n                    text: \"You've been infusing a lot of shade lately, is there a limit to how much your body can take?\"\r\n                },\r\n                {\r\n                    count: 100,\r\n                    text: \"doesn't seem like it. At least 100 isn't the limit.\"\r\n                },\r\n                {\r\n                    count: 300,\r\n                    text: \"I've lost count. By all measures my abilities shouldn't be humanly possible, yet I'm still finding \" +\r\n                        \"monsters stronger than me.\"\r\n                }\r\n            ];\r\n            this.deathUnlocks = [\r\n                {\r\n                    count: 1,\r\n                    text: \"It was bound to happen eventually, you're not exactly adventurer material. You open your eyes, \" +\r\n                        \"wondering where the next stage of existence will take you... and it looks like, wilderness? Wait a \" +\r\n                        \"minute, you know this place! This is where you died! Or not? You pick yourself up and dust off your \" +\r\n                        \"clothes, turns out your injuries aren't as bad as you thought.\\n\\n\" +\r\n                        \"Looking over your gear it seems you lost some of your shade, is that what those things were after?\"\r\n                },\r\n                {\r\n                    count: 5,\r\n                    text: \"I guess I should be happy these things aren't killing me, but getting knocked out this many times \" +\r\n                        \"can't be good for me.\"\r\n                },\r\n                {\r\n                    count: 12,\r\n                    text: \"I feel like I'm not paying enough attention, wandering around thinking about what I should do next, \" +\r\n                        \"how my gear is doing, then suddenly BAM! Ambushed by a literal whale and knocked unconscious.\"\r\n                }\r\n            ];\r\n            // any one off lore that doesnt fit into the above should go here to be tracked better\r\n            this.loreUnlocks = {\r\n                cultists1: {\r\n                    unlocked: false,\r\n                    text: \"This is the largest mountain you've ever seen, taking up not one, but 5 whole tiles! It looks like \" +\r\n                        \"this mountain already has people living here, wearing robes and chanting strange words. You thought \" +\r\n                        \"they might be friendly, but when you tried to talk to them they cast spells at you, dealing Magic Damage \" +\r\n                        \"and bypassing your armor.\\n\\nThat sounds like cheating and you can't stand cheaters. You can see \" +\r\n                        \"a spooky looking fortress at the top of this mountain. Time to give those magic nerds a piece of your mind.\"\r\n                },\r\n                cultists2: {\r\n                    unlocked: false,\r\n                    text: \"Finally fighting your way through the cultist fortress you've arrived at the peak of Doom Mountain. \" +\r\n                        \"Standing on the edge of the cliff is the cultist leader.\\n\\n\" +\r\n                        \"\\\"I see you've bested my cult, and I am no match for you. You must be here to destroy my Tome of \" +\r\n                        \"Forbidden Knowledge which holds the secrets to money, fame, and power?\\\"\\n\\n\" +\r\n                        \"Money, Fame, Power? I like all of those things. You talk to the cultist some more, and while he \" +\r\n                        \"keeps talking about a bunch of nerd stuff like eldritch horrors, terrible curses, and corrupting \" +\r\n                        \"your eternal soul he can summon the best sandwich I've ever had. All it requires is 'sufficient \" +\r\n                        \"resources' to prepare the ritual. That doesn't sound too bad!\\n\\nRITUALS UNLOCKED\"\r\n                }\r\n            };\r\n            this.loreTexts = {\r\n            };\r\n            this.exploresUnlocked = 0;\r\n            this.killsUnlocked = 0;\r\n            this.shadesUnlocked = 0;\r\n            this.resourceUnlocked = 0;\r\n            this.statPointUnlocked = 0;\r\n            this.deathUnlocked = 0;\r\n\r\n            this.counts = {\r\n                tilesExplored: 0,\r\n                monsterKills: 0,\r\n                shadeGained: 0,\r\n                resourcesGained: 0,\r\n                statPointsGained: 0,\r\n                deaths: 0\r\n            };\r\n\r\n            this.persistentUnlocks = {\r\n                challenges: false,\r\n                autoExplore: false,\r\n                wizardClass: false,\r\n                dungeons: false,\r\n                starshards: false,\r\n                rituals: false,\r\n                autoExplore2: false,\r\n                autoGear: false,\r\n                autoTown: false\r\n            }\r\n\r\n            this.totalCounts = {\r\n                tilesExplored: 0,\r\n                monsterKills: 0,\r\n                shadeGained: 0,\r\n                resourcesGained: 0,\r\n                statPointsGained: 0,\r\n                deaths: 0,\r\n                timesGated: 0\r\n            }\r\n\r\n            this.onUnlockHandlers = [];\r\n            ProgressionStore.instance = this;\r\n        }\r\n\r\n        return ProgressionStore.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!ProgressionStore.instance) {\r\n            return new ProgressionStore();\r\n        }\r\n        return ProgressionStore.instance;\r\n    }\r\n\r\n    rebirth() {\r\n        this.unlocks = {\r\n            // Tabs\r\n            gearTab: false,\r\n            exploreTab: false,\r\n            combatTab: false,\r\n            townTab: false,\r\n            talentsTab: _MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.talent.completions > 0,\r\n            worldTab: false,\r\n            // Mechanics\r\n            infuseUI: false,\r\n            resourceUI: false,\r\n            craftingUI: false,\r\n            buildings: false,\r\n            motes: false,\r\n            runes: false\r\n        };\r\n        this.exploresUnlocked = 0;\r\n        this.killsUnlocked = 0;\r\n        this.shadesUnlocked = 0;\r\n        this.resourceUnlocked = 0;\r\n        this.statPointUnlocked = 0;\r\n        this.deathUnlocked = 0;\r\n\r\n        this.counts = {\r\n            tilesExplored: 0,\r\n            monsterKills: 0,\r\n            shadeGained: 0,\r\n            resourcesGained: 0,\r\n            statPointsGained: 0,\r\n            deaths: 0\r\n        };\r\n\r\n        this.totalCounts.timesGated += 1;\r\n        this.persistentUnlocks.autoExplore = true;\r\n    }\r\n\r\n    _onUnlock(type, count, text) {\r\n        for (var i = 0; i < this.onUnlockHandlers.length; i++) {\r\n            this.onUnlockHandlers[i](type, count, text);\r\n        }\r\n    }\r\n\r\n    addOnUnlockHandler(callback) {\r\n        this.onUnlockHandlers.push(callback);\r\n    }\r\n\r\n    registerTileExplored() {\r\n        this.counts.tilesExplored += 1;\r\n        this.totalCounts.tilesExplored += 1;\r\n        for (var i = this.exploresUnlocked; i < this.exploreUnlocks.length; i++) {\r\n            if (this.exploreUnlocks[i].count <= this.counts.tilesExplored) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_EXPLORE, this.exploreUnlocks[i].count, this.exploreUnlocks[i].text);\r\n                this.exploresUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerMonsterKill() {\r\n        this.counts.monsterKills += 1;\r\n        this.totalCounts.monsterKills += 1;\r\n        for (var i = this.killsUnlocked; i < this.killUnlocks.length; i++) {\r\n            if (this.killUnlocks[i].count <= this.counts.monsterKills) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_KILL, this.killUnlocks[i].count, this.killUnlocks[i].text);\r\n                this.killsUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerShadeGain(shade) {\r\n        this.counts.shadeGained += shade;\r\n        this.totalCounts.shadeGained += shade;\r\n        for (var i = this.shadesUnlocked; i < this.shadeUnlocks.length; i++) {\r\n            if (this.shadeUnlocks[i].count <= this.counts.shadeGained) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_SHADE, this.shadeUnlocks[i].count, this.shadeUnlocks[i].text);\r\n                this.shadesUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerResourceGain(resourceList) {\r\n        this.counts.resourcesGained += _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].sumList(resourceList);\r\n        this.totalCounts.resourcesGained += _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].sumList(resourceList);\r\n        for (var i = this.resourceUnlocked; i < this.resourceUnlocks.length; i++) {\r\n            if (this.resourceUnlocks[i].count <= this.counts.resourcesGained) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_RESOURCE, this.resourceUnlocks[i].count, this.resourceUnlocks[i].text);\r\n                this.resourceUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerStatPointGain(amount) {\r\n        this.counts.statPointsGained += amount;\r\n        this.totalCounts.statPointsGained += amount;\r\n        for (var i = this.statPointUnlocked; i < this.statPointUnlocks.length; i++) {\r\n            if (this.statPointUnlocks[i].count <= this.counts.statPointsGained) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_STATPOINT, this.statPointUnlocks[i].count, this.statPointUnlocks[i].text);\r\n                this.statPointUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerDeath(amount) {\r\n        this.counts.deaths += amount;\r\n        this.totalCounts.deaths += amount;\r\n        for (var i = this.deathUnlocked; i < this.deathUnlocks.length; i++) {\r\n            if (this.deathUnlocks[i].count <= this.counts.deaths) {\r\n                this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_DEATH, this.deathUnlocks[i].count, this.deathUnlocks[i].text);\r\n                this.deathUnlocked = i + 1;\r\n            }\r\n        }\r\n    }\r\n    registerLore(name) {\r\n        if (this.loreUnlocks[name] !== undefined && this.loreUnlocks[name].unlocked === false) {\r\n            this._onUnlock(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_GENERIC, 0, this.loreUnlocks[name].text);\r\n            this.loreUnlocks[name].unlocked = true;\r\n        }\r\n    }\r\n\r\n    registerFeatureUnlocked(feature, text) {\r\n        switch (feature) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_GEAR_TAB:\r\n                this.unlocks.gearTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_EXPLORE_TAB:\r\n                this.unlocks.exploreTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_COMBAT_TAB:\r\n                this.unlocks.combatTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_TOWN_TAB:\r\n                this.unlocks.townTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_TALENTS_TAB:\r\n                this.unlocks.talentsTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_INFUSE_UI:\r\n                this.unlocks.infuseUI = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_RESOURCE_UI:\r\n                this.unlocks.resourceUI = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_CRAFTING_UI:\r\n                this.unlocks.craftingUI = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_BUILDING_UI:\r\n                this.unlocks.buildings = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_MOTES_UI:\r\n                this.unlocks.motes = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_WORLD_TAB:\r\n                this.unlocks.worldTab = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_RUNES_UI:\r\n                this.unlocks.runes = true;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].UNLOCK_GENERIC:\r\n                break;\r\n        }\r\n\r\n        this._onUnlock(feature, 0, text);\r\n    }\r\n\r\n    save() {\r\n        var loreUnlocks = [];\r\n        for (const prop in this.loreUnlocks) {\r\n            loreUnlocks.push([prop, this.loreUnlocks[prop].unlocked]);\r\n        }\r\n        var saveObj = {\r\n            un: this.unlocks,\r\n            eun: this.exploresUnlocked,\r\n            kun: this.killsUnlocked,\r\n            sun: this.shadesUnlocked,\r\n            run: this.resourceUnlocked,\r\n            stun: this.statPointUnlocked,\r\n            dun: this.deathUnlocked,\r\n            count: this.counts,\r\n            tcount: this.totalCounts,\r\n            pun: this.persistentUnlocks,\r\n            lore: this.loreUnlocks\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this.unlocks = saveObj.un;\r\n        this.exploresUnlocked = saveObj.eun;\r\n        this.killsUnlocked = saveObj.kun;\r\n        this.shadesUnlocked = saveObj.sun;\r\n        this.resourceUnlocked = saveObj.run;\r\n        this.statPointUnlocked = saveObj.stun;\r\n        this.deathUnlocked = saveObj.dun;\r\n        this.counts = saveObj.count;\r\n        this.totalCounts = saveObj.tcount;\r\n        for (const prop in saveObj.pun) {\r\n            this.persistentUnlocks[prop] = saveObj.pun[prop];\r\n        }\r\n        if (saveObj.lore !== undefined) {\r\n            for (var i = 0; i < saveObj.lore.length; i++) {\r\n                if (this.loreUnlocks[saveObj.lore[i][0]] !== undefined) {\r\n                    this.loreUnlocks[saveObj.lore[i][0]].unlocked = saveObj.lore[i][1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/ProgressionStore.js?");

/***/ }),

/***/ "./src/data/Region.js":
/*!****************************!*\
  !*** ./src/data/Region.js ***!
  \****************************/
/*! exports provided: TileData, Region */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TileData\", function() { return TileData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Region\", function() { return Region; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../data/CreatureRegistry */ \"./src/data/CreatureRegistry.js\");\n/* harmony import */ var _TownData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TownData */ \"./src/data/TownData.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _Building__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Building */ \"./src/data/Building.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _BuildingRegistry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./BuildingRegistry */ \"./src/data/BuildingRegistry.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _RuneRegistry__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./RuneRegistry */ \"./src/data/RuneRegistry.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n// MAP GEN\r\n// 11x11 or bigger? maps\r\n// each region is of a specific biome with different resource weights\r\n// map is made by generating a set number of points based on biome,\r\n// each point has a different terrain and strength\r\n// run two way veronoi diagram to determine which tile becomes which terrain\r\n// randomly place points with different difficulties, run veronoi diagram\r\n// for tile difficulty\r\n// add a town and difficulty point of 0, also add a start point within 3 tiles of\r\n// town with a difficulty of -2, player starts in easiest location.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TileData {\r\n\r\n    constructor(color = 0x00ff00, x = 0, y = 0) {\r\n        //variables to save\r\n        this.regName = \"plains\";\r\n        this.explored = false;\r\n        this.revealed = false;\r\n        this.difficulty = 0;\r\n        this.amountExplored = 0;\r\n        this.isInvaded = false;\r\n        this.invasionFights = 0;\r\n        this.building = undefined;\r\n        this.defense = 0;\r\n        this.hasRune = false;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.hasShard = false;\r\n        //variables not saved\r\n        this.name = \"\";\r\n        this.exploreSpeed = 1; //can be calculated on the fly\r\n        this.color = color; //can be determined from name\r\n        this.borderColor = [255, 255, 255]\r\n        this.explorationNeeded = 1000; //got from name\r\n        this.enemies = []; //name\r\n        this.yields = [];\r\n        this.roadDist = -1;\r\n        this.roadBonus = 0;\r\n        this.towerBonus = 1;\r\n        this.roadBuildable = false;\r\n        this.dockBuildable = false;\r\n        this.houseBuildable = false;\r\n        this.roadConnected = false;\r\n        this.canInvade = true;\r\n        this.parent = undefined;\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            exp: this.explored,\r\n            rev: this.revealed,\r\n            dif: this.difficulty,\r\n            rn: this.regName,\r\n            ae: this.amountExplored,\r\n            in: this.isInvaded,\r\n            if: this.invasionFights,\r\n            bld: this.building === undefined ? \"\" : this.building.save(),\r\n            def: this.defense,\r\n            hr: this.hasRune,\r\n            hs: this.hasShard,\r\n            x: this.x,\r\n            y: this.y\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n    static loadFromSave(saveObj, ver) {\r\n        var tile = new TileData();\r\n\r\n        tile.regName = saveObj.rn;\r\n        tile.explored = saveObj.exp;\r\n        tile.revealed = saveObj.rev;\r\n        tile.difficulty = saveObj.dif;\r\n        tile.amountExplored = saveObj.ae;\r\n        tile.isInvaded = saveObj.in;\r\n        tile.invasionFights = saveObj.if;\r\n        tile.building = saveObj.bld === \"\" ? undefined : _Building__WEBPACK_IMPORTED_MODULE_7__[\"Building\"].loadFromFile(saveObj.bld, ver);\r\n        tile.defense = saveObj.def;\r\n        tile.hasRune = saveObj.hr === undefined ? false : saveObj.hr;\r\n        tile.hasShard = saveObj.hs === undefined ? false : saveObj.hs;\r\n        tile.x = saveObj.x;\r\n        tile.y = saveObj.y;\r\n        return tile;\r\n    }\r\n\r\n    init(regName, difficulty, baseDifficulty, region) {\r\n        var tileType = _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].TILE_TYPES[regName];\r\n        this.regName = regName;\r\n        this.difficulty = difficulty;\r\n        this.exploreSpeed = 1 + difficulty * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].EXPLORE_MULTIPLIER;\r\n        this.color = tileType.clr;\r\n        this.name = tileType.name;\r\n        this.enemies = tileType.enemies;\r\n        this.explorationNeeded = tileType.explorationNeeded;\r\n        var maxDiff = baseDifficulty + _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease\r\n        var d = Math.min(1, (Math.max(0, difficulty - baseDifficulty) / maxDiff));\r\n        this.borderColor = [255, 255 - (d > 0.5 ? 255 * (d - 0.5) * 2 : 0), 255 - Math.min(255, (255 * d * 2))];\r\n        this.yields = [];\r\n        this.parent = region;\r\n    }\r\n\r\n    invade() {\r\n        this.isInvaded = true;\r\n        this.invasionFights = 0;\r\n    }\r\n\r\n    getFriendshipReward() {\r\n        return 2 + 0.1 * (this.difficulty - (this.parent.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease));\r\n    }\r\n\r\n    explore(delta) {\r\n        if (this.explored === true) {\r\n            return;\r\n        }\r\n        var exploreMulti = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().getExploreMulti() *\r\n            _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().exploreSpeed *\r\n            this.parent.townData.exploreMulti;\r\n        exploreMulti = exploreMulti / this.exploreSpeed;\r\n        this.amountExplored += delta * exploreMulti;\r\n\r\n        if (this.amountExplored >= this.explorationNeeded) {\r\n            this.parent.exploreTile(this.x, this.y);\r\n        }\r\n    }\r\n\r\n    generateMonsters() {\r\n        var enemyList = [];\r\n        if (this.isInvaded === true) {\r\n            var bonusDif = _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().invasionLevelBonus +\r\n                _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().activePerks.callofthevoid + this.parent.invasionStrength;\r\n            enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(this.enemies[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.enemies.length)],\r\n                this.difficulty + bonusDif, this.parent.regionLevel));\r\n            enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(this.enemies[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.enemies.length)],\r\n                this.difficulty - 1 + bonusDif, this.parent.regionLevel));\r\n            enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(this.enemies[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.enemies.length)],\r\n                this.difficulty - 1 + bonusDif, this.parent.regionLevel));\r\n            for (var i = 0; i < enemyList.length; i++) {\r\n                enemyList[i].addTrait(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TRAIT_INVADER, 1);\r\n            }\r\n        } else {\r\n            var min = this.difficulty < 30 ? 1 : 2;\r\n            var max = (this.difficulty < 5 ? 2 : 3) + (this.difficulty > 15 ? 1 : 0)\r\n            var numCreatures = this.difficulty > 0 ? _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(min, max) : 1;\r\n            for (var i = 0; i < numCreatures; i++) {\r\n                if (Math.random() <= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().getTalentLevel(\"lootgoblin\") * 0.005) {\r\n                    enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(\"lootgoblin\", this.difficulty, this.parent.regionLevel));\r\n                } else if (this.hasShard === true) {\r\n                    var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].STARSHARD_ENEMIES.length);\r\n                    enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].STARSHARD_ENEMIES[num], this.difficulty, this.parent.regionLevel));\r\n                } else {\r\n                    var num = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.enemies.length);\r\n                    enemyList.push(_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_2__[\"CreatureRegistry\"].GetCreatureByName(this.enemies[num], this.difficulty, this.parent.regionLevel));\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < enemyList.length; i++) {\r\n            if (enemyList[i].level > 100) {\r\n                if (Math.random() < 0.15) {\r\n                    enemyList[i].addTrait(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TRAIT_DIRE, 1);\r\n                }\r\n            }\r\n            for (var t = 0; t < this.parent.traits.length; t++) {\r\n                enemyList[i].addTrait(this.parent.traits[t].type, this.parent.traits[t].level);\r\n            }\r\n            enemyList[i].applyTraits();\r\n        }\r\n\r\n\r\n        return enemyList;\r\n    }\r\n}\r\n\r\nclass Region {\r\n    constructor(width = 8, height = 8, regionLevel, regionType, traits, ignoreGen = false) {\r\n        //non-save variables\r\n        this.tileChangedHandler = undefined;\r\n        this.resourcesPerDay = [0, 0, 0, 0, 0, 0];\r\n        this.taverns = [];\r\n        this.roads = [];\r\n        this.markets = [];\r\n        this.productionBuildings = [];\r\n        this.warehouses = [];\r\n        this.houses = [];\r\n        this.towers = [];\r\n        this.alchemyDrain = 0;\r\n        this.alchemyGain = 0;\r\n        this.exchangePower = 0;\r\n        this.villagerStatGain = [0, 0];\r\n        this.dungeonLocations = [];\r\n        this.autoUpgrade = false;\r\n        this.blueprint = -1;\r\n        this.starshardsPerTile = 1;\r\n        this.garrisonRefreshRate = 0;\r\n\r\n        if (ignoreGen === true) {\r\n            return true;\r\n        }\r\n        //save variables\r\n        this.width = width;\r\n        this.height = height;\r\n        this.regionLevel = regionLevel;\r\n        this.resourceTier = Math.min(7, this.regionLevel + _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().minResourceTier);\r\n        this.townData = new _TownData__WEBPACK_IMPORTED_MODULE_3__[\"TownData\"](regionLevel + 1, this.resourceTier);\r\n        this.tilesExplored = 0;\r\n        this.invasionTimer = 3;\r\n        this.invasionStrength = 0;\r\n        this.invasionCounter = 0;\r\n        this.invasionCounterMax = 100;\r\n        this.invasions = [];\r\n        this.worldHeight = 350;\r\n        this.type = regionType;\r\n        this.map = []\r\n        for (var i = 0; i < height; i++) {\r\n            var row = [];\r\n            for (var t = 0; t < width; t++) {\r\n                row.push(new TileData(0x000000, t, i));\r\n            }\r\n            this.map.push(row);\r\n        }\r\n        this.traits = traits;\r\n\r\n        if (this.regionLevel === 9 && _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === false) {\r\n            this.generateVoid();\r\n        } else {\r\n            var points = [];\r\n            for (var i = 0; i < _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].REGION_TYPES[regionType].points.length; i++) {\r\n                var def = _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].REGION_TYPES[regionType].points[i];\r\n                for (var s = 0; s < def.amount; s++) {\r\n                    points.push({\r\n                        x: _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, width), y: _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, height),\r\n                        power: _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(def.power[0], def.power[1]), terrainData: def.terrain\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.generateTerrain(points);\r\n        }\r\n\r\n        this._init();\r\n    }\r\n\r\n    save() {\r\n        var tileSave = [];\r\n        for (var i = 0; i < this.height; i++) {\r\n            var row = [];\r\n            for (var t = 0; t < this.width; t++) {\r\n                row.push(this.map[i][t].save());\r\n            }\r\n            tileSave.push(row);\r\n        }\r\n        var saveObj = {\r\n            w: this.width,\r\n            h: this.height,\r\n            rl: this.regionLevel,\r\n            td: this.townData.save(),\r\n            te: this.tilesExplored,\r\n            map: tileSave,\r\n            inv: this.invasions,\r\n            it: this.invasionTimer,\r\n            is: this.invasionStrength,\r\n            ic2: this.invasionCounter,\r\n            icm: this.invasionCounterMax,\r\n            wh: this.worldHeight,\r\n            type: this.type,\r\n            tr: this.traits,\r\n            dl: this.dungeonLocations,\r\n            au: this.autoUpgrade,\r\n            bp: this.blueprint,\r\n            rt: this.resourceTier,\r\n            sst: this.starshardsPerTile\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    static loadFromSave(saveObj, ver) {\r\n        var region = new Region(0, 0, 0, \"temperate\", [], true);\r\n\r\n        region.width = saveObj.w;\r\n        region.height = saveObj.h;\r\n        region.regionLevel = saveObj.rl;\r\n        region.townData = new _TownData__WEBPACK_IMPORTED_MODULE_3__[\"TownData\"](1, 0);\r\n        region.townData.load(saveObj.td);\r\n        region.tilesExplored = saveObj.te;\r\n        region.worldHeight = saveObj.wh;\r\n        region.type = saveObj.type;\r\n        region.traits = saveObj.tr;\r\n        region.dungeonLocations = saveObj.dl === undefined ? [] : saveObj.dl;\r\n        region.autoUpgrade = saveObj.au === undefined ? false : saveObj.au;\r\n        region.blueprint = saveObj.bp === undefined ? -1 : saveObj.bp;\r\n        region.resourceTier = saveObj.rt === undefined ? Math.min(7, region.regionLevel) : saveObj.rt;\r\n        region.starshardsPerTile = saveObj.sst === undefined ? 1 : saveObj.sst;\r\n        region.invasionStrength = saveObj.is === undefined ? 0 : saveObj.is;\r\n        region.invasionCounter = saveObj.ic2 === undefined ? 0 : saveObj.ic2;\r\n        region.invasionCounterMax = saveObj.icm === undefined ? 100 : saveObj.icm;\r\n        region.invasions = saveObj.inv === undefined ? [] : saveObj.inv;\r\n        region.invasionTimer = saveObj.it === undefined ? 3 : saveObj.it;\r\n        region.map = []\r\n        for (var i = 0; i < saveObj.map.length; i++) {\r\n            var row = [];\r\n            for (var t = 0; t < saveObj.map[i].length; t++) {\r\n                var tile = TileData.loadFromSave(saveObj.map[i][t], ver);\r\n                tile.init(tile.regName, tile.difficulty, region.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease, region);\r\n                row.push(tile);\r\n            }\r\n            region.map.push(row);\r\n        }\r\n        // yields for a tile are based on their surrounding tiles\r\n        for (var i = 0; i < region.height; i++) {\r\n            for (var t = 0; t < region.width; t++) {\r\n                region.map[i][t].yields = region._getTileYields(t, i);\r\n            }\r\n        }\r\n\r\n        region._init();\r\n\r\n        return region;\r\n    }\r\n\r\n    _getTileYields(px, py) {\r\n        // we use the tile yields as a mask to determine which yields we should add for a given tile\r\n        var yieldMask = _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].TILE_TYPES[this.map[py][px].regName].yields;\r\n        var yields = [0, 0, 0, 0, 0, 0];\r\n        var ritMulti = (1 + _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().activePerks.wildgrowth * 0.1) /\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().activePerks.desolation * 0.5);\r\n        for (var y = Math.max(0, py - 1); y < Math.min(this.height, py + 2); y++) {\r\n            for (var x = Math.max(0, px - 1); x < Math.min(this.width, px + 2); x++) {\r\n                for (var i = 0; i < yields.length; i++) {\r\n                    if (yieldMask[i] === 0) {\r\n                        continue;\r\n                    }\r\n                    yields[i] += _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].TILE_TYPES[this.map[y][x].regName].yields[i] * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TILE_YIELD_SHARING;\r\n                }\r\n            }\r\n        }\r\n        yields[0] = yields[0] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.wood.level * 0.05) * ritMulti;\r\n        yields[1] = yields[1] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.leather.level * 0.05) * ritMulti;\r\n        yields[2] = yields[2] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.metal.level * 0.05) * ritMulti;\r\n        yields[3] = yields[3] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.fiber.level * 0.05) * ritMulti;\r\n        yields[4] = yields[4] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.stone.level * 0.05) * ritMulti;\r\n        yields[5] = yields[5] * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.crystal.level * 0.05) * ritMulti;\r\n        return yields;\r\n    }\r\n\r\n    generateVoid() {\r\n        var voidMap = _RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].VOID_MAPS[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, 3)];\r\n        var minDiff = this.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease;\r\n        var maxDiff = minDiff + _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease;\r\n\r\n        var starfields = ['starfield', 'starfield2', 'starfield3'];\r\n\r\n        for (var y = 0; y < voidMap.length; y++) {\r\n            for (var x = 0; x < voidMap[y].length; x++) {\r\n                var base = minDiff + ((_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].getDistance(x, y, 5, 11) / (this.height * 0.79)) *\r\n                    _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease);\r\n                var difficulty = Math.max(minDiff, Math.min(maxDiff, base));\r\n                var regName;\r\n                switch (voidMap[y][x]) {\r\n                    case 0:\r\n                        regName = 'void';\r\n                        difficulty = Math.min(maxDiff, difficulty + 5);\r\n                        break;\r\n                    case 1:\r\n                        regName = starfields[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, starfields.length)];\r\n                        break;\r\n                    case 2:\r\n                        regName = 'starpalace';\r\n                        difficulty = maxDiff + 1;\r\n                        break;\r\n                }\r\n                this.map[y][x].init(regName, Math.floor(difficulty), minDiff, this);\r\n            }\r\n        }\r\n\r\n        // yields for a tile are based on their surrounding tiles\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                this.map[i][t].yields = this._getTileYields(t, i);\r\n            }\r\n        }\r\n\r\n        this._calculateTileBonuses();\r\n        this.map[11][5].revealed = true;\r\n    }\r\n\r\n    generateTerrain(pointList) {\r\n        var minDiff = this.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease;\r\n        var maxDiff = minDiff + _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease;\r\n\r\n        var starfields = ['starfield', 'starfield2', 'starfield3'];\r\n\r\n        for (var y = 0; y < voidMap.length; y++) {\r\n            for (var x = 0; x < voidMap[y].length; x++) {\r\n                var base = minDiff + ((_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].getDistance(x, y, 5, 11) / (this.height * 0.79)) *\r\n                    _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease);\r\n                var difficulty = Math.max(minDiff, Math.min(maxDiff, base));\r\n                var regName;\r\n                switch (voidMap[y][x]) {\r\n                    case 0:\r\n                        regName = 'void';\r\n                        difficulty = Math.min(maxDiff, difficulty + 5);\r\n                        break;\r\n                    case 1:\r\n                        regName = starfields[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, starfields.length)];\r\n                        break;\r\n                    case 2:\r\n                        regName = 'starpalace';\r\n                        difficulty = maxDiff + 1;\r\n                        break;\r\n                }\r\n                this.map[y][x].init(regName, Math.floor(difficulty), minDiff, this);\r\n            }\r\n        }\r\n\r\n        // yields for a tile are based on their surrounding tiles\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                this.map[i][t].yields = this._getTileYields(t, i);\r\n            }\r\n        }\r\n\r\n        this._calculateTileBonuses();\r\n        this.map[11][5].revealed = true;\r\n    }\r\n\r\n    generateTerrain(pointList) {\r\n        var minDiff = this.regionLevel * (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease +\r\n            _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().activePerks.vengeance);\r\n        var maxDiff = minDiff + (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease +\r\n            _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().activePerks.vengeance);\r\n        // spawn point is always within 2 tiles of town (ignoring north points)\r\n        var townPoint = [Math.floor(this.width / 2), this.height - 3]\r\n        var spawnPoint = [townPoint[0] + Math.floor(Math.random() * 2)]\r\n        spawnPoint.push(townPoint[1] + 2 - Math.abs(townPoint[0] - spawnPoint[0]));\r\n\r\n        var difficultyNodes = []\r\n        difficultyNodes.push({ x: townPoint[0], y: townPoint[1], power: minDiff - 2 });\r\n        difficultyNodes.push({ x: spawnPoint[0], y: spawnPoint[1], power: minDiff - 4 });\r\n\r\n        for (var i = 0; i < 8; i++) {\r\n            var x = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width);\r\n            var y = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.height);\r\n            while (_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].pointInList(x, y, difficultyNodes)) {\r\n                x = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width);\r\n                y = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.height);\r\n            }\r\n            var basePow = minDiff + ((_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].getDistance(x, y, townPoint[0], townPoint[1]) / (this.height * 0.70)) *\r\n                _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease);\r\n            difficultyNodes.push(\r\n                {\r\n                    x: x,\r\n                    y: y,\r\n                    power: basePow + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(-4, 4)\r\n                });\r\n        }\r\n\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                // terrain type\r\n                var cIdx = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].nearestPointsInList(t, i, pointList, 2);\r\n                var powA = pointList[cIdx[0][0]].power / (1 + cIdx[0][1]);\r\n                var powB = pointList[cIdx[1][0]].power / (1 + cIdx[1][1]);\r\n                var terrainData = undefined;\r\n                if (powA > powB) {\r\n                    terrainData = pointList[cIdx[0][0]].terrainData;\r\n                } else {\r\n                    terrainData = pointList[cIdx[1][0]].terrainData;\r\n                }\r\n                // difficulty\r\n                cIdx = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].nearestPointInList(t, i, difficultyNodes);\r\n                // because the location of the town is somewhat centered we multiply the height by 0.66 to make the difficulty more in line\r\n                // with the difficulty range.\r\n                var base = minDiff + ((_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].getDistance(t, i, townPoint[0], townPoint[1]) / (this.height * 0.79)) *\r\n                    _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease);\r\n                var difficulty = Math.max(minDiff,\r\n                    Math.min(maxDiff - 1, Math.floor(base + (difficultyNodes[cIdx[0]].power - base) / (2 + cIdx[1]))));\r\n                this.map[i][t].init(terrainData, difficulty, minDiff, this);\r\n            }\r\n        }\r\n\r\n        //find a place to put the mystic gate, either randomly in a spot max difficulty or above, or at highest difficulty place otherwise\r\n        var gatePos = [-1, -1];\r\n        if (this.regionLevel >= _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().minGateRegion) {\r\n            var mysticGateSpots = [];\r\n            var max = 0;\r\n            var maxPos = [0, 0];\r\n            for (var i = 0; i < this.height; i++) {\r\n                for (var t = 0; t < this.width; t++) {\r\n                    if (this.map[i][t].difficulty >= maxDiff - 1) {\r\n                        mysticGateSpots.push([i, t]);\r\n                    }\r\n                    if (this.map[i][t].difficulty > max) {\r\n                        maxPos[0] = i;\r\n                        maxPos[1] = t;\r\n                        max = this.map[i][t].difficulty;\r\n                    }\r\n                }\r\n            }\r\n            mysticGateSpots.push(maxPos);\r\n            gatePos = mysticGateSpots[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, mysticGateSpots.length)];\r\n            this.map[gatePos[0]][gatePos[1]].init(\"mysticgate\", maxDiff, minDiff, this);\r\n        }\r\n\r\n        // for unlocking dungeons, we need to place a single crypt tile in region 5\r\n        if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().challengeName === \"\" &&\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === false && this.regionLevel === 4) {\r\n            // place the crypt on a random tile 5 rows from the top\r\n            var x = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width);\r\n            this.map[6][x].init(\"crypt\", maxDiff, minDiff, this);\r\n        }\r\n\r\n        // For unlocking Rituals, place a cultist fortress in region 12\r\n        if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().challengeName === \"\" &&\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === false && this.regionLevel === 11) {\r\n            // the cultist lair is ontop of mount doom, a 5 tile area shaped like a '+'\r\n            var x = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(1, this.width - 1);\r\n            this.map[3][x].init(\"doomhill\", maxDiff - 2, minDiff, this);\r\n            this.map[5][x].init(\"doomhill\", maxDiff - 2, minDiff, this);\r\n            this.map[4][x - 1].init(\"doomhill\", maxDiff - 2, minDiff, this);\r\n            this.map[4][x + 1].init(\"doomhill\", maxDiff - 2, minDiff, this);\r\n            this.map[4][x].init(\"mtdoom\", maxDiff, minDiff, this);\r\n        }\r\n\r\n        //if runes appear on the map, add spawn locations here\r\n        var runeCount = 0;\r\n        if (_MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.runes.level > 0) {\r\n            runeCount = 5 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.runelands.level % 5;\r\n        }\r\n        // we can't place runes on the town or gate squares, or on places that already have runes.\r\n        var validFunc = (x, y) => {\r\n            return this.map[y][x].hasRune === false && (x !== townPoint[0] || y !== townPoint[1]) && (x !== gatePos[1] || y !== gatePos[0]);\r\n        };\r\n        for (var i = 0; i < runeCount; i++) {\r\n            var posX = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width);\r\n            var posY = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.height);\r\n\r\n            if (validFunc(posX, posY) === true) {\r\n                this.map[posY][posX].hasRune = true;\r\n            } else {\r\n                //search for a new valid point\r\n                var start = posY * this.width + posX;\r\n                for (var t = 0; t < 20; t++) {\r\n                    var idx = (start + t) % (this.width * this.height);\r\n                    posX = idx % this.width;\r\n                    posY = Math.floor(idx / this.width);\r\n                    if (validFunc(posX, posY) === true) {\r\n                        this.map[posY][posX].hasRune = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // yields for a tile are based on their surrounding tiles\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                this.map[i][t].yields = this._getTileYields(t, i);\r\n            }\r\n        }\r\n\r\n        this.map[townPoint[1]][townPoint[0]].init(\"town\", minDiff, minDiff, this);\r\n        this.map[townPoint[1]][townPoint[0]].building = _BuildingRegistry__WEBPACK_IMPORTED_MODULE_9__[\"BuildingRegistry\"].getBuildingByName(\"town\");\r\n        // avoid place building as that can lead to infinite loops in the startup path\r\n        this._addBuilding(this.map[townPoint[1]][townPoint[0]]);\r\n        this._calculateTileBonuses();\r\n        this.map[spawnPoint[1]][spawnPoint[0]].revealed = true;\r\n\r\n        // calculate dungeon spawns\r\n        if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true) {\r\n            var p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, Math.floor(this.height / 3)), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            while (this.map[p[0]][p[1]].regName === \"town\" || this.map[p[0]][p[1]].regName === 'mysticgate') {\r\n                p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, Math.floor(this.height / 3)), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            }\r\n            this.dungeonLocations.push(p);\r\n            var p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(Math.floor(this.height / 3), Math.floor(this.height / 3) * 2), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            while (this.map[p[0]][p[1]].regName === \"town\" || this.map[p[0]][p[1]].regName === 'mysticgate') {\r\n                p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(Math.floor(this.height / 3), Math.floor(this.height / 3) * 2), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            }\r\n            this.dungeonLocations.push(p);\r\n            var p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(Math.floor(this.height / 3) * 2, Math.floor(this.height / 3) * 3), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            while (this.map[p[0]][p[1]].regName === \"town\" || this.map[p[0]][p[1]].regName === 'mysticgate') {\r\n                p = [_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(Math.floor(this.height / 3) * 2, Math.floor(this.height / 3) * 3), _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, this.width)]\r\n            }\r\n            this.dungeonLocations.push(p);\r\n        }\r\n\r\n        // add shard locations\r\n        if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true) {\r\n            var starLevel = this.regionLevel + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.time2.completions;\r\n            var chance = _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].BASE_STARSHARD_CHANCE * (1 + starLevel * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].STARSHARD_REGION_MULTI) *\r\n                _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().starshardBonus;\r\n            this.starshardsPerTile = 1;\r\n            while (chance > 0.1) {\r\n                chance = chance / 2;\r\n                this.starshardsPerTile = this.starshardsPerTile * 2;\r\n            }\r\n            for (var y = 0; y < this.height; y++) {\r\n                for (var x = 0; x < this.width; x++) {\r\n                    if (Math.random() < chance) {\r\n                        this.map[y][x].hasShard = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileChanged(callback) {\r\n        this.tileChangedHandler = callback;\r\n    }\r\n    removeHandlers() {\r\n        this.tileChangedHandler = undefined;\r\n    }\r\n    _onTileChanged(tile) {\r\n        if (this.tileChangedHandler !== undefined) {\r\n            this.tileChangedHandler(tile);\r\n        }\r\n    }\r\n\r\n    getStarShardChance() {\r\n        var starLevel = this.regionLevel + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.time2.completions;\r\n        var chance = _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].BASE_STARSHARD_CHANCE * (1 + starLevel * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].STARSHARD_REGION_MULTI) *\r\n            _RitualData__WEBPACK_IMPORTED_MODULE_14__[\"RitualData\"].getInstance().starshardBonus;\r\n        while (chance > 0.1) {\r\n            chance = chance / 2;\r\n        }\r\n        return chance;\r\n    }\r\n    getExplorePercent() {\r\n        return this.tilesExplored / (this.width * this.height);\r\n    }\r\n    isExplorable(x, y) {\r\n        return this.map[y][x].revealed === true && this.map[y][x].name !== \"Starlight Palace\";\r\n    }\r\n\r\n    _tileIsDungeon(x, y) {\r\n        for (var i = 0; i < this.dungeonLocations.length; i++) {\r\n            if (this.dungeonLocations[i][0] === y && this.dungeonLocations[i][1] === x) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    exploreTile(x, y) {\r\n        if (this.map[y][x].revealed === true && this.map[y][x].explored !== true) {\r\n            this.tilesExplored += 1;\r\n            this.townData.setTilesExplored(this.tilesExplored);\r\n            this.map[y][x].explored = true;\r\n            this.townData.addFriendship(30 * _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.discovery.level);\r\n            if (this.map[y][x].hasRune === true) {\r\n                if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().unlocks.runes === false) {\r\n                    _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].UNLOCK_RUNES_UI,\r\n                        \"You found an interesting rock in that last tile and shoved it into your pack, probably due to your crippling need \" +\r\n                        \"to hoard things like some RPG character. The rock was glowing so it would probably make a neat good luck charm if you \" +\r\n                        \"shoved it into the holes on your gear.\");\r\n                }\r\n                this.map[y][x].hasRune = false;\r\n                var runeLvl = Math.floor(this.regionLevel / 2) + 1 +\r\n                    Math.floor(_MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.runelands.level / 5);\r\n                var rune = _RuneRegistry__WEBPACK_IMPORTED_MODULE_12__[\"RuneRegistry\"].getRandomRuneAtLevel(runeLvl);\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().addRune(rune);\r\n            }\r\n            if (this.map[y][x].name === \"Town\") {\r\n                this.townData.townExplored = true;\r\n                if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().unlocks.townTab === false) {\r\n                    _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].UNLOCK_TOWN_TAB,\r\n                        \"You've finally made it to the town you saw in the distance, the only square not covered in this \" +\r\n                        \"horrible fog. As you approach the gate a voice calls to you from the wall.\\n\\n\" +\r\n                        \"\\\"Oh hey, you must be the new hero we've heard about, give me a minute to open the gate.\\\"\\n\\n\" +\r\n                        \"Hero? You woke up naked and alone in the wilderness. Come to think of it, it's amazing you're even \" +\r\n                        \"still alive. You're still contemplating your existence when the door opens.\\n\\n\" +\r\n                        \"\\\"So hero, you don't mind if I call you hero do you? Just makes things easier. Anyway we have a house \" +\r\n                        \"laid out for you, don't expect much. The Forge has seen better days and the guilds have all been abandoned \" +\r\n                        \"but I'm sure you'll see to that, Mr. Hero.\\\"\\n\\nYou begin to ask what all this hero nonsense is about \" +\r\n                        \"when they speak up again.\\n\\n \\\"Oh that reminds me, we don't have much, but we can pay you for every one \" +\r\n                        \"of those monsters you kill. Don't try to lie about how many you've beat, we can tell. Oh, and we'll pay \" +\r\n                        \"you more when you're clearing new land for us. What were you trying to ask?\\\"\\n\\nYou say it was nothing \" +\r\n                        \"and ask them to lead the way. You don't know about this hero stuff, but money is money. Besides you were \" +\r\n                        \"already fighting this monsters anyway, might as well make money while you do it.\");\r\n                }\r\n            }\r\n            if (this.tilesExplored >= 5 && _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().invasionRegion < this.regionLevel) {\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().increaseInvasionPower();\r\n            }\r\n            if (this.tilesExplored >= 10) {\r\n                this.townData.researchEnabled = true;\r\n            }\r\n\r\n            if (y === 0) {\r\n                if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().unlocks.worldTab === false) {\r\n                    _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].UNLOCK_WORLD_TAB,\r\n                        \"You did it, you've reached the edge of the world. This is all there is...\\n\\n\" +\r\n                        \"Oh wait, it looks like there's a trail over there leading to a new region! there's \" +\r\n                        \"a whole world out there. I was wondering what that last tab was going to be.\");\r\n                }\r\n\r\n                if (_WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().regionList.length - 1 === this.regionLevel && _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().nextRegions.length === 0 &&\r\n                    (_WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().regionList.length < 10 || _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true)) {\r\n                    _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().generateRegionChoices();\r\n                }\r\n            }\r\n            if (y > 0) {\r\n                this.map[y - 1][x].revealed = true;\r\n                this._onTileChanged(this.map[y - 1][x]);\r\n            }\r\n            if (y < this.height - 1) {\r\n                this.map[y + 1][x].revealed = true;\r\n                this._onTileChanged(this.map[y + 1][x]);\r\n            }\r\n            if (x > 0) {\r\n                this.map[y][x - 1].revealed = true;\r\n                this._onTileChanged(this.map[y][x - 1]);\r\n            }\r\n            if (x < this.width - 1) {\r\n                this.map[y][x + 1].revealed = true;\r\n                this._onTileChanged(this.map[y][x + 1]);\r\n            }\r\n            if (this._tileIsDungeon(x, y)) {\r\n                this.dungeonLocations = this.dungeonLocations.filter(p => p[1] !== x || p[0] !== y);\r\n                this.townData.uncoverDungeon(this);\r\n            }\r\n            if (this.map[y][x].hasShard === true) {\r\n                this.map[y][x].hasShard = false;\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().starshardsEarned += this.starshardsPerTile;\r\n            }\r\n            if (this.map[y][x].name === \"Ancient Crypt\" && _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === false) {\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons = true;\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].UNLOCK_GENERIC,\r\n                    \"As you clear the final floor of this ancient crypt you find an ornate key! Surely this key must lead to \" +\r\n                    \"some ancient treasure. As you leave the crypt thinking about how your going to get PAID you see a \" +\r\n                    \"villager carrying the same key as you.\\n\\n\" +\r\n                    \"\\\"What, this old thing? We find them all the time, it's so bad we end up just throwing them away. Apparently it \" +\r\n                    \"unlocks some old dungeon filled with treasure and unspeakable horrors. Anyway, I gotta go chuck this key \" +\r\n                    \"down into the crypt here.\\\"\\n\\n\" +\r\n                    \"This whole time there's been dungeons full of loot and the villagers are just telling you now? Well, you don't \" +\r\n                    \"have time to do the dungeons yourself, and it's not because your afraid of whatever unspeakable horrors are inside. \" +\r\n                    \"You're pretty sure the villagers can handle it, and if not it only takes a week for them to breed a fully adult \" +\r\n                    \"villager. What's with that anyway?\\n\" +\r\n                    \"VILLAGER DUNGEONS UNLOCKED! On your next rebirth you'll find dungeons to throw your villagers in.\");\r\n            }\r\n            if (this.map[y][x].name === \"Cultist Foothills\") {\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerLore(\"cultists1\");\r\n            }\r\n            if (this.map[y][x].name === \"Doom Mountain\" && _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === false) {\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals = true;\r\n                _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerLore(\"cultists2\");\r\n            }\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerTileExplored();\r\n        }\r\n        if (this.regionLevel > 0 && this.regionLevel <= 8 && _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().getRegion(this.regionLevel - 1).townData.alchemyEnabled === false) {\r\n            _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().getRegion(this.regionLevel - 1).townData.alchemyEnabled = true;\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].UNLOCK_GENERIC,\r\n                \"You recieved a letter from the previous town. A mysterious old man came through and taught them \" +\r\n                \"the magic of alchemy. You may now build alchemy labs to convert tier \" + (this.regionLevel - 1) +\r\n                \" resources to tier \" + this.regionLevel + \" resources at a horribly inefficient rate! Thanks \" +\r\n                \"mysterious old man!\");\r\n        }\r\n        this._onTileChanged(this.map[y][x]);\r\n        return this.map[y][x];\r\n    }\r\n\r\n    _expandInvasion(tile, invasionList) {\r\n        if (tile[0] - 1 >= 0 && this.map[tile[0] - 1][tile[1]].isInvaded === false &&\r\n            this.map[tile[0] - 1][tile[1]].canInvade === true &&\r\n            this.map[tile[0] - 1][tile[1]].explored === true) {\r\n            invasionList.push([tile[0] - 1, tile[1]]);\r\n        }\r\n        if (tile[0] + 1 < this.height && this.map[tile[0] + 1][tile[1]].isInvaded === false &&\r\n            this.map[tile[0] + 1][tile[1]].canInvade === true &&\r\n            this.map[tile[0] + 1][tile[1]].explored === true) {\r\n            invasionList.push([tile[0] + 1, tile[1]]);\r\n        }\r\n        if (tile[1] - 1 >= 0 && this.map[tile[0]][tile[1] - 1].isInvaded === false &&\r\n            this.map[tile[0]][tile[1] - 1].canInvade === true &&\r\n            this.map[tile[0]][tile[1] - 1].explored === true) {\r\n            invasionList.push([tile[0], tile[1] - 1]);\r\n        }\r\n        if (tile[1] + 1 < this.width && this.map[tile[0]][tile[1] + 1].isInvaded === false &&\r\n            this.map[tile[0]][tile[1] + 1].canInvade === true &&\r\n            this.map[tile[0]][tile[1] + 1].explored === true) {\r\n            invasionList.push([tile[0], tile[1] + 1]);\r\n        }\r\n        return invasionList;\r\n    }\r\n\r\n    _startInvasion() {\r\n        this.invasionTimer = _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().expandTimer;\r\n        var invadeList = [];\r\n        for (var y = 1; y < this.height - 1; y++) {\r\n            for (var x = 1; x < this.width - 1; x++) {\r\n                if (this.map[y][x].explored === false || this.map[y][x].name === \"Town\" || this.map[y][x].name === \"Mystic Gate\" ||\r\n                    this.map[y][x].isInvaded === true || this.map[y][x].canInvade === false) {\r\n                    continue;\r\n                }\r\n                var canInvade = false;\r\n                for (var i = -1; i < 2; i++) {\r\n                    for (var s = -1; s < 2; s++) {\r\n                        if (this.map[y + i][x + s].revealed === true && this.map[y + i][x + s].explored === false) {\r\n                            canInvade = true;\r\n                        }\r\n                    }\r\n                }\r\n                if (canInvade === true) {\r\n                    invadeList.push([y, x]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (invadeList.length <= 0) {\r\n            return;\r\n        }\r\n        var tile = invadeList[_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, invadeList.length)];\r\n        this.invasions = [tile];\r\n        this.map[tile[0]][tile[1]].invade();\r\n    }\r\n\r\n    clearInvadedTile(x, y) {\r\n        this.map[y][x].isInvaded = false;\r\n        this.invasions = this.invasions.filter(s => this.map[s[0]][s[1]].isInvaded === true);\r\n        this.invasionCounter = Math.max(0,\r\n            this.invasionCounter - _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].INVASION_STRENGTH_REDUCTION * this.invasionStrength);\r\n        this._onTileChanged(this.map[y][x]);\r\n        if (this.invasions.length == 0) {\r\n            this.invasionStrength = 0;\r\n            this.invasionCounter = 0;\r\n            this.invasionCounterMax = 100;\r\n            this.invasionTimer = _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().invasionTimer;\r\n        }\r\n        this._calculateTileBonuses();\r\n    }\r\n\r\n    _canDock(x, y) {\r\n        return ((y > 0 && this.map[y - 1][x].name != this.map[y][x].name) ||\r\n            (y < this.height - 1 && this.map[y + 1][x].name != this.map[y][x].name) ||\r\n            (x > 0 && this.map[y][x - 1].name != this.map[y][x].name) ||\r\n            (x < this.width - 1 && this.map[y][x + 1].name != this.map[y][x].name));\r\n    }\r\n\r\n    _init() {\r\n        this.roads = [];\r\n        this.markets = [[this.height - 3, Math.floor(this.width / 2)]];\r\n        this.taverns = [];\r\n        this.productionBuildings = [];\r\n        this.warehouses = [];\r\n        this.towers = [];\r\n\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                if (this.map[i][t].building !== undefined) {\r\n                    if (this.map[i][t].building.name === \"Road\" || this.map[i][t].building.name === \"Town\") {\r\n                        this.roads.push([i, t]);\r\n                    } else if (this.map[i][t].building.name === \"Market\") {\r\n                        this.markets.push([i, t]);\r\n                    } else if (this.map[i][t].building.name === \"Tavern\") {\r\n                        this.taverns.push([i, t]);\r\n                    } else if (this.map[i][t].building.name === \"Warehouse\") {\r\n                        this.warehouses.push([i, t]);\r\n                    } else if (this.map[i][t].building.name === \"Town House\") {\r\n                        this.houses.push([i, t]);\r\n                    } else if (this.map[i][t].building.name === \"Watch Tower\") {\r\n                        this.towers.push([i, t]);\r\n                    } else {\r\n                        this.productionBuildings.push([i, t]);\r\n                    }\r\n                }\r\n                if (this.map[i][t].name === \"Lake\" || this.map[i][t].name === \"Oasis\") {\r\n                    this.map[i][t].dockBuildable = this._canDock(t, i);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._calculateTileBonuses();\r\n    }\r\n\r\n    _getBuildingEfficiency(px, py, potential = false) {\r\n        let bldCount = potential === false ? 0 : 1;\r\n        for (var y = Math.max(0, py - 1); y < Math.min(this.height, py + 2); y++) {\r\n            for (var x = Math.max(0, px - 1); x < Math.min(this.width, px + 2); x++) {\r\n                if (this.map[y][x].building !== undefined) {\r\n                    switch (this.map[y][x].building.buildingType) {\r\n                        case _Building__WEBPACK_IMPORTED_MODULE_7__[\"BuildingTypes\"].PRODUCTION:\r\n                            bldCount += 1;\r\n                            break;\r\n                        case _Building__WEBPACK_IMPORTED_MODULE_7__[\"BuildingTypes\"].ECON:\r\n                            bldCount += 0.30;\r\n                            break;\r\n                        case _Building__WEBPACK_IMPORTED_MODULE_7__[\"BuildingTypes\"].HOUSE:\r\n                            bldCount += 0.15;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Math.pow(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].PRODUCTION_EFFICIENCY_MULT, bldCount - 1);\r\n    }\r\n\r\n    _getDockEfficiency(px, py, potential = false) {\r\n        let bldCount = potential === false ? 0 : 1;\r\n        for (var y = Math.max(0, py - 1); y < Math.min(this.height, py + 2); y++) {\r\n            for (var x = Math.max(0, px - 1); x < Math.min(this.width, px + 2); x++) {\r\n                if (this.map[y][x].building !== undefined) {\r\n                    if (this.map[y][x].building.name === \"Docks\") {\r\n                        bldCount += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Math.pow(_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].PRODUCTION_EFFICIENCY_MULT, bldCount - 1);\r\n    }\r\n\r\n    _getMapProp(x, y, prop, fallback) {\r\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\r\n            return fallback;\r\n        }\r\n        return this.map[y][x][prop] === undefined ? fallback : this.map[y][x][prop];\r\n    }\r\n    _setMapProp(x, y, prop, value) {\r\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\r\n            return;\r\n        }\r\n        this.map[y][x][prop] = value;\r\n    }\r\n    _connectRoads(x, y) {\r\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\r\n            return;\r\n        }\r\n        this.map[y][x].roadConnected = true;\r\n        if (this._getMapProp(x, y + 1, 'building', undefined) !== undefined &&\r\n            this.map[y + 1][x].roadConnected === false && this.map[y + 1][x].building.name === 'Road') {\r\n            this._connectRoads(x, y + 1);\r\n        }\r\n        if (this._getMapProp(x, y - 1, 'building', undefined) !== undefined &&\r\n            this.map[y - 1][x].roadConnected === false && this.map[y - 1][x].building.name === 'Road') {\r\n            this._connectRoads(x, y - 1);\r\n        }\r\n        if (this._getMapProp(x + 1, y, 'building', undefined) !== undefined &&\r\n            this.map[y][x + 1].roadConnected === false && this.map[y][x + 1].building.name === 'Road') {\r\n            this._connectRoads(x + 1, y);\r\n        }\r\n        if (this._getMapProp(x - 1, y, 'building', undefined) !== undefined &&\r\n            this.map[y][x - 1].roadConnected === false && this.map[y][x - 1].building.name === 'Road') {\r\n            this._connectRoads(x - 1, y);\r\n        }\r\n    }\r\n\r\n    _calculateTileBonuses() {\r\n        //reset tile information\r\n        var econBonus = 0;\r\n        var maxPop = 100;\r\n        this.townData.buildingIncome = 0;\r\n        this.resourcesPerDay = [0, 0, 0, 0, 0, 0];\r\n        this.alchemyDrain = 0;\r\n        this.alchemyGain = 0;\r\n        this.exchangePower = 0;\r\n        this.villagerStatGain = [0, 0];\r\n        this.garrisonRefreshRate = 0;\r\n        for (var i = 0; i < this.height; i++) {\r\n            for (var t = 0; t < this.width; t++) {\r\n                this.map[i][t].roadDist = -1;\r\n                this.map[i][t].roadBonus = 0;\r\n                this.map[i][t].towerBonus = 1;\r\n                this.map[i][t].roadBuildable = false;\r\n                this.map[i][t].houseBuildable = false;\r\n                this.map[i][t].roadConnected = false;\r\n                this.map[i][t].canInvade = true;\r\n            }\r\n        }\r\n        //calculate road connectedness\r\n        this._connectRoads(Math.floor(this.width / 2), this.height - 3)\r\n        for (var i = 0; i < this.productionBuildings.length; i++) {\r\n            var tile = this.map[this.productionBuildings[i][0]][this.productionBuildings[i][1]];\r\n            if (tile.building.name === \"Docks\") {\r\n                this._connectRoads(tile.x, tile.y);\r\n            }\r\n        }\r\n\r\n        //calculate road bonuses here\r\n        var roadBonus = [[1, 0.5, 0],\r\n        [1.25, 0.75, 0.25],\r\n        [1.5, 1, 0.5],\r\n        [1.75, 1.25, 0.75],\r\n        [2, 1.5, 1]];\r\n        for (var i = 0; i < this.roads.length; i++) {\r\n            if (this._getMapProp(this.roads[i][1], this.roads[i][0], 'roadConnected', false) === false) {\r\n                continue;\r\n            }\r\n            var maxDist = 3;\r\n            var tier = this.map[this.roads[i][0]][this.roads[i][1]].building.tier;\r\n            for (var y = this.roads[i][0] - maxDist; y < this.roads[i][0] + maxDist + 1; y++) {\r\n                for (var x = this.roads[i][1] - maxDist; x < this.roads[i][1] + maxDist + 1; x++) {\r\n                    var dist = Math.abs(y - this.roads[i][0]) + Math.abs(x - this.roads[i][1]);\r\n                    if (dist <= maxDist && this._getMapProp(x, y, 'roadDist', undefined) !== undefined) {\r\n                        this.map[y][x].roadDist = this.map[y][x].roadDist === -1 ? dist : Math.min(this.map[y][x].roadDist, dist);\r\n                        this.map[y][x].roadBuildable = this.map[y][x].roadDist <= 1;\r\n                        this.map[y][x].roadBonus = Math.max(this.map[y][x].roadBonus, roadBonus[tier - 1][dist - 1]);\r\n                        this.map[y][x].houseBuildable = this.map[y][x].roadDist <= 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //set base road tiles just in case town somehow dies?\r\n        var tx = Math.floor(this.width / 2);\r\n        var ty = this.height - 3;\r\n        this.map[ty][tx - 1].roadBuildable = true;\r\n        this.map[ty][tx + 1].roadBuildable = true;\r\n        this.map[ty - 1][tx].roadBuildable = true;\r\n        this.map[ty + 1][tx].roadBuildable = true;\r\n\r\n        //calculate tower bonuses\r\n        for (var i = 0; i < this.towers.length; i++) {\r\n            var tx = this.towers[i][1];\r\n            var ty = this.towers[i][0];\r\n            for (var y = ty - 2; y < ty + 3; y++) {\r\n                for (var x = tx - 2; x < tx + 3; x++) {\r\n                    if (Math.abs(x - tx) + Math.abs(y - ty) <= 2 &&\r\n                        this._getMapProp(x, y, 'towerBonus', undefined) !== undefined) {\r\n                        this.map[y][x].towerBonus += this.map[ty][tx].building.tier *\r\n                            (0.02 * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.construction.level * 0.1));\r\n                        this.map[y][x].canInvade = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //get house population\r\n        for (var i = 0; i < this.houses.length; i++) {\r\n            if (this._getMapProp(this.houses[i][1], this.houses[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            if (this.map[this.houses[i][0]][this.houses[i][1]].houseBuildable === true) {\r\n                maxPop += Math.floor((5 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.urbanization.level) *\r\n                    (1 + _StarData__WEBPACK_IMPORTED_MODULE_13__[\"StarData\"].getInstance().perks.estate.level * 0.5) *\r\n                    this.map[this.houses[i][0]][this.houses[i][1]].building.tier);\r\n            }\r\n        }\r\n\r\n        //get market bonuses\r\n        var points = []\r\n        var exchange = [5, 10, 25, 50, 100];\r\n        for (var i = 0; i < this.markets.length; i++) {\r\n            points.push({ x: this.markets[i][1], y: this.markets[i][0] });\r\n        }\r\n        for (var i = 1; i < this.markets.length; i++) {\r\n            if (this._getMapProp(this.markets[i][1], this.markets[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            var tile = this.map[this.markets[i][0]][this.markets[i][1]];\r\n            if (tile.roadBuildable === true) {\r\n                var max = 5 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.nightmarket.level;\r\n                var tier = tile.building.tier;\r\n                var closest = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].nearestPointInList(this.markets[i][1], this.markets[i][0], points, true);\r\n                econBonus += Math.max(0, Math.min(max, (closest[1] / _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].TRADE_HOUSE_MAX_DISTANCE) * max)) *\r\n                    (tile.building.tier / 100) * tile.towerBonus;\r\n                this.exchangePower += exchange[tier];\r\n            }\r\n        }\r\n        //get tavern bonuses\r\n        for (var i = 0; i < this.taverns.length; i++) {\r\n            if (this._getMapProp(this.taverns[i][1], this.taverns[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            var maxDist = 1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.moonwine.level;\r\n            var bonus = 0;\r\n            var tier = this.map[this.taverns[i][0]][this.taverns[i][1]].building.tier;\r\n            for (var y = Math.max(0, this.taverns[i][0] - maxDist); y < Math.min(this.height, this.taverns[i][0] + maxDist + 1); y++) {\r\n                for (var x = Math.max(0, this.taverns[i][1] - maxDist); x < Math.min(this.width, this.taverns[i][1] + maxDist + 1); x++) {\r\n                    if (Math.abs(y - this.taverns[i][0]) + Math.abs(x - this.taverns[i][1]) <= maxDist &&\r\n                        this.map[y][x].building !== undefined && this.map[y][x].building.name === \"Town House\" &&\r\n                        this.map[y][x].houseBuildable === true) {\r\n                        bonus += 0.02;\r\n                        maxPop += 1;\r\n                    }\r\n                }\r\n            }\r\n            econBonus += bonus * tier * this.map[this.taverns[i][0]][this.taverns[i][1]].towerBonus;\r\n        }\r\n        //warehouses add to road bonus for all adjacent buildings\r\n        for (var i = 0; i < this.warehouses.length; i++) {\r\n            if (this._getMapProp(this.warehouses[i][1], this.warehouses[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            var bonus = this.map[this.warehouses[i][0]][this.warehouses[i][1]].building.tier *\r\n                (0.2 * (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.construction.level * 0.1));\r\n            for (var y = Math.max(0, this.warehouses[i][0] - 1); y < Math.min(this.height, this.warehouses[i][0] + 2); y++) {\r\n                for (var x = Math.max(0, this.warehouses[i][1] - 1); x < Math.min(this.width, this.warehouses[i][1] + 2); x++) {\r\n                    this.map[y][x].roadBonus += bonus;\r\n                }\r\n            }\r\n        }\r\n\r\n        //calculate production bonuses of some prod buildings\r\n        var dockBonus = [1, 1.25, 1.5, 1.75, 2];\r\n        for (var i = 0; i < this.productionBuildings.length; i++) {\r\n            if (this._getMapProp(this.productionBuildings[i][1], this.productionBuildings[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            var tile = this.map[this.productionBuildings[i][0]][this.productionBuildings[i][1]];\r\n            switch (tile.building.name) {\r\n                case \"Docks\":\r\n                    if (tile.y > 0) {\r\n                        this.map[tile.y - 1][tile.x].roadBuildable = true;\r\n                        this.map[tile.y - 1][tile.x].houseBuildable = true;\r\n                        this.map[tile.y - 1][tile.x].roadBonus = Math.max(this.map[tile.y - 1][tile.x].roadBonus, dockBonus[tile.building.tier - 1]);\r\n                    }\r\n                    if (tile.y < this.height - 1) {\r\n                        this.map[tile.y + 1][tile.x].roadBuildable = true;\r\n                        this.map[tile.y + 1][tile.x].houseBuildable = true;\r\n                        this.map[tile.y + 1][tile.x].roadBonus = Math.max(this.map[tile.y + 1][tile.x].roadBonus, dockBonus[tile.building.tier - 1]);\r\n                    }\r\n                    if (tile.x > 0) {\r\n                        this.map[tile.y][tile.x - 1].roadBuildable = true;\r\n                        this.map[tile.y][tile.x - 1].houseBuildable = true;\r\n                        this.map[tile.y][tile.x - 1].roadBonus = Math.max(this.map[tile.y][tile.x - 1].roadBonus, dockBonus[tile.building.tier - 1]);\r\n                    }\r\n                    if (tile.x < this.width - 1) {\r\n                        this.map[tile.y][tile.x + 1].roadBuildable = true;\r\n                        this.map[tile.y][tile.x + 1].houseBuildable = true;\r\n                        this.map[tile.y][tile.x + 1].roadBonus = Math.max(this.map[tile.y][tile.x + 1].roadBonus, dockBonus[tile.building.tier - 1]);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //calculate production bonuses\r\n        //for alchemy\r\n        var drain = [1, 5, 13, 33, 77];\r\n        var gain = [0.05, 0.3, 0.9, 3, 8];\r\n        for (var i = 0; i < this.productionBuildings.length; i++) {\r\n            if (this._getMapProp(this.productionBuildings[i][1], this.productionBuildings[i][0], 'isInvaded', false) === true) {\r\n                continue;\r\n            }\r\n            var tile = this.map[this.productionBuildings[i][0]][this.productionBuildings[i][1]];\r\n            var prodBonus = (1 + (tile.defense * _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.moonlightworkers.level * 0.01)) *\r\n                this._getBuildingEfficiency(tile.x, tile.y) * tile.roadBonus * tile.towerBonus;\r\n            switch (tile.building.name) {\r\n                case \"Lumberyard\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_WOOD] += tile.building.tier * tile.yields[0] * prodBonus;\r\n                    break;\r\n                case \"Hunter's Lodge\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_LEATHER] += tile.building.tier * tile.yields[1] * prodBonus;\r\n                    break;\r\n                case \"Mine\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_METAL] += tile.building.tier * tile.yields[2] * prodBonus;\r\n                    break;\r\n                case \"Herbalist's Hut\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_FIBER] += tile.building.tier * tile.yields[3] * prodBonus;\r\n                    break;\r\n                case \"Quarry\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_STONE] += tile.building.tier * tile.yields[4] * prodBonus;\r\n                    break;\r\n                case \"Crystal Loom\":\r\n                    this.resourcesPerDay[_data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESOURCE_CRYSTAL] += tile.building.tier * tile.yields[5] * prodBonus;\r\n                    break;\r\n                case \"Docks\":\r\n                    var dockEff = this._getDockEfficiency(tile.x, tile.y);\r\n                    this.townData.buildingIncome += _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DOCK_BASE_ECON * tile.building.tier * dockEff * tile.towerBonus;\r\n                    break;\r\n                case \"Alchemy Lab\":\r\n                    this.alchemyDrain += drain[tile.building.tier - 1];\r\n                    this.alchemyGain += gain[tile.building.tier - 1];\r\n                    break;\r\n                case \"Dojo\":\r\n                    if (tile.houseBuildable === true) {\r\n                        var moonBonus = (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.ninja.level * 0.25);\r\n                        this.villagerStatGain[0] += tile.building.tier * 0.02 * moonBonus * tile.towerBonus;\r\n                        this.villagerStatGain[1] += tile.building.tier * 0.2 * moonBonus * tile.towerBonus;\r\n                    }\r\n                    break;\r\n                case \"Garrison\":\r\n                    this.garrisonRefreshRate += 1;\r\n                    break;\r\n            }\r\n        }\r\n        this.townData.setMaxPopulation(maxPop);\r\n        this.townData.calculateEconMulti(econBonus);\r\n    }\r\n\r\n    _canBuild(tile, building) {\r\n        if (tile.building !== undefined || tile.regName === 'mysticgate' || tile.regName === 'town' ||\r\n            tile.explored === false || _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().unlocks.buildings === false) {\r\n            return false;\r\n        }\r\n        if (_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].canCraft(building.resourceCosts, _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().resources[this.resourceTier]) === false ||\r\n            building.goldCost > _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().gold) {\r\n            return false;\r\n        }\r\n        var yieldSum = tile.yields.reduce((a, b) => { return a + b; });\r\n        switch (building.name) {\r\n            case \"Lumberyard\":\r\n                return tile.yields[0] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Hunter's Lodge\":\r\n                return tile.yields[1] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Mine\":\r\n                return tile.yields[2] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Herbalist's Hut\":\r\n                return tile.yields[3] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Quarry\":\r\n                return tile.yields[4] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Crystal Loom\":\r\n                return tile.yields[5] > 0 && _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().buildingsAllowed === true;\r\n            case \"Town House\":\r\n                return tile.houseBuildable && yieldSum > 0;\r\n            case \"Warehouse\":\r\n                return tile.houseBuildable && yieldSum > 0 && _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0;\r\n            case \"Market\":\r\n                return tile.roadBuildable && yieldSum > 0 && this.townData.getMarketLevel() > 0;\r\n            case \"Road\":\r\n                return tile.roadBuildable && yieldSum > 0;\r\n            case \"Docks\":\r\n                return tile.dockBuildable;\r\n            case \"Watch Tower\":\r\n                return yieldSum > 0;\r\n            case \"Alchemy Lab\":\r\n                return yieldSum > 0 && this.townData.alchemyEnabled === true;\r\n            case \"Tavern\":\r\n                return yieldSum > 0 && this.townData.getTavernLevel() > 0;\r\n            case \"Dojo\":\r\n                return yieldSum > 0 && tile.houseBuildable && _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true;\r\n            case \"Garrison\":\r\n                return yieldSum > 0 && tile.houseBuildable && _ProgressionStore__WEBPACK_IMPORTED_MODULE_11__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true;\r\n        }\r\n    }\r\n    _canUpgrade(tile) {\r\n        if (tile.building === undefined || tile.building.tier >= 3 + _StarData__WEBPACK_IMPORTED_MODULE_13__[\"StarData\"].getInstance().perks.construction.level ||\r\n            tile.building.name === \"Town\") {\r\n            return false;\r\n        }\r\n        if ((tile.building.name === \"Market\" && tile.building.tier >= this.townData.getMarketLevel()) ||\r\n            (tile.building.name === \"Tavern\" && tile.building.tier >= this.townData.getTavernLevel())) {\r\n            return false;\r\n        }\r\n        var player = new _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"]();\r\n        return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].canCraft(tile.building.resourceCosts, player.resources[this.resourceTier]) === true &&\r\n            tile.building.goldCost <= player.gold;\r\n    }\r\n\r\n    _addBuilding(tile) {\r\n        tile.defense += _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.hardenedvillagers.level +\r\n            this.townData.upgrades.reinforcedhouses.level;\r\n        switch (tile.building.name) {\r\n            case \"Lumberyard\":\r\n            case \"Hunter's Lodge\":\r\n            case \"Mine\":\r\n            case \"Herbalist's Hut\":\r\n            case \"Quarry\":\r\n            case \"Crystal Loom\":\r\n            case \"Docks\":\r\n            case \"Alchemy Lab\":\r\n            case \"Dojo\":\r\n                this.productionBuildings.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Town House\":\r\n                this.houses.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Watch Tower\":\r\n                this.towers.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Market\":\r\n                this.markets.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Town House\":\r\n                this.houses.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Tavern\":\r\n                this.taverns.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Road\":\r\n            case \"Town\":\r\n                this.roads.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Warehouse\":\r\n                this.warehouses.push([tile.y, tile.x]);\r\n                break;\r\n            case \"Garrison\":\r\n                this.productionBuildings.push([tile.y, tile.x]);\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().garrisonBonus += tile.building.tier * 2;\r\n                break;\r\n        }\r\n    }\r\n    _removeBuilding(tile) {\r\n        tile.defense -= _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.hardenedvillagers.level +\r\n            this.townData.upgrades.reinforcedhouses.level;\r\n        switch (tile.building.name) {\r\n            case \"Lumberyard\":\r\n            case \"Hunter's Lodge\":\r\n            case \"Mine\":\r\n            case \"Herbalist's Hut\":\r\n            case \"Quarry\":\r\n            case \"Crystal Loom\":\r\n            case \"Docks\":\r\n            case \"Alchemy Lab\":\r\n            case \"Dojo\":\r\n                this.productionBuildings = this.productionBuildings.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Watch Tower\":\r\n                this.towers = this.towers.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Market\":\r\n                this.markets = this.markets.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Town House\":\r\n                this.houses = this.houses.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Tavern\":\r\n                this.taverns = this.taverns.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Road\":\r\n                this.roads = this.roads.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Warehouse\":\r\n                this.warehouses = this.warehouses.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                break;\r\n            case \"Garrison\":\r\n                this.productionBuildings = this.productionBuildings.filter(p => p[1] !== tile.x || p[0] !== tile.y);\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().garrisonBonus -= tile.building.tier * 2;\r\n                break;\r\n        }\r\n    }\r\n\r\n    _findWeakestTile() {\r\n        var pos = [-1, -1];\r\n        var min = this.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease + 9999;\r\n        for (var y = 0; y < this.height; y++) {\r\n            for (var x = 0; x < this.width; x++) {\r\n                if (this.map[y][x].explored === false && this.map[y][x].revealed === true &&\r\n                    this.map[y][x].difficulty < min && this.map[y][x].name !== \"Starlight Palace\") {\r\n                    pos = [x, y];\r\n                    min = this.map[y][x].difficulty;\r\n                }\r\n            }\r\n        }\r\n        return pos;\r\n    }\r\n    _findStrongestTile() {\r\n        var pos = [-1, -1];\r\n        var min = this.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease - 10;\r\n        for (var y = 0; y < this.height; y++) {\r\n            for (var x = 0; x < this.width; x++) {\r\n                if (this.map[y][x].explored === false && this.map[y][x].revealed === true &&\r\n                    this.map[y][x].difficulty > min && this.map[y][x].name !== \"Starlight Palace\") {\r\n                    pos = [x, y];\r\n                    min = this.map[y][x].difficulty;\r\n                }\r\n            }\r\n        }\r\n        return pos;\r\n    }\r\n\r\n    getProdBuildingCount() {\r\n        return this.productionBuildings.length;\r\n    }\r\n\r\n    nextWeakestTile() {\r\n        if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().autoExploreOptions === _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].AUTOEXPLORE_WEAKEST) {\r\n            return this._findWeakestTile();\r\n        } else if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().autoExploreOptions === _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].AUTOEXPLORE_STRONGEST) {\r\n            return this._findStrongestTile();\r\n        }\r\n        return [-1, -1];\r\n    }\r\n\r\n    handleReinforcedHouses() {\r\n        for (var y = 0; y < this.height; y++) {\r\n            for (var x = 0; x < this.width; x++) {\r\n                if (this.map[y][x].building !== undefined) {\r\n                    this.map[y][x].defense += 1;\r\n                }\r\n            }\r\n        }\r\n        this._calculateTileBonuses();\r\n    }\r\n\r\n    placeBuilding(x, y, building) {\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().spendResource(building.resourceCosts, Math.min(7, this.regionLevel));\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().addGold(-building.goldCost);\r\n        this.map[y][x].building = building;\r\n        this.map[y][x].building.increaseCosts();\r\n        this._addBuilding(this.map[y][x]);\r\n        this._calculateTileBonuses();\r\n        this._onTileChanged(this.map[y][x]);\r\n    }\r\n    upgradeBuilding(x, y) {\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().spendResource(this.map[y][x].building.resourceCosts, Math.min(7, this.regionLevel));\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().addGold(-this.map[y][x].building.goldCost);\r\n        this._removeBuilding(this.map[y][x]);\r\n        this.map[y][x].building.tier += 1;\r\n        this.map[y][x].building.increaseCosts();\r\n        this._addBuilding(this.map[y][x]);\r\n        this._calculateTileBonuses();\r\n        this._onTileChanged(this.map[y][x]);\r\n    }\r\n    destroyBuilding(x, y) {\r\n        this._removeBuilding(this.map[y][x]);\r\n        this.map[y][x].building = undefined;\r\n        this._calculateTileBonuses();\r\n        this._onTileChanged(this.map[y][x]);\r\n    }\r\n\r\n    update(delta) {\r\n    }\r\n\r\n    _getResourcesPerDay() {\r\n        var resource = [];\r\n        for (var i = 0; i < this.resourcesPerDay.length; i++) {\r\n            resource.push(Math.max(0, this.resourcesPerDay[i] * this.townData.getProductionMulti()));\r\n        }\r\n        resource[0] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.wood;\r\n        resource[1] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.leather;\r\n        resource[2] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.metal;\r\n        resource[3] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.fiber;\r\n        resource[4] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.stone;\r\n        resource[5] *= _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().dungeonBonus.crystal;\r\n        return resource;\r\n    }\r\n\r\n    _tryUpgradeList(list) {\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (this._canUpgrade(this.map[list[i][0]][list[i][1]])) {\r\n                this.upgradeBuilding(list[i][1], list[i][0]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateDay() {\r\n        this.townData.endOfDay();\r\n        var player = new _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"]();\r\n\r\n        //add resources from buildings here\r\n        var resource = this._getResourcesPerDay();\r\n        player.addResource(resource, this.resourceTier);\r\n\r\n        // calculate alchemy production here, first drain resources, and then give proportional resources of next tier\r\n        // If there are not enough resources to drain, production is scaled proportionally across all alchemy labs\r\n        if (this.alchemyDrain > 0) {\r\n            var resource = [];\r\n            for (var i = 0; i < player.resources[this.resourceTier].length; i++) {\r\n                resource.push(Math.min(this.alchemyDrain, player.resources[this.resourceTier][i]));\r\n            }\r\n            player.spendResource(resource, this.resourceTier);\r\n            for (var i = 0; i < player.resources[this.resourceTier].length; i++) {\r\n                resource[i] = (resource[i] / this.alchemyDrain) * this.alchemyGain;\r\n            }\r\n            player.addResource(resource, Math.min(this.resourceTier + 1, 7));\r\n        }\r\n        // markets exchange resources, subtracting resources proportional to their amount and adding\r\n        // resources evenly distributed\r\n        if (this.exchangePower > 0) {\r\n            var pow = this.exchangePower * this.townData.getProductionMulti();\r\n            var exchange = [0, 0, 0, 0, 0, 0];\r\n            var exchangeTotal = 0;\r\n            var resources = player.resources[this.resourceTier];\r\n            var resSum = resources.reduce((a, b) => { return a + b });\r\n            if (resSum > 0) {\r\n                // subtract resources based on the normalization values\r\n                for (var i = 0; i < resources.length; i++) {\r\n                    exchange[i] = -Math.min(pow * resources[i] / resSum, resources[i]);\r\n                    exchangeTotal += -exchange[i];\r\n                }\r\n                // add resources based on the inverse norm (1 - norm)\r\n                for (var i = 0; i < resources.length; i++) {\r\n                    exchange[i] += exchangeTotal / 6;\r\n                }\r\n                player.addResource(exchange, this.resourceTier);\r\n            }\r\n        }\r\n\r\n        if (this.invasions.length > 0) {\r\n            var challengeMulti = 1 / (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.invasion.completions * 0.2);\r\n            for (var i = 0; i < this.invasions.length; i++) {\r\n                var defMulti = Math.sqrt(this.map[this.invasions[i][0]][this.invasions[i][1]].difficulty + 1) /\r\n                    Math.sqrt(this.map[this.invasions[i][0]][this.invasions[i][1]].defense + 1);\r\n                this.invasionCounter += _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].INVASION_STRENGTH_PER_TILE * defMulti * challengeMulti *\r\n                    (1 / (1 + _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().getTalentLevel(\"townguard\") * 0.1));\r\n            }\r\n            this.invasionCounter += this.invasions.length * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].INVASION_STRENGTH_PER_TILE;\r\n            if (this.invasionCounter > this.invasionCounterMax) {\r\n                this.invasionStrength += 1;\r\n                this.invasionCounter -= this.invasionCounterMax;\r\n                this.invasionCounterMax = this.invasionCounterMax * _data_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].INVASION_STRENGTH_MULTI;\r\n            }\r\n            this.invasionTimer -= 1;\r\n            if (this.invasionTimer <= 0) {\r\n                var newInvasions = [];\r\n                for (var i = 0; i < this.invasions.length; i++) {\r\n                    newInvasions = this._expandInvasion(this.invasions[i], newInvasions);\r\n                }\r\n                for (var i = 0; i < newInvasions.length; i++) {\r\n                    if (this.invasions.length >= this.tilesExplored * 0.75) {\r\n                        break;\r\n                    }\r\n                    if (this.map[newInvasions[i][0]][newInvasions[i][1]].isInvaded === false &&\r\n                        this.map[newInvasions[i][0]][newInvasions[i][1]].regName != \"town\" &&\r\n                        this.map[newInvasions[i][0]][newInvasions[i][1]].regName != \"mysticgate\") {\r\n                        this.map[newInvasions[i][0]][newInvasions[i][1]].invade();\r\n                        this.invasions.push(newInvasions[i]);\r\n                    }\r\n                }\r\n                this.invasionTimer = this.invasions.length * _DynamicSettings__WEBPACK_IMPORTED_MODULE_8__[\"DynamicSettings\"].getInstance().expandTimer;\r\n                this._calculateTileBonuses();\r\n            }\r\n        } else {\r\n            if (this.tilesExplored >= 11 && this.regionLevel === _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().invasionRegion) {\r\n                this.invasionTimer -= 1;\r\n                if (this.invasionTimer <= 0) {\r\n                    this._startInvasion();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.autoUpgrade === true) {\r\n            this._tryUpgradeList(this.productionBuildings);\r\n            this._tryUpgradeList(this.houses);\r\n            this._tryUpgradeList(this.markets);\r\n            this._tryUpgradeList(this.taverns);\r\n            this._tryUpgradeList(this.roads);\r\n            this._tryUpgradeList(this.warehouses);\r\n            this._tryUpgradeList(this.towers);\r\n        }\r\n    }\r\n\r\n    updateWeek() {\r\n        _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().addVillagerStats(this.villagerStatGain[0], this.villagerStatGain[1]);\r\n        _WorldData__WEBPACK_IMPORTED_MODULE_10__[\"WorldData\"].getInstance().addSoldiers(this.garrisonRefreshRate);\r\n        if (this.blueprint !== -1 && this.width === 11 && this.height === 13) {\r\n            var bp = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().blueprints[this.blueprint];\r\n            for (var y = 0; y < bp.map.length; y++) {\r\n                for (var x = 0; x < bp.map[y].length; x++) {\r\n                    if (bp.map[y][x] !== 0) {\r\n                        var bld;\r\n                        if (bp.map[y][x] === 'prod') {\r\n                            bld = _BuildingRegistry__WEBPACK_IMPORTED_MODULE_9__[\"BuildingRegistry\"].getBuildingByName(_RegionRegistry__WEBPACK_IMPORTED_MODULE_6__[\"RegionRegistry\"].TILE_TYPES[this.map[y][x].regName].preferredBuilding);\r\n                        } else {\r\n                            bld = _BuildingRegistry__WEBPACK_IMPORTED_MODULE_9__[\"BuildingRegistry\"].getBuildingByName(bp.map[y][x]);\r\n                        }\r\n                        if (this._canBuild(this.map[y][x], bld)) {\r\n                            this.placeBuilding(x, y, bld);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.townData.endOfWeek(this);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/Region.js?");

/***/ }),

/***/ "./src/data/RegionRegistry.js":
/*!************************************!*\
  !*** ./src/data/RegionRegistry.js ***!
  \************************************/
/*! exports provided: RegionRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionRegistry\", function() { return RegionRegistry; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\nvar RegionRegistry = {\r\n    TILE_TYPES: {\r\n        mountain: {\r\n            name: \"Mountains\",\r\n            enemies: [\"wolf\", \"bear\", \"goblin\", \"formation\"],\r\n            clr: [140, 110, 0],\r\n            explorationNeeded: 25000,\r\n            yields: [1.25, 0, 2.25, 0, 1.5, 1],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        },\r\n        drakemountain: {\r\n            name: \"Drake Mountains\",\r\n            enemies: [\"wolf\", \"bear\", \"goblin\", \"formation\", \"drake\"],\r\n            clr: [130, 30, 30],\r\n            explorationNeeded: 27500,\r\n            yields: [0, 0, 2.25, 0, 2.25, 1.5],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        },\r\n        forest: {\r\n            name: \"Forest\",\r\n            enemies: [\"wolf\", \"bear\", \"plant\", \"bloom\", \"slime\", \"goblin\"],\r\n            clr: [0, 160, 0],\r\n            explorationNeeded: 13000,\r\n            yields: [1.75, 1.25, 0, 1.5, 0, 0],\r\n            preferredBuilding: \"wood\",\r\n            buildable: true\r\n        },\r\n        wode: {\r\n            name: \"Wode\",\r\n            enemies: [\"wolf\", \"bear\", \"plant\", \"bloom\", \"slime\", \"elk\"],\r\n            clr: [0, 130, 30],\r\n            explorationNeeded: 16000,\r\n            yields: [2.25, 1, 0, 1.5, 0, 0.6],\r\n            preferredBuilding: \"wood\",\r\n            buildable: true\r\n        },\r\n        ancientforest: {\r\n            name: \"Ancient Forest\",\r\n            enemies: [\"bear\", \"moss\", \"plant\", \"elk\", \"bloom\"],\r\n            clr: [0, 90, 0],\r\n            explorationNeeded: 20000,\r\n            yields: [2.5, 0, 0, 1.25, 1, 1],\r\n            preferredBuilding: \"wood\",\r\n            buildable: true\r\n        },\r\n        plains: {\r\n            name: \"Plains\",\r\n            enemies: [\"slime\", \"goblin\", \"lizard\", \"bloom\"],\r\n            clr: [20, 220, 20],\r\n            explorationNeeded: 9000,\r\n            yields: [0.9, 2.5, 0, 1.25, 0.75, 0],\r\n            preferredBuilding: \"leather\",\r\n            buildable: true\r\n        },\r\n        savanna: {\r\n            name: \"Savanna\",\r\n            enemies: [\"gnoll\", \"lion\", \"coyote\", \"lizard\", \"bloom\"],\r\n            clr: [190, 190, 60],\r\n            explorationNeeded: 13000,\r\n            yields: [0.75, 1.5, 0, 2, 1.25, 0],\r\n            preferredBuilding: \"fiber\",\r\n            buildable: true\r\n        },\r\n        desert: {\r\n            name: \"Desert\",\r\n            enemies: [\"formation\", \"coyote\", \"slime\", \"cactus\"],\r\n            clr: [220, 190, 140],\r\n            explorationNeeded: 12000,\r\n            yields: [0.75, 0, 0, 0, 1.75, 2],\r\n            preferredBuilding: \"crystal\",\r\n            buildable: true\r\n        },\r\n        hills: {\r\n            name: \"Hills\",\r\n            enemies: [\"slime\", \"goblin\", \"lizard\", \"bloom\", \"formation\"],\r\n            clr: [130, 190, 50],\r\n            explorationNeeded: 11000,\r\n            yields: [0, 1, 0, 0, 2.75, 0.75],\r\n            preferredBuilding: \"stone\",\r\n            buildable: true\r\n        },\r\n        plateau: {\r\n            name: \"Plateau\",\r\n            enemies: [\"elk\", \"goblin\", \"lizard\", \"cactus\", \"wolf\"],\r\n            clr: [200, 120, 40],\r\n            explorationNeeded: 15000,\r\n            yields: [0, 3, 1, 0.75, 2, 0],\r\n            preferredBuilding: \"leather\",\r\n            buildable: true\r\n        },\r\n        lake: {\r\n            name: \"Lake\",\r\n            enemies: [\"whale\", \"slime\", \"bear\", \"fish\"],\r\n            clr: [20, 40, 170],\r\n            explorationNeeded: 19000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        },\r\n        oasis: {\r\n            name: \"Oasis\",\r\n            enemies: [\"catfish\", \"fish\", \"coyote\", \"cactus\"],\r\n            clr: [0, 140, 190],\r\n            explorationNeeded: 15000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        },\r\n        swamp: {\r\n            name: \"Swamp\",\r\n            enemies: [\"lizard\", \"slime\", \"goblin\", \"bloom\"],\r\n            clr: [0, 110, 90],\r\n            explorationNeeded: 19000,\r\n            yields: [1, 1.5, 0, 2.25, 0, 0.7],\r\n            preferredBuilding: \"fiber\",\r\n            buildable: true\r\n        },\r\n        town: {\r\n            name: \"Town\",\r\n            enemies: [\"wolf\"],\r\n            clr: [230, 230, 230],\r\n            explorationNeeded: 10,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        mysticgate: {\r\n            name: \"Mystic Gate\",\r\n            enemies: [\"gateguardian\"],\r\n            clr: [153, 50, 204],\r\n            explorationNeeded: 30000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        crypt: {\r\n            name: \"Ancient Crypt\",\r\n            enemies: [\"lizard\", \"goblin\", \"slime\", \"drake\"],\r\n            clr: [255, 225, 90],\r\n            explorationNeeded: 30000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        starfield: {\r\n            name: \"Star Field\",\r\n            enemies: [\"star1\", \"star2\", \"star3\"],\r\n            clr: [240, 240, 150],\r\n            explorationNeeded: 25000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        starfield2: {\r\n            name: \"Star Field\",\r\n            enemies: [\"star1\", \"star2\", \"star3\"],\r\n            clr: [160, 200, 250],\r\n            explorationNeeded: 25000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        starfield3: {\r\n            name: \"Star Field\",\r\n            enemies: [\"star1\", \"star2\", \"star3\"],\r\n            clr: [240, 170, 130],\r\n            explorationNeeded: 25000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        void: {\r\n            name: \"Void\",\r\n            enemies: [\"void\"],\r\n            clr: [46, 47, 75],\r\n            explorationNeeded: 600000,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        starpalace: {\r\n            name: \"Starlight Palace\",\r\n            enemies: [\"myrah\"],\r\n            clr: [235, 134, 181],\r\n            explorationNeeded: 10,\r\n            yields: [0, 0, 0, 0, 0, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: false\r\n        },\r\n        mtdoom: {\r\n            name: \"Doom Mountain\",\r\n            enemies: [\"cultist\"],\r\n            clr: [133, 105, 255],\r\n            explorationNeeded: 50000,\r\n            yields: [0, 0, 2, 0, 0, 2],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        },\r\n        doomhill: {\r\n            name: \"Cultist Foothills\",\r\n            enemies: [\"cultist\", \"slime\", \"goblin\", \"formation\"],\r\n            clr: [80, 60, 150],\r\n            explorationNeeded: 40000,\r\n            yields: [0, 0, 2, 0, 2, 0],\r\n            preferredBuilding: \"metal\",\r\n            buildable: true\r\n        }\r\n    },\r\n    REGION_TYPES: {\r\n        temperate: {\r\n            name: \"Temperate\",\r\n            points: [\r\n                { terrain: \"mountain\", power: [7, 12], amount: 2 },\r\n                { terrain: \"mountain\", power: [3, 7], amount: 3 },\r\n                { terrain: \"forest\", power: [6, 11], amount: 2 },\r\n                { terrain: \"forest\", power: [4, 9], amount: 1 },\r\n                { terrain: \"wode\", power: [5, 10], amount: 2 },\r\n                { terrain: \"wode\", power: [3, 8], amount: 2 },\r\n                { terrain: \"plains\", power: [4, 9], amount: 5 },\r\n                { terrain: \"lake\", power: [4, 9], amount: 3 },\r\n                { terrain: \"swamp\", power: [3, 8], amount: 2 },\r\n                { terrain: \"swamp\", power: [5, 10], amount: 1 },\r\n                { terrain: \"hills\", power: [3, 8], amount: 5 }\r\n            ]\r\n        },\r\n        // stone/metal\r\n        mountains: {\r\n            name: \"Mountains\",\r\n            points: [\r\n                { terrain: \"mountain\", power: [7, 12], amount: 3 },\r\n                { terrain: \"mountain\", power: [3, 7], amount: 4 },\r\n                { terrain: \"forest\", power: [4, 9], amount: 3 },\r\n                { terrain: \"wode\", power: [5, 10], amount: 2 },\r\n                { terrain: \"wode\", power: [3, 6], amount: 4 },\r\n                { terrain: \"plateau\", power: [3, 7], amount: 4 },\r\n                { terrain: \"lake\", power: [4, 9], amount: 3 },\r\n                { terrain: \"hills\", power: [3, 8], amount: 4 },\r\n                { terrain: \"drakemountain\", power: [5, 8], amount: 3 }\r\n            ]\r\n        },\r\n        // crystal/stone\r\n        desert: {\r\n            name: \"Desert\",\r\n            points: [\r\n                { terrain: \"mountain\", power: [3, 6], amount: 4 },\r\n                { terrain: \"forest\", power: [3, 5], amount: 4 },\r\n                { terrain: \"plateau\", power: [3, 6], amount: 3 },\r\n                { terrain: \"oasis\", power: [3, 5], amount: 3 },\r\n                { terrain: \"hills\", power: [3, 6], amount: 3 },\r\n                { terrain: \"savanna\", power: [3, 5], amount: 5 },\r\n                { terrain: \"desert\", power: [7, 10], amount: 5 }\r\n            ]\r\n        },\r\n        // wood/fiber\r\n        forest: {\r\n            name: \"Forest\",\r\n            points: [\r\n                { terrain: \"mountain\", power: [7, 12], amount: 2 },\r\n                { terrain: \"forest\", power: [6, 9], amount: 4 },\r\n                { terrain: \"wode\", power: [5, 8], amount: 3 },\r\n                { terrain: \"plains\", power: [4, 6], amount: 2 },\r\n                { terrain: \"ancientforest\", power: [5, 7], amount: 4 },\r\n                { terrain: \"lake\", power: [8, 11], amount: 2 },\r\n                { terrain: \"swamp\", power: [4, 9], amount: 3 },\r\n                { terrain: \"hills\", power: [3, 8], amount: 2 }\r\n            ]\r\n        },\r\n        //leather/fiber?\r\n        hills: {\r\n            name: \"Hills\",\r\n            points: [\r\n                { terrain: \"mountain\", power: [4, 7], amount: 1 },\r\n                { terrain: \"forest\", power: [3, 6], amount: 3 },\r\n                { terrain: \"plateau\", power: [3, 7], amount: 4 },\r\n                { terrain: \"plains\", power: [4, 6], amount: 3 },\r\n                { terrain: \"lake\", power: [6, 8], amount: 2 },\r\n                { terrain: \"savanna\", power: [3, 5], amount: 3 },\r\n                { terrain: \"hills\", power: [4, 7], amount: 3 }\r\n            ]\r\n        },\r\n        void: {\r\n            name: \"Starlight Void\",\r\n            points: []\r\n        }\r\n    },\r\n    VOID_MAPS: [\r\n        [\r\n            [0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0],\r\n            [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\r\n            [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\r\n            [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0],\r\n            [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        ],\r\n        [\r\n            [0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],\r\n            [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n        ],\r\n        [\r\n            [0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1],\r\n            [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0],\r\n            [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n        ]\r\n    ]\r\n};\r\n\r\n\n\n//# sourceURL=webpack:///./src/data/RegionRegistry.js?");

/***/ }),

/***/ "./src/data/RitualData.js":
/*!********************************!*\
  !*** ./src/data/RitualData.js ***!
  \********************************/
/*! exports provided: RitualData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RitualData\", function() { return RitualData; });\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n\r\n\r\nclass RitualData {\r\n    constructor() {\r\n        if (!RitualData.instance) {\r\n            this.ritualCosts = [1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 250000, 50000];\r\n\r\n            this.moonlightBonus = 1;\r\n            this.starshardBonus = 1;\r\n            this.nextMoonlightBonus = 1;\r\n            this.nextStarshardBonus = 1;\r\n            this.ritualPoints = 0;\r\n\r\n            this.rituals = {\r\n                // Permanent Bonuses\r\n                permstr: {\r\n                    name: \"Empower Strength\", level: 0, pos: [72, 216], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 8 }\r\n                },\r\n                permdex: {\r\n                    name: \"Empower Dexterity\", level: 0, pos: [144, 216], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 9 }\r\n                },\r\n                permagi: {\r\n                    name: \"Empower Agility\", level: 0, pos: [216, 216], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 10 }\r\n                },\r\n                permend: {\r\n                    name: \"Empower Endurance\", level: 0, pos: [72, 288], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 11 }\r\n                },\r\n                permrec: {\r\n                    name: \"Empower Recovery\", level: 0, pos: [72, 360], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 12 }\r\n                },\r\n                permdef: {\r\n                    name: \"Empower Defense\", level: 0, pos: [216, 288], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 13 }\r\n                },\r\n                permacc: {\r\n                    name: \"Empower Accuracy\", level: 0, pos: [216, 360], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 14 }\r\n                },\r\n                permvp: {\r\n                    name: \"Cult Infiltrators\", level: 0, pos: [144, 360], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 7 }\r\n                },\r\n                permvh: {\r\n                    name: \"Cult Warders\", level: 0, pos: [144, 432], moonlight: 0, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 15 }\r\n                },\r\n\r\n                // Benefits for next run\r\n                playeroffense: {\r\n                    name: \"Corrupted Strength\", level: 0, pos: [336, 216], moonlight: -0.2, starshards: -0.1,\r\n                    texture: { sprite: \"icons2\", tile: 20 }\r\n                },\r\n                playerdefense: {\r\n                    name: \"Corrupted Endurance\", level: 0, pos: [408, 216], moonlight: -0.1, starshards: -0.2,\r\n                    texture: { sprite: \"icons2\", tile: 21 }\r\n                },\r\n                playercrits: {\r\n                    name: \"Corrupted Accuracy\", level: 0, pos: [480, 216], moonlight: -0.2, starshards: -0.1,\r\n                    texture: { sprite: \"icons2\", tile: 19 }\r\n                },\r\n                wildgrowth: {\r\n                    name: \"Wild Growth\", level: 0, pos: [336, 288], moonlight: -0.1, starshards: -0.25,\r\n                    texture: { sprite: \"icons2\", tile: 23 }\r\n                },\r\n                hatchlings: {\r\n                    name: \"Hatchlings\", level: 0, pos: [408, 288], moonlight: -0.15, starshards: -0.15,\r\n                    texture: { sprite: \"icons2\", tile: 24 }\r\n                },\r\n                offerings: {\r\n                    name: \"Vile Offering\", level: 0, pos: [480, 288], moonlight: -0.2, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 6 }\r\n                },\r\n                culttowns: {\r\n                    name: \"Cult Towns\", level: 0, pos: [408, 360], moonlight: -0.25, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 22 }\r\n                },\r\n\r\n                // Difficulty increases\r\n                ruinouspower: {\r\n                    name: \"Ruinous Powers\", level: 0, pos: [624, 216], moonlight: 0.15, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 25 }\r\n                },\r\n                betrayersgift: {\r\n                    name: \"Betrayer's Gift\", level: 0, pos: [720, 216], moonlight: 0, starshards: 0.18,\r\n                    texture: { sprite: \"icons\", tile: 42 }\r\n                },\r\n                callofthevoid: {\r\n                    name: \"Call of The Void\", level: 0, pos: [600, 288], moonlight: 0.05, starshards: 0.1,\r\n                    texture: { sprite: \"enemyicons\", tile: 19 }\r\n                },\r\n                desolation: {\r\n                    name: \"Desolation\", level: 0, pos: [744, 288], moonlight: 0.10, starshards: 0.18,\r\n                    texture: { sprite: \"icons2\", tile: 16 }\r\n                },\r\n                apathy: {\r\n                    name: \"Apathy\", level: 0, pos: [624, 360], moonlight: 0.125, starshards: 0,\r\n                    texture: { sprite: \"icons2\", tile: 26 }\r\n                },\r\n                vengeance: {\r\n                    name: \"Vengeance\", level: 0, pos: [720, 360], moonlight: 0, starshards: 0.2,\r\n                    texture: { sprite: \"icons\", tile: 45 }\r\n                },\r\n\r\n                // moonlight/star shard swapping\r\n                stargod: {\r\n                    name: \"Ritual of the Star Queen\", level: 0, pos: [672, 528], moonlight: -0.15, starshards: 0.15,\r\n                    texture: { sprite: \"icons2\", tile: 18 }\r\n                },\r\n                betrayer: {\r\n                    name: \"Ritual of the Betrayer Star\", level: 0, pos: [672, 600], moonlight: 0.1, starshards: -0.15,\r\n                    texture: { sprite: \"icons2\", tile: 17 }\r\n                },\r\n            }\r\n\r\n            this.activePerks = {}\r\n            for (const prop in this.rituals) {\r\n                this.activePerks[prop] = this.rituals[prop].level;\r\n            }\r\n\r\n            RitualData.instance = this;\r\n        }\r\n\r\n        return RitualData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!RitualData.instance) {\r\n            return new RitualData();\r\n        }\r\n        return RitualData.instance;\r\n    }\r\n\r\n    rebirth() {\r\n        this.activePerks = {};\r\n        this.moonlightBonus = this.nextMoonlightBonus;\r\n        this.starshardBonus = this.nextStarshardBonus;\r\n        this.nextMoonlightBonus = 1;\r\n        this.nextStarshardBonus = 1;\r\n        this.ritualPoints = 0;\r\n        this.ritualCosts = [1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 250000, 50000];\r\n\r\n        for (const prop in this.rituals) {\r\n            this.activePerks[prop] = this.rituals[prop].level;\r\n            this.rituals[prop].level = 0;\r\n        }\r\n    }\r\n\r\n    increaseSacCost(idx) {\r\n        this.ritualPoints += 1;\r\n        var multi = 13 - 0.5 * _StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().perks.mysticism.level;\r\n        this.ritualCosts[idx] = this.ritualCosts[idx] * multi;\r\n    }\r\n\r\n    // calculates moonlight/starshard changes for next run\r\n    calculateModifiers() {\r\n        this.nextMoonlightBonus = 1;\r\n        this.nextStarshardBonus = 1;\r\n        for (const prop in this.rituals) {\r\n            var ritual = this.rituals[prop];\r\n            if (ritual.level >= 1) {\r\n                this.nextMoonlightBonus *= ritual.moonlight > 0 ? 1 + (ritual.moonlight * ritual.level) :\r\n                    Math.pow(1 + ritual.moonlight, ritual.level);\r\n                this.nextStarshardBonus *= ritual.starshards > 0 ? 1 + (ritual.starshards * ritual.level) :\r\n                    Math.pow(1 + ritual.starshards, ritual.level);\r\n            }\r\n        }\r\n    }\r\n\r\n    save() {\r\n        var rituals = [];\r\n        for (const prop in this.rituals) {\r\n            rituals.push([prop, this.rituals[prop].level]);\r\n        }\r\n        var active = [];\r\n        for (const prop in this.activePerks) {\r\n            active.push([prop, this.activePerks[prop]]);\r\n        }\r\n        var saveObj = {\r\n            ml: this.moonlightBonus,\r\n            ss: this.starshardBonus,\r\n            nml: this.nextMoonlightBonus,\r\n            nss: this.nextStarshardBonus,\r\n            rp: this.ritualPoints,\r\n            rc: this.ritualCosts,\r\n            r: rituals,\r\n            ap: active\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, __ver) {\r\n        this.moonlightBonus = saveObj.ml;\r\n        this.starshardBonus = saveObj.ss;\r\n        this.nextMoonlightBonus = saveObj.nml;\r\n        this.nextStarshardBonus = saveObj.nss;\r\n        this.ritualPoints = saveObj.rp;\r\n        this.ritualCosts = saveObj.rc;\r\n        for (var i = 0; i < saveObj.r.length; i++) {\r\n            if (this.rituals[saveObj.r[i][0]] !== undefined) {\r\n                this.rituals[saveObj.r[i][0]].level = saveObj.r[i][1];\r\n            }\r\n        }\r\n        for (var i = 0; i < saveObj.ap.length; i++) {\r\n            if (this.activePerks[saveObj.ap[i][0]] !== undefined) {\r\n                this.activePerks[saveObj.ap[i][0]] = saveObj.ap[i][1];\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/RitualData.js?");

/***/ }),

/***/ "./src/data/RuneRegistry.js":
/*!**********************************!*\
  !*** ./src/data/RuneRegistry.js ***!
  \**********************************/
/*! exports provided: RuneRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RuneRegistry\", function() { return RuneRegistry; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n\r\n\r\n\r\nvar RuneWords = {\r\n    Tyr: {\r\n        dropRate: 30,\r\n        transmutes: [\"Vel\", \"Eid\", \"Ryn\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                weaponPercent: 0.04 * level\r\n            };\r\n        },\r\n        Eld: {\r\n            Tak: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        strTalents: level,\r\n                        strPercent: 0.05 * level,\r\n                        weaponPercent: 0.05 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Vel: {\r\n        dropRate: 30,\r\n        transmutes: [\"El\", \"Tyr\", \"Run\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                evaPercent: 0.04 * level\r\n            };\r\n        },\r\n    },\r\n    El: {\r\n        dropRate: 30,\r\n        transmutes: [\"Vel\", \"Ley\", \"Rath\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                hitPercent: 0.04 * level\r\n            };\r\n        },\r\n        Run: {\r\n            Est: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        dexTalents: level,\r\n                        dexPercent: 0.05 * level,\r\n                        baseAttackSpeed: 0.05 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Ley: {\r\n        dropRate: 30,\r\n        transmutes: [\"El\", \"Kor\", \"Eld\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                regenPercent: 0.04 * level\r\n            };\r\n        },\r\n        Eld: {\r\n            Quil: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        recTalents: level,\r\n                        recPercent: 0.05 * level,\r\n                        OOCRegen: 7 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Kor: {\r\n        dropRate: 30,\r\n        transmutes: [\"Ley\", \"Ber\", \"Chel\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                armorPercent: 0.05 * level\r\n            };\r\n        }\r\n    },\r\n    Sok: {\r\n        dropRate: 30,\r\n        transmutes: [\"Ber\", \"Eid\", \"Myr\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                critPercent: 0.05 * level\r\n            };\r\n        },\r\n        Ryn: {\r\n            Zel: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        accTalents: level,\r\n                        accPercent: 0.05 * level,\r\n                        critChance: 0.05 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Ber: {\r\n        dropRate: 30,\r\n        transmutes: [\"Kor\", \"Sok\", \"Mal\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                healthPercent: 0.03 * level\r\n            };\r\n        },\r\n        Eld: {\r\n            Urd: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        endTalents: level,\r\n                        endPercent: 0.05 * level,\r\n                        healthPercent: 0.1 * level\r\n                    };\r\n                }\r\n            }\r\n        },\r\n        Zel: {\r\n            Kor: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        healthPercent: 0.12 * level,\r\n                        critChance: 0.04 * level\r\n                    };\r\n                }\r\n            }\r\n        },\r\n        Ryn: {\r\n            Zel: {\r\n                Sok: {\r\n                    getBonus: (level) => {\r\n                        return {\r\n                            enemyCrit: level,\r\n                            endPercent: 0.05 * level,\r\n                            accPercent: 0.05 * level\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Eid: {\r\n        dropRate: 30,\r\n        transmutes: [\"Sok\", \"Tyr\", \"Gith\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                exploreSpeed: 0.15 * level\r\n            };\r\n        },\r\n        Eld: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    friendshipMulti: 0.4 * level\r\n                };\r\n            }\r\n        }\r\n    },\r\n    Ryn: {\r\n        dropRate: 15,\r\n        transmutes: [\"Run\", \"Gith\", \"Tak\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                critChance: 0.04 * level\r\n            };\r\n        }\r\n    },\r\n    Eld: {\r\n        dropRate: 15,\r\n        transmutes: [\"Rath\", \"Chel\", \"Urd\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                lootFlat: 0.5 * level\r\n            };\r\n        },\r\n        Rath: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    moteChance: 0.005 * level\r\n                };\r\n            }\r\n        },\r\n        Ryn: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    lootTalent: 5 * level\r\n                };\r\n            }\r\n        }\r\n    },\r\n    Rath: {\r\n        dropRate: 15,\r\n        transmutes: [\"Eld\", \"Run\", \"Lem\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                shadeFlat: level * (10 + (10 * level)) / 2\r\n            };\r\n        }\r\n    },\r\n    Run: {\r\n        dropRate: 15,\r\n        transmutes: [\"Rath\", \"Ryn\", \"Est\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                baseAttackSpeed: 0.05 * level\r\n            };\r\n        }\r\n    },\r\n    Chel: {\r\n        dropRate: 15,\r\n        transmutes: [\"Eld\", \"Mal\", \"Lah\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                dexToStr: 0.01 * level\r\n            };\r\n        },\r\n        Mal: {\r\n            Myr: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        allPercent: 0.03 * level\r\n                    };\r\n                }\r\n            }\r\n        },\r\n        Rath: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    governanceTalent: 2 * level\r\n                };\r\n            }\r\n        }\r\n    },\r\n    Mal: {\r\n        dropRate: 15,\r\n        transmutes: [\"Chel\", \"Myr\", \"Quil\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                endToRec: 0.01 * level\r\n            };\r\n        },\r\n        Eid: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    agilityScaling: 0.005 * level\r\n                };\r\n            }\r\n        },\r\n        Rath: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    charismaTalent: 2 * level\r\n                };\r\n            }\r\n        }\r\n    },\r\n    Myr: {\r\n        dropRate: 15,\r\n        transmutes: [\"Mal\", \"Gith\", \"Zel\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                agiToDef: 0.01 * level\r\n            };\r\n        },\r\n        Eid: {\r\n            getBonus: (level) => {\r\n                return {\r\n                    guardianTalent: 2 * level\r\n                };\r\n            }\r\n        }\r\n    },\r\n    Tak: {\r\n        dropRate: 50,\r\n        transmutes: [\"Est\", \"Gol\", \"Tyr\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                strFlat: Math.pow(level, 2) * 25\r\n            };\r\n        }\r\n    },\r\n    Est: {\r\n        dropRate: 50,\r\n        transmutes: [\"Lem\", \"Tak\", \"Vel\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                dexFlat: Math.pow(level, 2) * 25\r\n            };\r\n        }\r\n    },\r\n    Lem: {\r\n        dropRate: 50,\r\n        transmutes: [\"Urd\", \"Est\", \"El\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                agiFlat: Math.pow(level, 2) * 25\r\n            };\r\n        },\r\n        Run: {\r\n            Vel: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        agiTalents: level,\r\n                        agiPercent: 0.05 * level,\r\n                        evaPercent: 0.1 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Urd: {\r\n        dropRate: 50,\r\n        transmutes: [\"Lah\", \"Lem\", \"Ley\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                endFlat: Math.pow(level, 2) * 25\r\n            };\r\n        }\r\n    },\r\n    Lah: {\r\n        dropRate: 50,\r\n        transmutes: [\"Urd\", \"Quil\", \"Kor\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                defFlat: Math.pow(level, 2) * 25\r\n            };\r\n        },\r\n        Eld: {\r\n            Kor: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        defTalents: level,\r\n                        defPercent: 0.05 * level,\r\n                        armorPercent: 0.05 * level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Quil: {\r\n        dropRate: 50,\r\n        transmutes: [\"Lah\", \"Zel\", \"Ber\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                recFlat: Math.pow(level, 2) * 25\r\n            };\r\n        },\r\n        Ley: {\r\n            Lah: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        regenOnKill: level\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Zel: {\r\n        dropRate: 50,\r\n        transmutes: [\"Quil\", \"Gol\", \"Sok\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                accFlat: Math.pow(level, 2) * 25\r\n            };\r\n        },\r\n        Ryn: {\r\n            Run: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        chromaTalent: 2 * level,\r\n                        defToShield: level / 10\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Gol: {\r\n        dropRate: 50,\r\n        transmutes: [\"Zel\", \"Tak\", \"Eid\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                goldFlat: 0.5 * level\r\n            };\r\n        },\r\n        Rath: {\r\n            Ley: {\r\n                getBonus: (level) => {\r\n                    return {\r\n                        goldMulti: level * 0.1,\r\n                        resourceMulti: level * 0.1,\r\n                        shadeMulti: level * 0.02\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Gith: {\r\n        dropRate: 15,\r\n        transmutes: [\"Ryn\", \"Myr\", \"Gol\"],\r\n        getBonus: (level) => {\r\n            return {\r\n                gearScaling: level * 0.01\r\n            };\r\n        },\r\n        Sok: {\r\n            Mal: {\r\n                Myr: {\r\n                    getBonus: (level) => {\r\n                        return {\r\n                            baseTalents: level\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nclass RuneRegistry {\r\n    static getRuneTexture(rune) {\r\n        switch (rune) {\r\n            case \"Tyr\":\r\n                return { sprite: \"runeicons\", tile: 1 };\r\n            case \"Vel\":\r\n                return { sprite: \"runeicons\", tile: 2 };\r\n            case \"El\":\r\n                return { sprite: \"runeicons\", tile: 3 };\r\n            case \"Ley\":\r\n                return { sprite: \"runeicons\", tile: 4 };\r\n            case \"Kor\":\r\n                return { sprite: \"runeicons\", tile: 5 };\r\n            case \"Sok\":\r\n                return { sprite: \"runeicons\", tile: 6 };\r\n            case \"Ber\":\r\n                return { sprite: \"runeicons\", tile: 7 };\r\n            case \"Eid\":\r\n                return { sprite: \"runeicons\", tile: 8 };\r\n            case \"Ryn\":\r\n                return { sprite: \"runeicons\", tile: 9 };\r\n            case \"Eld\":\r\n                return { sprite: \"runeicons\", tile: 10 };\r\n            case \"Rath\":\r\n                return { sprite: \"runeicons\", tile: 11 };\r\n            case \"Run\":\r\n                return { sprite: \"runeicons\", tile: 12 };\r\n            case \"Tak\":\r\n                return { sprite: \"runeicons\", tile: 13 };\r\n            case \"Est\":\r\n                return { sprite: \"runeicons\", tile: 14 };\r\n            case \"Lem\":\r\n                return { sprite: \"runeicons\", tile: 15 };\r\n            case \"Urd\":\r\n                return { sprite: \"runeicons\", tile: 16 };\r\n            case \"Lah\":\r\n                return { sprite: \"runeicons\", tile: 17 };\r\n            case \"Quil\":\r\n                return { sprite: \"runeicons\", tile: 18 };\r\n            case \"Zel\":\r\n                return { sprite: \"runeicons\", tile: 19 };\r\n            case \"Chel\":\r\n                return { sprite: \"runeicons\", tile: 20 };\r\n            case \"Mal\":\r\n                return { sprite: \"runeicons\", tile: 21 };\r\n            case \"Myr\":\r\n                return { sprite: \"runeicons\", tile: 22 };\r\n            case \"Gol\":\r\n                return { sprite: \"runeicons\", tile: 24 };\r\n            case \"Gith\":\r\n                return { sprite: \"runeicons\", tile: 25 };\r\n        }\r\n        return { sprite: \"runeicons\", tile: 0 };\r\n    }\r\n\r\n    static getRuneTransmutes(word) {\r\n        return RuneWords[word].transmutes;\r\n    }\r\n\r\n    static getTransmutedRune(rune, index) {\r\n        if (RuneWords[rune.word] !== undefined) {\r\n            return { word: RuneWords[rune.word].transmutes[index], level: rune.level };\r\n        }\r\n        return rune;\r\n    }\r\n\r\n    static getBonusForRune(rune) {\r\n        if (RuneWords[rune.word] !== undefined && RuneWords[rune.word].getBonus !== undefined) {\r\n            return RuneWords[rune.word].getBonus(rune.level);\r\n        }\r\n        return {};\r\n    }\r\n\r\n    static getUpgradeCost(rune) {\r\n        return Math.round((100 + (Math.floor(Math.pow(rune.level - 1, 1.85)) * 250)) *\r\n            Math.pow(0.93, _MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().moonperks.runes3.level));\r\n    }\r\n\r\n    static getSellCost(rune) {\r\n        return Math.round((100 + (Math.floor(Math.pow(rune.level - 1, 1.85)) * 250)) * 0.2);\r\n    }\r\n\r\n    static getRandomRuneAtLevel(level) {\r\n        var drop = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].randint(0, 670);\r\n        for (const prop in RuneWords) {\r\n            if (drop <= RuneWords[prop].dropRate) {\r\n                return { word: prop, level: level };\r\n            }\r\n            drop -= RuneWords[prop].dropRate;\r\n        }\r\n        return { word: \"Tak\", level: level };\r\n    }\r\n\r\n    static getRuneWordsAndBonuses(runeList) {\r\n        var runewordList = [];\r\n        var idx = 0;\r\n\r\n        while (idx < runeList.length) {\r\n            var farthest = -1;\r\n            var tempList = RuneWords;\r\n            var bonusFunc = undefined;\r\n            for (var i = idx; i < runeList.length; i++) {\r\n                if (tempList[runeList[i].word] !== undefined) {\r\n                    if (tempList[runeList[i].word].getBonus !== undefined) {\r\n                        farthest = i;\r\n                        bonusFunc = tempList[runeList[i].word].getBonus;\r\n                    }\r\n                    tempList = tempList[runeList[i].word];\r\n                    continue;\r\n                }\r\n                break;\r\n            }\r\n\r\n            if (farthest !== -1) {\r\n                var newWord = \"\";\r\n                var level = 0;\r\n                for (var i = idx; i <= farthest; i++) {\r\n                    newWord += runeList[i].word;\r\n                    level += runeList[i].level;\r\n                }\r\n                level = Math.floor(level / ((farthest - idx) + 1));\r\n                runewordList.push({\r\n                    word: newWord,\r\n                    level: level,\r\n                    bonus: bonusFunc(level)\r\n                })\r\n                idx = farthest + 1;\r\n            } else {\r\n                idx += 1;\r\n            }\r\n        }\r\n        return runewordList;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/RuneRegistry.js?");

/***/ }),

/***/ "./src/data/StarData.js":
/*!******************************!*\
  !*** ./src/data/StarData.js ***!
  \******************************/
/*! exports provided: StarData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StarData\", function() { return StarData; });\nclass StarData {\r\n    constructor() {\r\n        if (!StarData.instance) {\r\n            this.starShards = 0;\r\n\r\n            this.perks = {\r\n                // Astra's Marble: Stat bonus\r\n                str: {\r\n                    name: \"Astra's Marble: Strength\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 0 }\r\n                },\r\n                dex: {\r\n                    name: \"Astra's Marble: Dexterity\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 1 }\r\n                },\r\n                agi: {\r\n                    name: \"Astra's Marble: Agility\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 2 }\r\n                },\r\n                end: {\r\n                    name: \"Astra's Marble: Endurance\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 3 }\r\n                },\r\n                rec: {\r\n                    name: \"Astra's Marble: Recovery\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 4 }\r\n                },\r\n                def: {\r\n                    name: \"Astra's Marble: Defense\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 5 }\r\n                },\r\n                acc: {\r\n                    name: \"Astra's Marble: Accuracy\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.03],\r\n                    texture: { sprite: \"staricons\", tile: 6 }\r\n                },\r\n\r\n                // Ingram's Bell: stat costs\r\n                statcost: {\r\n                    name: \"Ingram's Bell: Infusion\", level: 0, maxLevel: 10, requires: [], cost: [3, 3, 1],\r\n                    texture: { sprite: \"staricons\", tile: 9 }\r\n                },\r\n                statpoints: {\r\n                    name: \"Ingram's Bell: Stat Points\", level: 0, maxLevel: -1, requires: [\"statcost\"], cost: [5, 5, 2],\r\n                    texture: { sprite: \"staricons\", tile: 9 }\r\n                },\r\n                bounty: { // increases resource drops\r\n                    name: \"Ingram's Bell: Bounty\", level: 0, maxLevel: -1, requires: [\"statcost\"], cost: [2, 2, 1.15],\r\n                    texture: { sprite: \"staricons\", tile: 9 }\r\n                },\r\n\r\n                // Myrah's Spear: item powers?\r\n                forge: {\r\n                    name: \"Myrah's Spear: Forge\", level: 0, maxLevel: 15, requires: [], cost: [2, 2, 1],\r\n                    texture: { sprite: \"staricons\", tile: 10 }\r\n                },\r\n                proficiency: { // gear scaling multiplied by x%\r\n                    name: \"Myrah's Spear: Proficiency\", level: 0, maxLevel: -1, requires: [\"forge\"], cost: [7, 7, 1.5],\r\n                    texture: { sprite: \"staricons\", tile: 10 }\r\n                },\r\n                stellar: { // % bonus to gear\r\n                    name: \"Myrah's Spear: Stellar Enchantments\", level: 0, maxLevel: -1, requires: [\"forge\"], cost: [10, 10, 1.66],\r\n                    texture: { sprite: \"staricons\", tile: 10 }\r\n                },\r\n                starmetal: { // once forged, gear starts at x level\r\n                    name: \"Myrah's Spear: Starmetal\", level: 0, maxLevel: 10, requires: [\"forge\"], cost: [5, 5, 1],\r\n                    texture: { sprite: \"staricons\", tile: 10 }\r\n                },\r\n\r\n                // Mask of Zymesh: invasions/ motes\r\n                invasionpower: {\r\n                    name: \"Mask of Zymesh: Invasion Power\", level: 0, maxLevel: -1, requires: [], cost: [3, 3, 1.66],\r\n                    texture: { sprite: \"staricons\", tile: 11 }\r\n                },\r\n                invasionrewards: {\r\n                    name: \"Mask of Zymesh: Invasion Rewards\", level: 0, maxLevel: -1, requires: [\"invasionpower\"], cost: [5, 5, 1.66],\r\n                    texture: { sprite: \"staricons\", tile: 11 }\r\n                },\r\n                solidification: {\r\n                    name: \"Mask of Zymesh: Solidification\", level: 0, maxLevel: -1, requires: [\"invasionpower\"], cost: [7, 7, 2],\r\n                    texture: { sprite: \"staricons\", tile: 11 }\r\n                },\r\n\r\n                // Kella's Horn: prod/resource upgrades\r\n                construction: { // unlocks tier 4\r\n                    name: \"Kella's Horn: Construction\", level: 0, maxLevel: 2, requires: [], cost: [25, 0, 100],\r\n                    texture: { sprite: \"staricons\", tile: 8 }\r\n                },\r\n                fertility: { // town growth speed\r\n                    name: \"Kella's Horn: Fertility\", level: 0, maxLevel: 12, requires: [\"construction\"], cost: [5, 5, 1],\r\n                    texture: { sprite: \"staricons\", tile: 8 }\r\n                },\r\n                tools: { // prod increased by x%\r\n                    name: \"Kella's Horn: Enchanted Tools\", level: 0, maxLevel: -1, requires: [\"fertility\"], cost: [5, 5, 1.15],\r\n                    texture: { sprite: \"staricons\", tile: 8 }\r\n                },\r\n                worldsmith: { // increases base resource tier by 1\r\n                    name: \"Kella's Horn: Worldsmith\", level: 0, maxLevel: 7, requires: [\"tools\"], cost: [20, 20, 1],\r\n                    texture: { sprite: \"staricons\", tile: 8 }\r\n                },\r\n                estate: { // house multi\r\n                    name: \"Kella's Horn: Estate\", level: 0, maxLevel: -1, requires: [\"worldsmith\"], cost: [15, 5, 2],\r\n                    texture: { sprite: \"staricons\", tile: 8 }\r\n                },\r\n\r\n                // Betrayer Star: ritual/shade/moonlight upgrades\r\n                mists: { // increase shade\r\n                    name: \"Betrayer Star: Mists\", level: 0, maxLevel: -1, requires: [], cost: [1, 1, 1.12],\r\n                    texture: { sprite: \"staricons\", tile: 12 }\r\n                },\r\n                knowledge: { // talents give +x base moonlight\r\n                    name: \"Betrayer Star: Forbidden Knowledge\", level: 0, maxLevel: -1, requires: [], cost: [20, 10, 1.5],\r\n                    texture: { sprite: \"staricons\", tile: 12 }\r\n                },\r\n                mysticism: { // ritual cost reduction\r\n                    name: \"Betrayer Star: Mysticism\", level: 0, maxLevel: 16, requires: [], cost: [25, 25, 1.2],\r\n                    texture: { sprite: \"staricons\", tile: 12 }\r\n                },\r\n            }\r\n            StarData.instance = this;\r\n        }\r\n\r\n        return StarData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!StarData.instance) {\r\n            return new StarData();\r\n        }\r\n        return StarData.instance;\r\n    }\r\n\r\n    _havePerkRequirements(perk) {\r\n        for (var i = 0; i < perk.requires.length; i++) {\r\n            if (this.perks[perk.requires[i]].level === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    levelUpPerk(perk) {\r\n        if (perk.level >= perk.maxLevel && perk.maxLevel !== -1) {\r\n            return;\r\n        }\r\n        var cost = Math.floor((perk.cost[0] + perk.cost[1] * (perk.level)) * Math.pow(perk.cost[2], perk.level));\r\n        if (this.starShards < cost || this._havePerkRequirements(perk) === false) {\r\n            return;\r\n        }\r\n        this.starShards -= cost;\r\n        perk.level += 1;\r\n    }\r\n\r\n    save() {\r\n        var perks = [];\r\n        for (const prop in this.perks) {\r\n            perks.push([prop, this.perks[prop].level]);\r\n        }\r\n        var saveObj = {\r\n            ss: this.starShards,\r\n            sp: perks,\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, __ver) {\r\n        this.starShards = saveObj.ss;\r\n        for (var i = 0; i < saveObj.sp.length; i++) {\r\n            if (this.perks[saveObj.sp[i][0]] !== undefined) {\r\n                this.perks[saveObj.sp[i][0]].level = saveObj.sp[i][1];\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/StarData.js?");

/***/ }),

/***/ "./src/data/Statics.js":
/*!*****************************!*\
  !*** ./src/data/Statics.js ***!
  \*****************************/
/*! exports provided: Statics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Statics\", function() { return Statics; });\nvar Statics = {\r\n    VERSION_NUMBER: 5,\r\n\r\n    //UNLOCK FEATURE TYPES\r\n    UNLOCK_GEAR_TAB: 100,\r\n    UNLOCK_EXPLORE_TAB: 101,\r\n    UNLOCK_COMBAT_TAB: 102,\r\n    UNLOCK_TOWN_TAB: 103,\r\n    UNLOCK_INFUSE_UI: 104,\r\n    UNLOCK_RESOURCE_UI: 105,\r\n    UNLOCK_CRAFTING_UI: 106,\r\n    UNLOCK_BUILDING_UI: 107,\r\n    UNLOCK_TALENTS_TAB: 108,\r\n    UNLOCK_WORLD_TAB: 109,\r\n    UNLOCK_MOTES_UI: 110,\r\n    UNLOCK_GENERIC: 111,\r\n    UNLOCK_RUNES_UI: 112,\r\n\r\n    //UNLOCK EVENT TYPES\r\n    UNLOCK_EXPLORE: 0,\r\n    UNLOCK_KILL: 1,\r\n    UNLOCK_SHADE: 2,\r\n    UNLOCK_RESOURCE: 3,\r\n    UNLOCK_STATPOINT: 4,\r\n    UNLOCK_DEATH: 5,\r\n    UNLOCK_BUILDINGS: 6,\r\n\r\n    //RESOURCES\r\n    RESOURCE_WOOD: 0,\r\n    RESOURCE_LEATHER: 1,\r\n    RESOURCE_METAL: 2,\r\n    RESOURCE_FIBER: 3,\r\n    RESOURCE_STONE: 4,\r\n    RESOURCE_CRYSTAL: 5,\r\n    RESOURCE_NAMES: [\"Wood\", \"Leather\", \"Metal\", \"Fiber\", \"Stone\", \"Crystal\"],\r\n\r\n    //GEAR TYPES\r\n    GEAR_WEAPON: 0,\r\n    GEAR_ARMOR: 1,\r\n    GEAR_TRINKET: 2,\r\n\r\n    //DAMAGE TYPES\r\n    DMG_NORMAL: 0,\r\n    DMG_MAGIC: 1,\r\n    DMG_TRUE: 2,\r\n\r\n    //RUNES\r\n    RUNESLOTS_PER_TIER: [0, 2, 2, 3, 3, 4, 4, 5, 6],\r\n\r\n    // STAT VARIABLES\r\n    ATTACK_SPEED_POWER: 0.66,\r\n    STRENGTH_DMG_MIN: 0.4,\r\n    STRENGTH_DMG_MAX: 1,\r\n    HIT_PER_DEXTERITY: 7,\r\n    EVA_PER_AGILITY: 7,\r\n    HP_PER_ENDURANCE: 5,\r\n    REGEN_PER_RECOVERY: 0.15,\r\n    ARMOR_PER_DEFENSE: 0.2,\r\n    CRITPOWER_PER_ACCURACY: 3,\r\n    CRITRESISTANCE_PER_ENDURANCE: 3,\r\n    AGI_EXPLORE_POWER: 0.44,\r\n    AGI_EXPLORE_MULTI: 0.03,\r\n\r\n    // CLASSES\r\n    CLASS_ADVENTURER: 0,\r\n    CLASS_BESERKER: 1,\r\n    CLASS_WIZARD: 2,\r\n\r\n    // GEAR VARIABLES\r\n    MOTE_BONUS: 0.0025,\r\n    MOTE_BASE_SOFT_CAP: 80,\r\n    MOTE_SOFT_CAP_POWER: 0.75,\r\n    SCALING_GEAR_MULTIPLIER: 2,\r\n    SCALING_GEAR_MULTIPLIER_2: 10,\r\n\r\n    MONSTER_STAT_PER_LEVEL: 1.15,\r\n    MONSTER_STATSCALE_PER_LEVEL: 1.0225,\r\n    MONSTER_STATSCALE_PER_REGION: 1.2,\r\n    MONSTER_STATSCALE_POST_MYRAH: 1.5,\r\n    MONSTER_XPSCALE_PER_REGION: 1.025,\r\n\r\n    // PLAYER SHADE VARIABLES\r\n    STAT_COST_BASE: 50,\r\n    STAT_COST_PER_LEVEL: 50,\r\n    STAT_POINTS_PER_BUY: 2,\r\n    TALENT_COST_BASE: 400,\r\n    TALENT_COST_POWER: 1.2,\r\n    SECONDWIND_COOLDOWN: 80000,\r\n    DODGE_COUNTER: 13,\r\n    DEFY_DEATH_COUNTER: 8,\r\n\r\n    // COMBAT\r\n    COMBAT_COOLDOWN: 2500,\r\n    GLOBAL_ATTACK_COOLDOWN: 100,\r\n    POISON_TICK_DELAY: 1000,\r\n\r\n    HIT_NORMAL: 0,\r\n    HIT_CRIT: 1,\r\n    HIT_GLANCING: 2,\r\n\r\n    // TOWN\r\n    BASE_TAX_INCOME: 0.5,\r\n    POPULATION_GROWTH: 0.03,\r\n    EXPLORE_MULTIPLIER: 0.09,\r\n    GOLDCAP_PER_POP: 10,\r\n    TRADE_HOUSE_MAX_DISTANCE: 4,\r\n    BUILDING_BASE_DEFENSE: 5,\r\n    RESEARCH_TIER_POWER: 1.55,\r\n    RESEARCH_LEVEL_POWER: 1.5,\r\n    DESTROY_BUILDING_COST: 50,\r\n    FRIENDSHIP_SHADE_BONUS: 0.05,\r\n    FRIENDSHIP_POWER: 1.8,\r\n    FRIENDSHIP_BASE: 25,\r\n    FRIENDSHIP_FLAT: 30,\r\n    DOCK_BASE_ECON: 4,\r\n    PRODUCTION_EFFICIENCY_MULT: 0.75,\r\n    DOCK_EFFICIENCY_MULT: 0.5,\r\n    TILE_YIELD_SHARING: 0.4,\r\n    ARMY_TAX_POWER: 0.98,\r\n\r\n    //TRAITS\r\n    TRAIT_DIRE: 0,\r\n    TRAIT_POISONED: 1,\r\n    TRAIT_MONSTROUS: 2,\r\n    TRAIT_QUICK: 3,\r\n    TRAIT_DEADLY: 4,\r\n    TRAIT_SHIELDED: 5,\r\n    TRAIT_BESERK: 6,\r\n    TRAIT_FIRSTSTRIKE: 7,\r\n    TRAIT_CORROSIVE: 8,\r\n    TRAIT_REGENERATING: 9,\r\n    TRAIT_THORNS: 10,\r\n    TRAIT_MAGICAL: 11,\r\n    TRAIT_INVADER: 99,\r\n\r\n    // INVASION\r\n    DAYS_BETWEEN_EXPANSION: 3,\r\n    DAYS_BETWEEN_INVASIONS: 15,\r\n    INVASION_STRENGTH_MULTI: 7.5,\r\n    INVASION_STRENGTH_REDUCTION: 75,\r\n    INVASION_STRENGTH_PER_TILE: 1.5,\r\n    POP_KILLED_PER_WEEK: 2,\r\n    INVASION_POWER_MULTI: 1.1,\r\n    INVASION_REWARD_MULTI: 1.15,\r\n\r\n    // STARSHARDS\r\n    BASE_STARSHARD_CHANCE: 0.00025,\r\n    STARSHARD_REGION_MULTI: 1,\r\n    STARSHARD_ENEMIES: [\"star1\", \"star2\", \"star3\"],\r\n\r\n    //EXPLORE\r\n    AUTOEXPLORE_WEAKEST: 0,\r\n    AUTOEXPLORE_HOLD: 1,\r\n    AUTOEXPLORE_STRONGEST: 2,\r\n\r\n    //UPGRADES\r\n    FORGE_REDUCTION: 0.95,\r\n    FORGE_DIMINISHING_POWER: 0.2,\r\n\r\n    //REBIRTH\r\n    MOONLIGHT_REGION_POWER: 1.5,\r\n\r\n    //TIME\r\n    MONTH_NAMES: [\"Primas\", \"Twin\", \"Threed\", \"Tera\", \"Pentas\", \"Hexat\", \"Septus\", \"Octor\", \"Novum\", \"Deccan\", \"Hendeka\", \"Dodecan\", \"Zenith\"],\r\n    TIME_PER_HOUR: 1000,\r\n    TIME_PER_DAY: 24000,\r\n    TIME_PER_MONTH: 672000,\r\n    TIME_PER_YEAR: 8736000,\r\n    HOURS_PER_DAY: 24,\r\n    DAYS_PER_MONTH: 28,\r\n    MONTHS_PER_YEAR: 13,\r\n    MAX_OFFLINE_TIME: 172800000,\r\n\r\n    //MISC\r\n    AUTOSAVE_TIMER: 60000,\r\n\r\n    //ROADS string LRUD\r\n    ROADTYPES: {\r\n        \"0001\": 0,\r\n        \"0010\": 1,\r\n        \"0011\": 2,\r\n        \"0100\": 3,\r\n        \"0101\": 4,\r\n        \"0110\": 5,\r\n        \"0111\": 6,\r\n        \"1000\": 7,\r\n        \"1001\": 8,\r\n        \"1010\": 9,\r\n        \"1011\": 10,\r\n        \"1100\": 11,\r\n        \"1101\": 12,\r\n        \"1110\": 13,\r\n        \"1111\": 14,\r\n    },\r\n\r\n    //DUNGEON REWARDS\r\n    DUNGEON: {\r\n        RESOURCES: 0,\r\n        SHADE: 1,\r\n        MOTES: 2,\r\n        GOLD: 3,\r\n        GEAR_LEVELS: 4,\r\n        RUNES: 5,\r\n        WOOD: 10,\r\n        LEATHER: 11,\r\n        METAL: 12,\r\n        FIBER: 13,\r\n        STONE: 14,\r\n        CRYSTAL: 15,\r\n        PRODUCTION: 16,\r\n        ECONOMY: 17,\r\n        STRENGTH: 20,\r\n        DEXTERITY: 21,\r\n        AGILITY: 22,\r\n        ENDURANCE: 23,\r\n        RECOVERY: 24,\r\n        DEFENSE: 25,\r\n        ACCURACY: 26,\r\n        MOONLIGHT: 27,\r\n        TALENTS: 28,\r\n        PERM_VPOWER: 29,\r\n        PERM_VHEALTH: 30,\r\n        STARSHARDS: 31,\r\n        RITUAL_POINTS: 32\r\n    }\r\n};\r\n\r\n\n\n//# sourceURL=webpack:///./src/data/Statics.js?");

/***/ }),

/***/ "./src/data/TooltipRegistry.js":
/*!*************************************!*\
  !*** ./src/data/TooltipRegistry.js ***!
  \*************************************/
/*! exports provided: TooltipRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TooltipRegistry\", function() { return TooltipRegistry; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _WorldTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WorldTime */ \"./src/data/WorldTime.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass TooltipRegistry {\r\n\r\n    static setDefaultNames() {\r\n        TooltipRegistry.critPowerName = \"Aim\";\r\n        TooltipRegistry.defenseName = \"Defense\";\r\n        TooltipRegistry.accuracyName = \"Accuracy\";\r\n    }\r\n\r\n    static setWizardNames() {\r\n        TooltipRegistry.critPowerName = \"Spell Power\";\r\n        TooltipRegistry.defenseName = \"Ward\";\r\n        TooltipRegistry.accuracyName = \"Power\";\r\n    }\r\n\r\n    static getTalentTooltip(talent, lvl) {\r\n        switch (talent.name) {\r\n            case \"Strength\":\r\n                return \"Each point of Strength increases your damage more. Increases Damage gained by Strength by \" +\r\n                    (lvl * 7) + \"% + (7%).\";\r\n            case \"Dexterity\":\r\n                return \"Each point of Dexterity gives more Hit. You gain \" + (7 + lvl) + \" + (1) Hit per Dexterity.\";\r\n            case \"Agility\":\r\n                return \"Each point of Agility gives more Evasion. You gain \" + (7 + lvl) + \" + (1) Evasion per Agility.\";\r\n            case \"Endurance\":\r\n                return \"Get more health from Endurance. You gain \" + (5 + lvl) + \" + (1) max Health per Endurance.\";\r\n            case \"Recovery\":\r\n                return \"Heal wounds as fast as you get them! Increases Health Regen from Recovery by \" + (lvl * 8) + \"% + (8%).\";\r\n            case \"Defense\":\r\n                return \"Get more armor from Defense. Increases Armor from Defense by \" + (lvl * 13) + \"% + (13%).\";\r\n            case \"Accuracy\":\r\n                return \"Crit even harder. You gain \" + (3 + lvl * 0.5) + \" + (0.5) Aim per Accuracy.\";\r\n            case \"Hit\":\r\n                return \"Gain even more Hit from all sources. Increase your Hit by \" + (lvl * 4) + \"% + (4%).\";\r\n            case \"Evasion\":\r\n                return \"Gain even more Evasion from all sources. Increase your Evasion by \" + (lvl * 4) + \"% + (4%).\";\r\n            case \"Critical\":\r\n                return \"Everyone loves to crit, so here is some free Crit Chance. Increase your Crit Chance by \" + (lvl * 3) + \"% + (3%).\";\r\n            case \"Bounty\":\r\n                return \"Somehow improves how much loot enemies drop. Increases your perception or something? Gain a \" +\r\n                    (lvl * 10) + \"% + (10%) chance for enemies to drop loot twice.\";\r\n            case \"Explorer\":\r\n                return \"If you want to explore fast you gotta go fast. Increases your explore speed by \" +\r\n                    (lvl * 20) + \"% + (20%).\";\r\n            case \"Cleave\":\r\n                return \"Hit everything super hard. You gain a 20% chance your attacks hit an additional target dealing \" +\r\n                    (lvl * 20) + \"% + (20%) of your Strength in damage\";\r\n            case \"Resilient\":\r\n                return \"Brush off critical attacks like they were merely normal attacks. When hit by a crit you reduce the damage by \" +\r\n                    (lvl * 5) + \"% + (5%) of your Endurance, to a minimum of 2.\";\r\n            case \"Quick Recovery\":\r\n                return \"All you need is a quick rest between fights and your good to go. Your Health Regen increases by \" +\r\n                    (lvl * 25) + \"% + (25%) while out of combat.\";\r\n            case \"Block\":\r\n                return \"Your mastery of defense allows you to sometimes block part of a hit, isn't that great? You have a 20% chance to block \" +\r\n                    (lvl * 25) + \" + (25%) of your Defense worth of damage.\";\r\n            case \"Stunning Hit\":\r\n                return \"Hit them so hard you leave them concussed, causing serious long term damage. Each attack has a \" +\r\n                    (lvl * 5) + \"% + (5%) chance to halt their attack bar for 0.5 seconds.\";\r\n            case \"Follow Through\":\r\n                return \"The best attacks are those that are immediately followed by more attacks. After attacking, gives a \" +\r\n                    (lvl * 5) + \"% + (5%) chance that your attack bar starts half full, or half empty if you prefer.\";\r\n            case \"Dodge\":\r\n                return \"All the Hit in the world can't touch you some of the time. You automatically dodge every \" +\r\n                    Math.max(3, 13 - lvl) + \" - (1) Attacks against you.\";\r\n            case \"Magic Resistance\":\r\n                return \"Your so strong you have a natural resistance to magic damage! Magic damage is reduced by \" +\r\n                    (100 - Math.round(Math.pow(0.96, lvl) * 100)) + \"% + (~4%).\";\r\n            case \"Second Wind\":\r\n                return \"All the best heroes are able to get right back to it after a beat down. When you drop below 50% health your \" +\r\n                    \"Health Regen is tripled for 10 seconds. Has a \" + (80 - lvl * 10) + \" - (10) second cooldown.\";\r\n            case \"Parry\":\r\n                return \"Why block when you can parry? gives a \" + (lvl * 5) + \"% + (5%) chance to parry an attack, reducing damage by \" +\r\n                    \"half. Thats still something, right?\";\r\n            case \"Serration\":\r\n                return \"Crit even harder by just ignoring the enemies toughness! Ignores \" + (100 - Math.round(Math.pow(0.96, lvl) * 100)) + \"% + (~4%) of the monsters toughness when \" +\r\n                    \"calculating Crit Damage.\";\r\n            case \"Guardian\":\r\n                return \"Invasions are too strong! If you spend some time patrolling you can probably divide Invasion Power by \" +\r\n                    (1 + lvl / 5) + \" + (0.2).\";\r\n            case \"Governance\":\r\n                return \"Spend less time fighting things and more time learning how they can fight for you! Increases economy and production by \" +\r\n                    (lvl * 4) + \"% + (4%). This effect is multiplicative, not additive.\";\r\n            case \"Loot Goblin\":\r\n                return \"Your desire for loot is so strong you've summoned the Loot Goblin! Each enemy has a \" +\r\n                    (lvl * 0.5) + \"% + (0.5%) chance to be a Loot Goblin, giving 10x the resources and shade.\";\r\n            case \"Bundle\":\r\n                return \"The villagers say they don't have anymore money to pay you a better bounty, so have these rocks instead! While \" +\r\n                    \"exploring you earn \" + (lvl * 2) + \"% + (2%) of the Towns daily production per kill.\";\r\n            case \"Charisma\":\r\n                return \"Your screams of terror while fighting the monsters has charmed the villagers. Gain \" +\r\n                    (lvl * 10) + \"% + (10%) more friendship from killing monsters.\";\r\n            case \"Town Guard\":\r\n                return \"Motivate the elderly to throw their bodies at enemy invasions! Invasions take \" +\r\n                    (lvl * 10) + \"% + (10%) longer to increase in strength.\";\r\n            // WIZARD TALENTS\r\n            case \"Cantrip\":\r\n                return \"Only one spell will cast per attack. Every attack you deal \" + (20 + lvl * 9) + \"% + (9%) of your spellpower in magic damage.\";\r\n            case \"First Level Spell\":\r\n                return \"Study the Arcane Arts! This talent must be maxed to cast Entangle. Gives a modest \" + (lvl) + \"% + (1%) to your max spellpower.\";\r\n            case \"Second Level Spell\":\r\n                return \"Study Elegant Enchantments! This talent must be maxed to cast Barrier. Gives a modest \" + (lvl) + \"% + (1%) to your max spellpower.\";\r\n            case \"Third Level Spell\":\r\n                return \"Study the Wizardly Ways! This talent must be maxed to cast Fireball. Gives a modest \" + (lvl) + \"% + (1%) to your max spellpower.\";\r\n            case \"Fourth Level Spell\":\r\n                return \"Study Confusing Codices! This talent must be maxed to cast Haste. Gives a modest \" + (lvl) + \"% + (1%) to your max spellpower.\";\r\n            case \"Fifth Level Spell\":\r\n                return \"Study Empowered Evocations! This talent must be maxed to cast Power Word Kill. Gives a modest \" + (lvl) + \"% + (1%) to your max spellpower.\";\r\n            case \"Entagle\":\r\n                return \"Only one spell will cast per attack. Every 4th attack you slow a creature's attack speed by 40% for \" +\r\n                    (2 + lvl * 0.25) + \" + (0.25) seconds.\";\r\n            case \"Thorns\":\r\n                return \"In their feeble attempt to catch you, monsters take \" + (lvl * 3) + \"% + (3%) of your Evasion in magic damage per second while slowed.\";\r\n            case \"Barrier\":\r\n                return \"Only one spell will cast per attack. Every 13th attack you add \" + (40 * lvl) + \"% + (40%) of your ward to your shield.\";\r\n            case \"Shell\":\r\n                return \"Who needs endurance when you have magic? Increases your Toughness by \" + (15 * lvl) + \"% + (15%) while your shield is up.\";\r\n            case \"Fireball\":\r\n                return \"Only one spell will cast per attack. Every 5th attack you cast the only spell that matters, dealing \" + (7 * lvl) +\r\n                    \"% + (7%) of your spellpower to all monster in magic damage. You didn't ask how big the room is, you said 'I cast Fireball'.\";\r\n            case \"Ignite\":\r\n                return \"Watch the monsters burn. Fun! Your fireballs ignite monsters, dealing 25% of its damage per second for \" + (1 + lvl * 0.5) +\r\n                    \" + (0.5) seconds.\";\r\n            case \"Haste\":\r\n                return \"Only one spell will cast per attack. Every 6th attack you gain haste for 3 attacks. While hasted your attack bar starts \" + (7.5 * lvl) +\r\n                    \"% + (7.5%) full.\";\r\n            case \"Quicken\":\r\n                return \"You've remembered that haste also makes you move faster! While haste is active your Evasion is increased by \" + (5 * lvl) +\r\n                    \"% + (5%).\";\r\n            case \"Power Word Kill\":\r\n                return \"Only one spell may cast per attack. Every 9th attack you command a monster to play dead, dealing anywhere from 0% - \" + (100 + lvl * 25) + \"% + (25%) of your spellpower in magic damage.\";\r\n            case \"Power Word Stun\":\r\n                return \"Your words leave them so dumbfounded that they forget to attack. If you deal at least \" + (80 - lvl * 7) +\r\n                    \"% - (7%) of its max damage the target is stunned for 2 seconds.\";\r\n            case \"Alchemy\":\r\n                return \"To pay for your crippling potion dependency you transmute monsters to gold! Gain \" + (5 * lvl) +\r\n                    \" + (5) gold every 10th kill, increased by the towns economy multiplier.\";\r\n            case \"Elective Studies: Strength\":\r\n                return \"Learn the ancient art of casting Fist. Increase damage from Strength by \" + (5 * lvl) + \"% + (5%).\";\r\n            case \"Elective Studies: Dexterity\":\r\n                return \"Learn how to cast more spells more faster. Increases hit chance from Dexterity by \" + (lvl) + \" + (1).\";\r\n            case \"Elective Studies: Agility\":\r\n                return \"You never skipped cardio day in Wizard PE. Increases evasion from Agility by \" + ((lvl * 7) / 10) + \" + (0.7).\";\r\n            case \"Elective Studies: Endurance\":\r\n                return \"The only way wizards could survive long enough to cast the really cool spells. Increases health from Endurance by \" + ((lvl * 7.5) / 10) + \" + (0.75).\";\r\n            case \"Runemancy\":\r\n                return \"Harness the runic magic to empower your spells. Each socketed run in your equipment increases your spellpower by \" + (lvl) + \"% + (1%).\";\r\n            case \"Magic Armor\":\r\n                return \"You didn't spend 10 years at wizard school to use yuvky, non-magical armor. Add \" + (lvl * 20) + \"% + (20%) \" +\r\n                    \"of your gears armor to your Shield at the start of combat.\";\r\n            case \"Magic Weapon\":\r\n                return \"Magic Weapons, from a more civilized time. Add \" + (lvl * 10) + \"% + (10%) \" +\r\n                    \"of your gears damage to your Spell Power.\";\r\n            case \"Chromatic Codex\":\r\n                return \"You've mastered the ancient scrolls and now you can read from the Chromatic Codex. It's pretty underwhelming, \" +\r\n                    \"but it increases your spellpower by \" + (lvl * 6) + \"% + (6%).\";\r\n        }\r\n        return talent.name + \": Missing Tooltip\";\r\n    }\r\n\r\n    static getTechTooltip(tech, townTier) {\r\n        switch (tech.name) {\r\n            case \"Forge\":\r\n                return \"Each level reduces crafting costs of T\" + townTier + \" gear and below by 5%. Don't ask me how this works.\";\r\n            case \"Guilds\":\r\n                return \"Each level increases resource gain from buildings by 10%.\";\r\n            case \"Town Hall\":\r\n                return \"Each level increases Bounty gold from killing monsters in this region by 10%. The best quest is the \" +\r\n                    \"one that pays the most.\";\r\n            case \"Market\":\r\n                return \"Unlocks the Market. Once built the Market increases tax income by 0-5% based on distance to \" +\r\n                    \"the Town and other Markets.\";\r\n            case \"Tavern\":\r\n                return \"Everyone Needs a drink. Unlocks the Tavern, combining your two loves, getting more money and people that \" +\r\n                    \"pay you money.\";\r\n            case \"Reinforced Houses\":\r\n                return \"Every man's home is a castle, but more literal. Increases the defense of all buildings by 1.\";\r\n            case \"Banking\":\r\n                return \"Learn how to make money from nothing! Each level increases tax income by 5% and increases your base gold \" +\r\n                    \"cap by 50.\";\r\n            case \"Map Making\":\r\n                return \"Instead of wandering aimlessly, get some villagers to make some maps. Increases exploration speed by 10%.\";\r\n            case \"Barracks\":\r\n                return \"Build a place for your villagers to practice fighting and show off how much they can lift. Increases Villager Power by 5% per level.\";\r\n            case \"Armory\":\r\n                return \"You found that if you give the villagers some scraps from the forge they die less. Increases Villager Health by 5% per level.\";\r\n        }\r\n        return tech.name + \": Missing Tooltip\";\r\n    }\r\n\r\n    static getMoonlightTooltip(moonlight) {\r\n        switch (moonlight.name) {\r\n            case \"Moon's Strength\":\r\n                return \"Increases your starting Strength by \" + (moonlight.level) + \" + (1) and increases Strength from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Dexterity\":\r\n                return \"Increases your starting Dexterity by \" + (moonlight.level) + \" + (1) and increases Dexterity from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Agility\":\r\n                return \"Increases your starting Agility by \" + (moonlight.level) + \" + (1) and increases Agility from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Endurance\":\r\n                return \"Increases your starting Endurance by \" + (moonlight.level) + \" + (1) and increases Endurance from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Recovery\":\r\n                return \"Increases your starting Recovery by \" + (moonlight.level) + \" + (1) and increases Recovery from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Defense\":\r\n                return \"Increases your starting Defense by \" + (moonlight.level) + \" + (1) and increases Defense from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Moon's Accuracy\":\r\n                return \"Increases your starting Accuracy by \" + (moonlight.level) + \" + (1) and increases Accuracy from all sources by \" +\r\n                    (moonlight.level * 0.5) + \"% + (0.5%).\";\r\n            case \"Hero's Vault\":\r\n                return \"Increases the base income per villager by \" + (moonlight.level) / 10 + \" + (0.1) gold.\";\r\n            case \"Moonwine\":\r\n                return \"Taverns count Town Houses within \" + (1 + moonlight.level) + \" + (1) tiles for their bonus.\";\r\n            case \"Hardened Villagers\":\r\n                return \"Buildings have \" + (moonlight.level) + \" + (1) more defense.\";\r\n            case \"Shadow's Blessing\":\r\n                return \"You gain \" + (moonlight.level * 10) + \"% + (10%) more shade from monsters.\";\r\n            case \"Moon Runes\":\r\n                return \"Unlocks Runes. Runes can be found after exploring a tile and can be socketed into gear to provide a random set of \" +\r\n                    \"bonuses.\";\r\n            case \"Dire Beasts\":\r\n                return \"Dire versions of beasts can be found which are much stronger than their normal counterparts. Defeating them grants \" +\r\n                    \"bonus shade, resources, and Motes of Darkness.\";\r\n            case \"Heart of Darkness\":\r\n                return \"Defeating invasion monsters give \" + (moonlight.level) + \" + (1) additional Motes of Darkness.\";\r\n            case \"Blackiron Gear\":\r\n                return \"Motes of Darkness can reach a \" + (20 + moonlight.level * 10) + \"% + (10%) bonus before diminishing returns.\";\r\n            case \"Runelands\":\r\n                return \"Each region contains \" + (5 + (moonlight.level % 5)) + \" + (1) hidden runes. Runes have +\" +\r\n                    Math.floor(moonlight.level / 5) + \" levels.\";\r\n            case \"Moonlight Workers\":\r\n                return \"Production buildings generate \" + (moonlight.level) + \"% + (1%) more resources per defense.\";\r\n            case \"Hero's Pouch\":\r\n                return \"Increases your gold cap by \" + (moonlight.level * 100) + \" + (100) per town.\";\r\n            case \"Night Market\":\r\n                return \"Markets increase your economy by 0-\" + (5 + moonlight.level) + \"% + (1%) based on distance between the Town \" +\r\n                    \"and other Markets.\";\r\n            case \"Shadow's Metal\":\r\n                return \"Metal yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Leather\":\r\n                return \"Leather yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Fiber\":\r\n                return \"Fiber yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Stone\":\r\n                return \"Stone yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Wood\":\r\n                return \"Wood yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Crystal\":\r\n                return \"Crystal yields are increased by \" + (moonlight.level * 5) + \"% + (5%).\";\r\n            case \"Shadow's Gold\":\r\n                return \"Monsters drop \" + (moonlight.level * 0.25) + \" + (0.25) more gold.\";\r\n            case \"Discovery\":\r\n                return \"Gain \" + (moonlight.level * 30) + \" + (30) friendship each time you fully explore a tile.\";\r\n            case \"Shadow's Chosen\":\r\n                return \"Monsters base shade reward increased by \" + (moonlight.level * 2) + \" + (2). This is added before other multipliers, \" +\r\n                    \"such as Shadow's Blessing or monster level.\";\r\n            case \"Corrupted Runes\":\r\n                return \"Upgrading and Rerolling Runes costs \" + Math.floor(Math.pow(0.93, moonlight.level) * 100) + \"% - (~7%) fewer Motes of Darkness.\";\r\n            case \"Soulbound\":\r\n                return \"Gear gains an additional \" + (moonlight.level) + \"% + (1%) of their base stats every level.\";\r\n            case \"Farstrider\":\r\n                return \"Your explore speed is increased by \" + (moonlight.level * 10) + \"% + (10%).\";\r\n            case \"Motivated Labor\":\r\n                return \"Production is increased by \" + (moonlight.level) + \"% + (1%) per friendship level.\";\r\n            case \"Crown Lands\":\r\n                return \"Each explored tile increases your base gold cap by \" + (moonlight.level * 2) + \" + (2).\";\r\n            case \"Inspired Construction\":\r\n                return \"Watch Towers and Warehouses bonuses are increased by \" + (moonlight.level * 10) + \"% + (10%).\";\r\n            case \"Shadow's Harvest\":\r\n                return \"Each day you gain \" + (moonlight.level) * 0.75 + \" + (0.75) shade per villager. This bonus is increased by Shadow's Blessing and town production.\";\r\n            case \"Shadow Wolf Charm\":\r\n                return \"Unlocks the Shadow Wolf Charm trinket which grants Strength and Damage. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Moonlight Circlet\":\r\n                return \"Unlocks the Moonlight Circlet trinket which grants Dexterity and Hit. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Moon Treads\":\r\n                return \"Unlocks the Moon Treads trinket which grants Agility and Evasion. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Moonstone\":\r\n                return \"Unlocks the Moonstone trinket which grants Endurance, Health, and Toughness. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Dreamlight Bracer\":\r\n                return \"Unlocks the Dreamlight Bracer trinket which grants Recovery and Health Regen. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Shadow Veil\":\r\n                return \"Unlocks the Shadow Veil trinket which grants Defense and Armor. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Nightmare Pendant\":\r\n                return \"Unlocks the Nightmare Pendant trinket which grants Accuracy, Crit Chance and Aim. Available up to tier \" + (moonlight.level) + \" + (1)\";\r\n            case \"Night Labour\":\r\n                return \"Unlocks Night Labour for Towns. When active each villager is paid \" + (moonlight.level / 2) +\r\n                    \"g  + (0.5g) per day and increases production by \" + (moonlight.level / 10) + \"% + (0.1%).\";\r\n            case \"Devotion\":\r\n                return \"Increases Villager Power and Health by \" + (moonlight.level * 10) + \"% + (10%).\";\r\n            case \"Ninjas\":\r\n                return \"Dojo's give \" + (moonlight.level * 25) + \"% + (25%) more Villager Power and Health per week.\";\r\n            case \"Urbanization\":\r\n                return \"Town Houses can fit \" + (moonlight.level) + \" + (1) more population per level.\";\r\n        }\r\n        return moonlight.name + \": Missing Tooltip\";\r\n    }\r\n\r\n    static getRegionTooltip(regionName) {\r\n        switch (regionName) {\r\n            case \"temperate\":\r\n                return \"A balanced area where all resources are equally abundant.\";\r\n            case \"mountains\":\r\n                return \"Mountains and plateau's as far as the eye can see. Home to flying beasts, there is plenty of metal and stone \" +\r\n                    \"to be found here.\";\r\n            case \"desert\":\r\n                return \"A hot desert full of horrible creatures with the occasional dry plains full of hungry beasts. At least the \" +\r\n                    \"crystals shine in the moonlight.\";\r\n            case \"forest\":\r\n                return \"A massive forest full of the oldest trees waiting to be cut down, beasts to be hunted and plants to be gathered.\";\r\n            case \"hills\":\r\n                return \"Rolling hills with few plains between them. Full of wild beasts, plants, and the Gnoll's who hunt them.\";\r\n            case \"void\":\r\n                return \"An unending void filled with glittering stars. There is nothing here, except for the Starlight Palace.\";\r\n        }\r\n        return regionName + \": Missing Tooltip\";\r\n    }\r\n\r\n    static getRegionImage(regionName) {\r\n        switch (regionName) {\r\n            case \"unknown\":\r\n                return { sprite: \"icons\", tile: 58 };\r\n            case \"hills\":\r\n                return { sprite: \"icons\", tile: 59 };\r\n            case \"desert\":\r\n                return { sprite: \"icons\", tile: 57 };\r\n            case \"void\":\r\n                return { sprite: \"icons2\", tile: 5 };\r\n            default:\r\n                return { sprite: \"icons\", tile: 40 };\r\n        }\r\n    }\r\n\r\n    static getChallengeDescription(challenge) {\r\n        var completions = Math.min(challenge.maxCompletions, challenge.completions);\r\n        switch (challenge.name) {\r\n            case \"A Matter of Years\":\r\n                return \"Now that you've reached out into the world and understand the basics why not do it again, but faster. As they \" +\r\n                    \"say, practice makes perfect!\\n\\n\" +\r\n                    \"Restrictions: Reach the 2nd Gate within \" + (5 - completions) + \" Years.\\n\\n\" +\r\n                    \"On First Completion: Unlock new challenges.\\n\" +\r\n                    \"On Every Completion: Increases moonlight earned by 15%\\n\" +\r\n                    \"                     +2 Challenge Points\\n\\n\" +\r\n                    \"It is possible to fail this challenge!\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Forged Ahead\":\r\n                return \"Those forge upgrades sure are useful, especially now that all your gear costs \" + (10 + completions * 10) +\r\n                    \" times as much.\\n\\n\" +\r\n                    \"Restrictions: Gear costs increased by \" + (10 + completions * 10) + \" times.\\n\" +\r\n                    \"              Reach the 2nd Gate.\\n\\n\" +\r\n                    \"On First Completion: Unlocks Auto Gear Upgrade.\\n\" +\r\n                    \"On Every Completion: Gear costs are multiplied by x0.925\\n\" +\r\n                    \"                     +2 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Giant Lands\":\r\n                return \"Is this land massive, or are you just really small? Each region is smaller, but takes 25 times longer to explore. \" +\r\n                    \"Also all monsters have the Monstrous \" + (2 + 2 * completions) + \" trait.\\n\\n\" +\r\n                    \"Restrictions: Exploration needed is increased by 25x\\n\" +\r\n                    \"              Reach Gate \" + (1 + completions) + \".\\n\\n\" +\r\n                    \"On Every Completion: Increases explore speed by 25%\\n\" +\r\n                    \"                     +3 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Invasion\":\r\n                return \"Invasions, everyones favourite feature! I made the invasion timer reaaal small so you can enjoy it to the fullest. \" +\r\n                    \"Oh, also invasion monsters have +\" + (5 + 5 * completions) + \" levels.\\n\\n\" +\r\n                    \"Restrictions: Invasions spawn faster and spread quicker\\n\" +\r\n                    \"              Reach Gate \" + (1 + completions) + \".\\n\\n\" +\r\n                    \"On Every Completion: Invasions take 20% longer to\\n\" +\r\n                    \"                     increase in strength.\\n\" +\r\n                    \"                     Invasions give 5% more motes.\\n\" +\r\n                    \"                     +3 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Talentless\":\r\n                return \"You rely way too much on those talents. Let's see you get through without them.\\n\\n\" +\r\n                    \"Restrictions: Talents are removed.\\n\" +\r\n                    \"              Reach Gate \" + (3 + completions) + \".\\n\\n\" +\r\n                    \"On Every Completion: Start with +1 Talent points.\\n\" +\r\n                    \"                     Talent costs scale slightly slower.\\n\" +\r\n                    \"                     +3 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Lazy Townsfolk\":\r\n                return \"None of the townsfolk in this realm know how to work. Either that or they're just really lazy.\\n\\n\" +\r\n                    \"Restrictions: Production buildings are unavailable.\\n\" +\r\n                    \"              Reach Gate \" + (3 + completions) + \".\\n\\n\" +\r\n                    \"On First Completion: Unlock the Warehouse building.\\n\" +\r\n                    \"                     Unlocks Blueprints and Auto Town Upgrade\\n\" +\r\n                    \"On Every Completion: Increases building production by 10%\\n\" +\r\n                    \"                     +4 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Mega Monsters\":\r\n                return \"*slaps monster* this baby can fit so many traits inside it. How many? \" + (4 + completions * 2) +\r\n                    \" traits. That's how many.\\n\\n\" +\r\n                    \"Restrictions: Monsters start with \" + (4 + completions * 2) + \" traits.\\n\" +\r\n                    \"              Reach Gate \" + (5 + completions) + \".\\n\\n\" +\r\n                    \"On Every Completion: Monsters give 5% more shade, plus 1%\\n\" +\r\n                    \"                     per trait.\\n\" +\r\n                    \"                     +5 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Outcast\":\r\n                return \"You rely too much on others. Time to learn the true meaning of friendship.\\n\\n\" +\r\n                    \"Restrictions: Building Production reduced by \" + (50 + completions * 10) + \"%.\\n\" +\r\n                    \"              Town Upgrades cost 1 level of friendship.\\n\" +\r\n                    \"              Region spans \" + (30 + (completions * 5)) + \" levels.\\n\" +\r\n                    \"              Reach Gate \" + (4 + completions) + \".\\n\\n\" +\r\n                    \"On First Completion: Unlocks Auto Building Upgrade.\\n\" +\r\n                    \"On Every Completion: Gain 10% more friendship.\\n\" +\r\n                    \"                     Friendship tiers scale slightly\\n\" +\r\n                    \"                     slower.\\n\" +\r\n                    \"                     +5 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"The Tower of Ultimate Wizard-y\":\r\n                return \"Oh no! Evil wizards are attacking the Towers of Ultimate Wizardy! Is that a mispelling? A reference? Who knows! \" +\r\n                    \"You must seek out the ancient spires and keep them safe while you research the ultimate spell. Each tower, once \" +\r\n                    \"revealed, contributes to your knowledge. Mastering the spell will summon a Mystic Gate, enter it to complete the\" +\r\n                    \"challenge.\\n\\n\" +\r\n                    \"Restrictions: Region spans \" + (60 + (completions * 10)) + \" levels.\\n\" +\r\n                    \"              Invasions are more frequent and lead by an evil wizard that deals magic damage.\\n\" +\r\n                    \"              Invasions can happen anywhere.\\n\" +\r\n                    \"              Invasions gradually get stronger.\\n\" +\r\n                    \"              Losing all 4 Spires fails the challenge and immediately causes a rebirth.\\n\\n\" +\r\n                    \"On Every Completion: Wizard starts with +2 Talent Points.\\n\" +\r\n                    \"                     +5 Challenge Points\\n\\n\" +\r\n                    \"On Final Completion: Unlocks the Spire building.\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"A Matter of Decades\":\r\n                return \"Did you finish all the normal challenges yet? I'm feeling kind, so consider this a warmup.\\n\\n\" +\r\n                    \"Restrictions: Reach the 10th Gate within \" + (10 - completions * 2) + \" Years.\\n\" +\r\n                    \"              Regions span 25 levels.\\n\\n\" +\r\n                    \"On First Completion: Auto Explore will continue to a\\n\" +\r\n                    \"                     random region if the current region\\n\" +\r\n                    \"                     is complete.\\n\" +\r\n                    \"On Every Completion: Increases Star Shard Chance as if\\n\" +\r\n                    \"                     you were 1 region further.\\n\" +\r\n                    \"                     +7 Challenge Points\\n\\n\" +\r\n                    \"On Final Completion: 5% of your Challenge Points apply to Moonlight gain.\\n\" +\r\n                    \"It is possible to fail this challenge!\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Forged Ahead 2: Reforged\":\r\n                return \"You didn't actually want to equip gear, did you? In this world Gear costs 1000 times as much.\\n\\n\" +\r\n                    \"Restrictions: Gear costs increased x1000.\\n\" +\r\n                    \"              Can only use up to Tier \" + (8 - challenge.completions) + \" Gear\\n\" +\r\n                    \"              Regions span 25 levels.\\n\" +\r\n                    \"              Reach the 10th Gate.\\n\\n\" +\r\n                    \"On First Completion: Forge Upgrades can pass the 10%\\n\" +\r\n                    \"                     softcap at a greatly reduced rate.\\n\" +\r\n                    \"On Every Completion: Gear costs are multiplied by x0.95\\n\" +\r\n                    \"                     +8 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Capitalism\":\r\n                return \"The people of this world actually want to be paid for their work, can you imagine that? They won't work \" +\r\n                    \"without gold, good thing you got those taxes!\\n\\n\" +\r\n                    \"Restrictions: production buildings cost \" + (250 + challenge.completions * 250) + \"g per day.\\n\" +\r\n                    \"              Tax loopholes mean you earn 50% less tax.\\n\" +\r\n                    \"              Regions span 25 levels.\\n\" +\r\n                    \"              Reach the 10th Gate.\\n\\n\" +\r\n                    \"On Every Completion: Gold cost of Town upgrades reduced\\n\" +\r\n                    \"                     by 10%.\\n\" +\r\n                    \"                     +250 base gold cap per Town\\n\" +\r\n                    \"                     +10 Challenge Points\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Cult Dimension\":\r\n                var powerNeeded = [1000000000, 5000000000, 25000000000, 100000000000, 250000000000];\r\n                return \"Welcome to the Cult Dimension! The Heretics in this world think they can improve upon traditional \" +\r\n                    \"rituals, they just need a small investment of \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(powerNeeded[challenge.completions]) +\r\n                    \" Ritual Power, which they say they can make from your resources!\\n\\n\" +\r\n                    \"Restrictions: 99% of production is converted to Ritual Power. Higher tiers convert at a better rate.\\n\" +\r\n                    \"              Invasions can happen anywhere. Instead of destroying tiles they consume \" +\r\n                    (challenge.completions + 1) + \"% of your Max Ritual Power.\\n\" +\r\n                    \"              Mystic Gates are replaced with Cult Fortresses. Each Fortress conquered increases \" +\r\n                    \"Ritual Power gain by 10%.\\n\\n\" +\r\n                    \"On Every Completion: Sacrifices are 5% cheaper\\n\" +\r\n                    \"                     +12 Challenge Points\\n\" +\r\n                    \"On Final Completion: Rituals of Destruction have +3% Moonlight/Star Shard Chance per level.\\n\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n            case \"Star Invaders\":\r\n                return \"Invasions, everyones favourite feature! I made the invasion timer reaaal small so you can enjoy it to the fullest. \" +\r\n                    \"Oh, also invasion monsters have +\" + (5 + 5 * completions) + \" levels, and if you lose a tile to an invasion it's \" +\r\n                    \"difficulty increases by the same amount.\\n\\n\" +\r\n                    \"Restrictions: Reach Gate \" + (1 + completions) + \".\\n\\n\" +\r\n                    \"On First Completion: Auto explore auto fights invasions, giving 25% motes.\\n\" +\r\n                    \"On Every Completion: Invasions take 25% longer to destroy a tile.\\n\" +\r\n                    \"                     +12 Challenge Points\\n\\n\" +\r\n                    \"On Final Completion: Defending an Invasion increases your Moonlight earned by 1% (heavily diminished returns).\\n\" +\r\n                    \"Completions: \" + challenge.completions + \"/\" + challenge.maxCompletions + \"\\n\" +\r\n                    \"Fastest Time: \" + new _WorldTime__WEBPACK_IMPORTED_MODULE_4__[\"WorldTime\"](challenge.fastestTime).getTimespanText();\r\n        }\r\n        return challenge.name + \": Missing Tooltip\";\r\n    }\r\n\r\n    static getTraitTooltip(trait) {\r\n        switch (trait.type) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_DIRE:\r\n                return \"Dire \" + trait.level + \": Core stats are increased by \" + trait.level * 20 + \"%, drops motes, and gives \" +\r\n                    trait.level * 75 + \"% more experience.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_POISONED:\r\n                return \"Poisoned \" + trait.level + \": Deals \" + (4 + trait.level) + \"% of its max damage per second as magic damage. Damage \" +\r\n                    \"doubles when below half health.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_MONSTROUS:\r\n                return \"Monstrous \" + trait.level + \": Attack speed is reduced by 15%. Has \" + trait.level * 25 + \"% increased health and \" +\r\n                    trait.level * 10 + \"% increased damage.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_QUICK:\r\n                return \"Quick \" + trait.level + \": Attack speed is increased by 20%. Has \" + trait.level * 25 + \"% increased evasion.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_DEADLY:\r\n                return \"Deadly \" + trait.level + \": Crit Chance is doubled and has \" + trait.level * 30 + \"% more Aim.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_SHIELDED:\r\n                return \"Shielded \" + trait.level + \": Every second gains \" + trait.level * 20 + \"% of their armor as a shield that \" +\r\n                    \"absorbs incoming damage. Toughness is increased 1000% while shielded.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_BESERK:\r\n                return \"Beserk \" + trait.level + \": Hit chance is increased by \" + trait.level * 20 + \"%, health regen by \" +\r\n                    trait.level * 10 + \"% and has a \" + Math.floor(((1 - Math.pow(0.92, trait.level)) * 100)) +\r\n                    \"% chance to trigger Follow Through.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_FIRSTSTRIKE:\r\n                return \"First Strike \" + trait.level + \": Starts combat with their attack bar filled to 95% and gain \" +\r\n                    trait.level * 25 + \"% more Accuracy.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_INVADER:\r\n                var inc = Math.floor((_WorldData__WEBPACK_IMPORTED_MODULE_3__[\"WorldData\"].getInstance().getInvasionPower() - 1) * 100);\r\n                var reward = Math.floor((_WorldData__WEBPACK_IMPORTED_MODULE_3__[\"WorldData\"].getInstance().invasionReward - 1) * 100);\r\n                return \"Invader: These monsters are infused with a dark power, increasing their stats by \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(inc) +\r\n                    \"% and giving \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward) + \"% more shade, and motes.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_CORROSIVE:\r\n                return \"Corrosive \" + trait.level + \": Reduces your armor by \" + trait.level + \"% of its Min Damage.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_REGENERATING:\r\n                return \"Regenerating \" + trait.level + \": Has \" + (trait.level * 30) + \"% more health regen.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_THORNS:\r\n                return \"Thorns \" + trait.level + \": Has \" + (trait.level * 10) + \"% more armor. When attacked, it deals 20% \" +\r\n                    \"of its armor in Magic Damage.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_MAGICAL:\r\n                return \"Magical \" + trait.level + \": Every 3rd hit deals an additional \" + (trait.level * 20) + \"% of its Max Damage as \" +\r\n                    \"Magic Damage.\";\r\n        }\r\n        return trait.type + \": Missing Tooltip. Better report this to the dev.\";\r\n    }\r\n\r\n    static getTraitImage(trait) {\r\n        switch (trait.type) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_DIRE:\r\n                return { sprite: \"icons\", tile: 43 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_POISONED:\r\n                return { sprite: \"icons\", tile: 46 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_MONSTROUS:\r\n                return { sprite: \"icons\", tile: 42 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_QUICK:\r\n                return { sprite: \"icons\", tile: 49 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_DEADLY:\r\n                return { sprite: \"icons\", tile: 41 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_SHIELDED:\r\n                return { sprite: \"icons\", tile: 44 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_BESERK:\r\n                return { sprite: \"icons\", tile: 45 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_FIRSTSTRIKE:\r\n                return { sprite: \"icons\", tile: 56 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_CORROSIVE:\r\n                return { sprite: \"icons2\", tile: 2 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_REGENERATING:\r\n                return { sprite: \"icons\", tile: 12 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_THORNS:\r\n                return { sprite: \"icons2\", tile: 3 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_INVADER:\r\n                return { sprite: \"icons\", tile: 39 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].TRAIT_MAGICAL:\r\n                return { sprite: \"icons\", tile: 63 };\r\n        }\r\n        return { sprite: \"icons\", tile: 0 };\r\n    }\r\n\r\n    static getRuneBonusText(prop, value) {\r\n        var sign = value >= 0 ? \"+\" : \"\";\r\n        switch (prop) {\r\n            case \"strPercent\":\r\n                return sign + Math.round(value * 100) + \"% Strength\";\r\n            case \"strFlat\":\r\n                return sign + Math.floor(value) + \" Strength\";\r\n            case \"strTalents\":\r\n                return sign + Math.floor(value) + \" Strength Talents\";\r\n            case \"dexPercent\":\r\n                return sign + Math.round(value * 100) + \"% Dexterity\";\r\n            case \"dexFlat\":\r\n                return sign + Math.floor(value) + \" Dexterity\";\r\n            case \"dexTalents\":\r\n                return sign + Math.floor(value) + \" Dexterity Talents\";\r\n            case \"agiPercent\":\r\n                return sign + Math.round(value * 100) + \"% Agility\";\r\n            case \"agiFlat\":\r\n                return sign + Math.floor(value) + \" Agility\";\r\n            case \"agiTalents\":\r\n                return sign + Math.floor(value) + \" Agility Talents\";\r\n            case \"endPercent\":\r\n                return sign + Math.round(value * 100) + \"% Endurance\";\r\n            case \"endFlat\":\r\n                return sign + Math.floor(value) + \" Endurance\";\r\n            case \"endTalents\":\r\n                return sign + Math.floor(value) + \" Endurance Talents\";\r\n            case \"recPercent\":\r\n                return sign + Math.round(value * 100) + \"% Recovery\";\r\n            case \"recFlat\":\r\n                return sign + Math.floor(value) + \" Recovery\";\r\n            case \"recTalents\":\r\n                return sign + Math.floor(value) + \" Recovery Talents\";\r\n            case \"defPercent\":\r\n                return sign + Math.round(value * 100) + \"% \" + TooltipRegistry.defenseName;\r\n            case \"defFlat\":\r\n                return sign + Math.floor(value) + \" \" + TooltipRegistry.defenseName;\r\n            case \"defTalents\":\r\n                return sign + Math.floor(value) + \" Defense Talents\";\r\n            case \"accPercent\":\r\n                return sign + Math.round(value * 100) + \"% \" + TooltipRegistry.accuracyName;\r\n            case \"accFlat\":\r\n                return sign + Math.floor(value) + \" \" + TooltipRegistry.accuracyName;\r\n            case \"accTalents\":\r\n                return sign + Math.floor(value) + \" Accuracy Talents\";\r\n            case \"hitPercent\":\r\n                return sign + Math.round(value * 100) + \"% Hit Chance\";\r\n            case \"evaPercent\":\r\n                return sign + Math.round(value * 100) + \"% Evasion\";\r\n            case \"weaponPercent\":\r\n                return sign + Math.round(value * 100) + \"% Gear Damage\";\r\n            case \"armorPercent\":\r\n                return sign + Math.round(value * 100) + \"% Gear Armor\";\r\n            case \"critPercent\":\r\n                return sign + Math.round(value * 100) + \"% \" + TooltipRegistry.critPowerName;\r\n            case \"healthPercent\":\r\n                return sign + Math.round(value * 100) + \"% Health\";\r\n            case \"regenPercent\":\r\n                return sign + Math.round(value * 100) + \"% HP Regen\";\r\n            case \"weaponScaling\":\r\n                return sign + Math.round(value * 400) + \" Gear Damage Scaling\";\r\n            case \"armorScaling\":\r\n                return sign + Math.round(value * 400) + \" Gear Armor Scaling\";\r\n            case \"baseAttackSpeed\":\r\n                return sign + Math.round(value * 100) + \"% Faster Attacks\";\r\n            case \"OOCRegen\":\r\n                return sign + value + \" Out of Combat Regen\";\r\n            case \"enemyCrit\":\r\n                return Math.round(Math.pow(0.92, value) * 100) + \"% Crit Damage Taken\";\r\n            case \"exploreSpeed\":\r\n                return sign + Math.round(value * 100) + \"% Explore Speed\";\r\n            case \"friendshipMulti\":\r\n                return sign + Math.round(value * 100) + \"% Friendship Earned\";\r\n            case \"critChance\":\r\n                return sign + Math.round(value * 100) + \"% Crit Chance\";\r\n            case \"lootFlat\":\r\n                return sign + value + \" to Loot Dropped\";\r\n            case \"lootTalent\":\r\n                return sign + value + \" Bounty Talent\";\r\n            case \"moteChance\":\r\n                return sign + (Math.round(value * 1000) / 10) + \"% Mote on Kill\";\r\n            case \"shadeFlat\":\r\n                return sign + value + \" Shade per Kill\";\r\n            case \"regenOnKill\":\r\n                return sign + Math.round(value * 10) / 10 + \"s of Regen on Kill\";\r\n            case \"dexToStr\":\r\n                return sign + Math.round(value * 100) + \"% Dexterity to Strength\";\r\n            case \"endToRec\":\r\n                return sign + Math.round(value * 100) + \"% Endurance to Recovery\";\r\n            case \"agiToDef\":\r\n                return sign + Math.round(value * 100) + \"% Agility to Defense\";\r\n            case \"allPercent\":\r\n                return sign + Math.round(value * 100) + \"% All Attributes\";\r\n            case \"governanceTalent\":\r\n                return sign + value + \" Governance Talent\";\r\n            case \"guardianTalent\":\r\n                return sign + value + \" Guardian Talent\";\r\n            case \"agilityScaling\":\r\n                return sign + Math.round(value * 200) + \" Agility Explore Scaling\";\r\n            case \"charismaTalent\":\r\n                return sign + value + \" Charisma Talent\";\r\n            case \"chromaTalent\":\r\n                return sign + value + \" Chromatic Codex Talent\";\r\n            case \"defToShield\":\r\n                return sign + Math.round(value * 100) + \"% \" + TooltipRegistry.defenseName + \" to Shield\";\r\n            case \"goldFlat\":\r\n                return sign + value + \" Gold per Kill\";\r\n            case \"goldMulti\":\r\n                return sign + Math.round(value * 100) + \"% Gold Drops\";\r\n            case \"resourceMulti\":\r\n                return sign + Math.round(value * 100) + \"% Resource Drops\";\r\n            case \"shadeMulti\":\r\n                return sign + Math.round(value * 100) + \"% Shade per Kill\";\r\n            case \"gearScaling\":\r\n                return sign + Math.round(value * 100) + \"% Gear Stat Scaling\";\r\n            case \"baseTalents\":\r\n                return sign + value + \" Base Stat Talents\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getBonusText(prop, value) {\r\n        var sign = value >= 0 ? \"+\" : \"\";\r\n        switch (prop) {\r\n            case \"health\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Health\";\r\n            case \"damageMin\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Min Dmg\";\r\n            case \"damageMax\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Max Dmg\";\r\n            case \"strength\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Strength\";\r\n            case \"dexterity\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Dexterity\";\r\n            case \"agility\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Agility\";\r\n            case \"endurance\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Endurance\";\r\n            case \"recovery\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Recovery\";\r\n            case \"defense\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" \" + TooltipRegistry.defenseName;\r\n            case \"accuracy\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" \" + TooltipRegistry.accuracyName;\r\n            case \"hit\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Hit\";\r\n            case \"evasion\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Evasion\";\r\n            case \"critPower\":\r\n                // this is trash don't look plz\r\n                if (TooltipRegistry.critPowerName === \"Spell Power\") {\r\n                    return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value / 3)) + \" \" + TooltipRegistry.critPowerName;\r\n                }\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" \" + TooltipRegistry.critPowerName;\r\n            case \"critResistance\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Crit Resist\";\r\n            case \"critChance\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value * 100)) + \"% Crit Chance\";\r\n            case \"healthRegen\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value * 10) / 10) + \"/s HP Regen\";\r\n            case \"armor\":\r\n                return sign + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Armor\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getCostText(type, value) {\r\n        switch (type) {\r\n            case 0:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Wood\";\r\n            case 1:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Leather\";\r\n            case 2:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Metal\";\r\n            case 3:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Fiber\";\r\n            case 4:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Stone\";\r\n            case 5:\r\n                return _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(value)) + \" Crystal\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static getDungeonRewardTooltip(reward) {\r\n        switch (reward.type) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RESOURCES:\r\n                return \"A stockpile of resources, enough for exactly \" + reward.amount + \" days of average production for all resources!\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.SHADE:\r\n                return \"You thought it was just a shadow, but it's really \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward.amount) + \" Shade. Nice!\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.MOTES:\r\n                return \"The final monster barfed up \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward.amount) + \" Motes of Darkness.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.GOLD:\r\n                return \"A 'Dragons Horde' worth of gold, or \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward.amount) + \" pieces.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.GEAR_LEVELS:\r\n                return \"Your not really sure how, but get \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward.amount) + \" levels to your equipped gear.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RUNES:\r\n                return \"The monsters were guarding \" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(reward.amount) + \" random Runes. Nice!\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.WOOD:\r\n                return \"A design for a sweet woodcutting axe. Increase wood production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.LEATHER:\r\n                return \"A design for a sweet skinning knife. Increase leather production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.METAL:\r\n                return \"A design for a sweet pickaxe. Increase metal production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.FIBER:\r\n                return \"A design for a sweet loom.. thing? Increase fiber production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STONE:\r\n                return \"A design for a sweet stone cutter. Increase stone production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.CRYSTAL:\r\n                return \"A design for a sweet crystal spinner. Increase crystal production by \" + Math.floor(reward.amount * 100) + \"% in every region.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PRODUCTION:\r\n                return \"Some mysterious device that keeps spinning. Apparently it can increase production by \" +\r\n                    Math.floor(reward.amount * 100) + \"%, but only in this town.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ECONOMY:\r\n                return \"Nothing. But some villagers came up with an idea to turn this into a tourist trap increasing the economy by \" +\r\n                    Math.floor(reward.amount * 100) + \"%, but only in this town.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STRENGTH:\r\n                return \"A Swoling Potion. Increases your Strength by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.DEXTERITY:\r\n                return \"A Manual depecting all the ways to stab someone. Increases your Dexterity by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.AGILITY:\r\n                return \"A Potion of Moving Real Fast. Increases your Agility by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ENDURANCE:\r\n                return \"Literally just steroids. Increases your Endurance by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RECOVERY:\r\n                return \"Magical healing goop. Increases your Recovery by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.DEFENSE:\r\n                return \"A Potion of Hardening. Kinky! Increases your Defense by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ACCURACY:\r\n                return \"A Magical Laser Pointer. Increases your Accuracy by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.MOONLIGHT:\r\n                return \"Moon Dust. Increases Moonlight earned this rebirth by \" + Math.floor(reward.amount * 100) + \"%.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.TALENTS:\r\n                return \"A wise old man who says he can teach you how to earn \" + reward.amount + \" talent points.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PERM_VPOWER:\r\n                return \"Body oil that makes the villagers muscles glisten, permanently increasing Villager Power by \" + Math.floor(reward.amount * 100) / 100 + \".\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PERM_VHEALTH:\r\n                return \"A pot of dubious looking stew, permanently increasing Villager Health by \" + Math.floor(reward.amount * 100) / 100 + \".\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STARSHARDS:\r\n                return \"A dead star which you can brutally harvest for \" + reward.amount + \" star shards.\";\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RITUAL_POINTS:\r\n                return \"You found a cult leader. You can take his lunch money to get \" + reward.amount + \" ritual points.\";\r\n        }\r\n    }\r\n\r\n    static getDungeonRewardImage(reward) {\r\n        switch (reward.type) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RESOURCES:\r\n                return { sprite: \"icons\", tile: 52 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.SHADE:\r\n                return { sprite: \"moonicons\", tile: 12 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.MOTES:\r\n                return { sprite: \"icons\", tile: 39 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.GOLD:\r\n                return { sprite: \"icons\", tile: 38 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.GEAR_LEVELS:\r\n                return { sprite: \"icons\", tile: 28 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RUNES:\r\n                return { sprite: \"runeicons\", tile: 1 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.WOOD:\r\n                return { sprite: \"icons\", tile: 32 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.LEATHER:\r\n                return { sprite: \"icons\", tile: 33 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.METAL:\r\n                return { sprite: \"icons\", tile: 34 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.FIBER:\r\n                return { sprite: \"icons\", tile: 35 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STONE:\r\n                return { sprite: \"icons\", tile: 36 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.CRYSTAL:\r\n                return { sprite: \"icons\", tile: 37 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PRODUCTION:\r\n                return { sprite: \"icons\", tile: 50 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ECONOMY:\r\n                return { sprite: \"bldicons\", tile: 8 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STRENGTH:\r\n                return { sprite: \"icons\", tile: 8 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.DEXTERITY:\r\n                return { sprite: \"icons\", tile: 9 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.AGILITY:\r\n                return { sprite: \"icons\", tile: 10 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ENDURANCE:\r\n                return { sprite: \"icons\", tile: 11 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RECOVERY:\r\n                return { sprite: \"icons\", tile: 12 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.DEFENSE:\r\n                return { sprite: \"icons\", tile: 13 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.ACCURACY:\r\n                return { sprite: \"icons\", tile: 14 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.MOONLIGHT:\r\n                return { sprite: \"moonicons\", tile: 20 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.TALENTS:\r\n                return { sprite: \"icons\", tile: 61 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PERM_VPOWER:\r\n                return { sprite: \"icons\", tile: 24 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.PERM_VHEALTH:\r\n                return { sprite: \"icons\", tile: 26 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.STARSHARDS:\r\n                return { sprite: \"icons2\", tile: 4 };\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DUNGEON.RITUAL_POINTS:\r\n                return { sprite: \"icons2\", tile: 6 };\r\n        }\r\n        return { sprite: \"icons\", tile: 0 };\r\n    }\r\n\r\n    static getStarPerkTooltip(perk) {\r\n        switch (perk.name) {\r\n            case \"Astra's Marble: Strength\":\r\n                return \"Your base Strength (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Dexterity\":\r\n                return \"Your base Dexterity (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Agility\":\r\n                return \"Your base Agility (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Endurance\":\r\n                return \"Your base Endurance (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Recovery\":\r\n                return \"Your base Recovery (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Defense\":\r\n                return \"Your base Defense (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Astra's Marble: Accuracy\":\r\n                return \"Your base Accuracy (ignoring gear) is increased by \" + (perk.level * 1000) + \"% + (1000%).\";\r\n            case \"Ingram's Bell: Infusion\":\r\n                return \"Base Stat Point cost reduced by \" + (perk.level * 2) + \" + (2).\";\r\n            case \"Ingram's Bell: Stat Points\":\r\n                return \"Gain \" + (perk.level) + \" + (1) more Stat Points when infusing.\";\r\n            case \"Ingram's Bell: Bounty\":\r\n                return \"Monsters drop \" + (perk.level * 50) + \"% + (50%) more resources.\";\r\n            case \"Myrah's Spear: Forge\":\r\n                return \"Reduces gear costs by \" + Math.floor((1 - Math.pow(0.95, perk.level)) * 100) + \"% - (~5%). This ignores the gear cost softcap.\";\r\n            case \"Myrah's Spear: Stellar Enchantments\":\r\n                return \"Gear gives \" + (perk.level * 10) + \"% + (10%) more stats.\";\r\n            case \"Myrah's Spear: Proficiency\":\r\n                return \"Increases gear scaling from stats by \" + (perk.level * 10) + \"% + (10%).\";\r\n            case \"Myrah's Spear: Starmetal\":\r\n                return \"Newly crafted gear starts at level \" + (perk.level * 5) + \" + (5).\";\r\n            case \"Mask of Zymesh: Invasion Power\":\r\n                return \"Divides Invasion Power by \" + (perk.level + 1) + \" + (1).\";\r\n            case \"Mask of Zymesh: Invasion Rewards\":\r\n                return \"Increases Invasion Rewards by \" + (perk.level * 50) + \"% + (50%).\";\r\n            case \"Mask of Zymesh: Solidification\":\r\n                return \"Monsters have a \" + (perk.level * 10) + \"% + (10%) chance per trait level to drop a Mote of Darkness. Having over 100% gives a chance \" +\r\n                    \"of dropping multiple Motes.\";\r\n            case \"Kella's Horn: Construction\":\r\n                return \"Buildings can be upgraded to tier 4.\";\r\n            case \"Kella's Horn: Worldsmith\":\r\n                return \"Resources start at Tier \" + (perk.level + 1) + \" + (1). Upgrades, Gear, and Buildings that used resources below this tier now use T\" +\r\n                    (perk.level + 1) + \" resources.\";\r\n            case \"Kella's Horn: Enchanted Tools\":\r\n                return \"Increases building production by \" + (perk.level * 25) + \"% + (25%).\";\r\n            case \"Kella's Horn: Fertility\":\r\n                return \"Town Population increases by \" + (perk.level + 3) + \"% + (1%) each week.\";\r\n            case \"Kella's Horn: Estate\":\r\n                return \"Houses hold \" + (perk.level * 50) + \"% + (50%) more people.\";\r\n            case \"Betrayer Star: Mists\":\r\n                return \"Increases Shade earned by \" + (perk.level * 25) + \"% + (25%).\";\r\n            case \"Betrayer Star: Forbidden Knowledge\":\r\n                return \"Talents give \" + (perk.level * 2) + \" + (2) more moonlight, before multipliers.\";\r\n            case \"Betrayer Star: Mysticism\":\r\n                return \"Cost multiplier for sacrificing resources becomes x\" + (13 - perk.level / 2) + \" - (0.5).\";\r\n        }\r\n    }\r\n\r\n    static getRitualTooltip(ritual) {\r\n        var statGrowth = (ritual.level * (12 + 12 + (ritual.level - 1) * 4)) / 2;\r\n        var ml = ritual.level === 0 ? 0 :\r\n            (ritual.moonlight < 0 ? Math.pow(1 + ritual.moonlight, ritual.level) * 100 : ritual.moonlight * ritual.level * 100);\r\n        ml = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(ml));\r\n        var ss = ritual.level === 0 ? 0 :\r\n            (ritual.starshards < 0 ? Math.pow(1 + ritual.starshards, ritual.level) * 100 : ritual.starshards * ritual.level * 100);\r\n        ss = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(ss));\r\n        switch (ritual.name) {\r\n            case \"Empower Strength\":\r\n                return \"Permanently increases your Strength by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Dexterity\":\r\n                return \"Permanently increases your Dexterity by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Agility\":\r\n                return \"Permanently increases your Agility by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Endurance\":\r\n                return \"Permanently increases your Endurance by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Recovery\":\r\n                return \"Permanently increases your Recovery by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Defense\":\r\n                return \"Permanently increases your Defense by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Empower Accuracy\":\r\n                return \"Permanently increases your Accuracy by \" + statGrowth + \" + (\" + (12 + ritual.level * 4) + \").\";\r\n            case \"Cult Infiltrators\":\r\n                return \"Permanently increases Villager Power by \" + (statGrowth / 2) + \" + (\" + (6 + ritual.level * 2) + \").\";\r\n            case \"Cult Warders\":\r\n                return \"Permanently increases Villager Health by \" + (statGrowth * 5) + \" + (\" + (60 + ritual.level * 20) + \").\";\r\n            case \"Corrupted Strength\":\r\n                return \"Increases your Strength, Dexterity, and Agility by \" + (ritual.level * 5) + \"% + (5%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (-ritual.starshards * 100) + \"%).\";\r\n            case \"Corrupted Endurance\":\r\n                return \"Increases your Endurance, Recovery, and Defense by \" + (ritual.level * 5) + \"% + (5%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (-ritual.starshards * 100) + \"%).\";\r\n            case \"Corrupted Accuracy\":\r\n                return \"Increases your Crit Chance by \" + (ritual.level * 10) + \"% + (10%) and \" +\r\n                    \"Accuracy by \" + (ritual.level * 15) + \"% + (15%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (-ritual.starshards * 100) + \"%).\";\r\n            case \"Wild Growth\":\r\n                return \"Increases tile yields by \" + (ritual.level * 10) + \"% + (10%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (-ritual.starshards * 100) + \"%).\";\r\n            case \"Hatchlings\":\r\n                return \"Town population grows \" + (ritual.level * 15) + \"% + (15%) faster and \" +\r\n                    \"Max Population is increased by \" + (ritual.level * 5) + \"% + (5%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (-ritual.starshards * 100) + \"%).\";\r\n            case \"Vile Offering\":\r\n                return \"Increases Resource and Mote of Darkness drops by \" + (ritual.level * 15) + \"% + (15%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%).\";\r\n            case \"Cult Towns\":\r\n                return \"Increases Villager Power and Health by \" + (ritual.level * 20) + \"% + (20%), but reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%).\";\r\n            case \"Ruinous Powers\":\r\n                return \"Enemy stats are increased by \" + (ritual.level * 25) + \"% + (25%). Increases \" +\r\n                    \"Moonlight by \" + ml + \"% + (\" + (ritual.moonlight * 100) + \"%).\";\r\n            case \"Betrayer's Gift\":\r\n                return \"All enemy trait levels are increased by \" + (ritual.level) + \" + (1). Increases \" +\r\n                    \"Star Shard Chance by \" + ss + \"% + (\" + (ritual.starshards * 100) + \"%).\";\r\n            case \"Call of The Void\":\r\n                return \"Base time between Invasions is reduced by \" + (ritual.level * 2) + \"s + (2s), \" +\r\n                    \"Invaders are \" + (ritual.level) + \" + (1) level higher. Increases \" +\r\n                    \"Moonlight by \" + ml + \"% + (\" + (ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% + (\" + (ritual.starshards * 100) + \"%).\";\r\n            case \"Desolation\":\r\n                return \"Tile Yields and Explore Speed are divided by \" + (1 + ritual.level * 0.5) + \" + (0.5). Increases \" +\r\n                    \"Moonlight by \" + ml + \"% + (\" + (ritual.moonlight * 100) + \"%) and \" +\r\n                    \"Star Shard Chance by \" + ss + \"% + (\" + (ritual.starshards * 100) + \"%).\";\r\n            case \"Apathy\":\r\n                return \"Town Growth, Taxes, Villager Power, and Villager Health are divided by \" + (1 + ritual.level * 0.5) + \" + (0.5). Increases \" +\r\n                    \"Moonlight by \" + ml + \"% + (\" + (ritual.moonlight * 100) + \"%).\";\r\n            case \"Vengeance\":\r\n                return \"Regions span \" + (ritual.level) + \" + (1) more level. Increases \" +\r\n                    \"Star Shard Chance by \" + ss + \"% + (\" + (ritual.starshards * 100) + \"%).\";\r\n            case \"Ritual of the Star Queen\":\r\n                return \"Give an offering of moonlight to the Star Queen. Reduces \" +\r\n                    \"Moonlight by \" + ml + \"% - (~\" + (-ritual.moonlight * 100) + \"%) and increases \" +\r\n                    \"Star Shard Chance by \" + ss + \"% + (\" + (ritual.starshards * 100) + \"%).\";\r\n            case \"Ritual of the Betrayer Star\":\r\n                return \"Give an offering of star shards to the Betrayer Star. Increases \" +\r\n                    \"Moonlight by \" + ml + \"% + (\" + (-ritual.moonlight * 100) + \"%) and reduces \" +\r\n                    \"Star Shard Chance by \" + ss + \"% - (~\" + (ritual.starshards * 100) + \"%).\";\r\n        }\r\n    }\r\n}\r\n\r\n// static fuckery\r\n\r\nTooltipRegistry.critPowerName = \"Aim\";\r\nTooltipRegistry.defenseName = \"Defense\";\r\nTooltipRegistry.accuracyName = \"Accuracy\";\n\n//# sourceURL=webpack:///./src/data/TooltipRegistry.js?");

/***/ }),

/***/ "./src/data/TownData.js":
/*!******************************!*\
  !*** ./src/data/TownData.js ***!
  \******************************/
/*! exports provided: TownData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TownData\", function() { return TownData; });\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _WorldData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _Dungeon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Dungeon */ \"./src/data/Dungeon.js\");\n/* harmony import */ var _RuneRegistry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./RuneRegistry */ \"./src/data/RuneRegistry.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TownData {\r\n    static getTechGoldCost(tech, tier) {\r\n        var vlvl = tech.level;\r\n        var aGold = tech.goldCosts[0];\r\n        var bGold = vlvl * tech.goldCosts[1];\r\n        var cGold = Math.pow(vlvl * tech.goldCosts[2], _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESEARCH_LEVEL_POWER);\r\n        var tGold = Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESEARCH_TIER_POWER, tier - 1);\r\n        return Math.floor(((aGold + bGold + cGold) / 5) * tGold) * 5 *\r\n            (1 - _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().challenges.capitalism.completions * 0.1);\r\n    }\r\n    static getTechResourceCost(tech, tier) {\r\n        var vlvl = tech.level;\r\n        var ret = [];\r\n        for (var i = 0; i < tech.resources.length; i++) {\r\n            var aGold = tech.resources[i][0];\r\n            var bGold = vlvl * tech.resources[i][1];\r\n            var cGold = Math.pow(vlvl * tech.resources[i][2], _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESEARCH_LEVEL_POWER);\r\n            var tGold = Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].RESEARCH_TIER_POWER, tier - 1);\r\n            ret.push(Math.floor(((aGold + bGold + cGold) / 5) * tGold) * 5);\r\n        }\r\n        return ret;\r\n    }\r\n    static calcFriendshipToLevel(level) {\r\n        var scalePower = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_POWER - (0.01 * _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().challenges.outcast.completions);\r\n        return _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_BASE + Math.floor(Math.pow(level * _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_FLAT, scalePower) /\r\n            _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_FLAT) * _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_FLAT;\r\n    }\r\n\r\n    constructor(tier, resourceTier) {\r\n        var moonData = new _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"]();\r\n\r\n        this.currentPopulation = 50;\r\n        this.maxPopulation = 100;\r\n        this.tier = tier;\r\n        this.resourceTier = resourceTier;\r\n        this.economyMulti = 1;\r\n        this.bountyMulti = 1;\r\n        this.productionMulti = 1;\r\n        this.exploreMulti = 1;\r\n        this.dungeonEconMulti = 1;\r\n        this.dungeonProdMulti = 1;\r\n        this.townDefenseBonus = 0;\r\n        this.paidProdMulti = 1;\r\n        this.buildingEconBonus = 0;\r\n        this.goldCapBonus = moonData.moonperks.heropouch.level * 100 +\r\n            moonData.challenges.capitalism.completions * 250;\r\n        this.baseIncome = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].BASE_TAX_INCOME + moonData.moonperks.vault.level * 0.1;\r\n        this.buildingIncome = 0;\r\n        this.townExplored = false;\r\n        this.researchEnabled = false;\r\n        this.alchemyEnabled = false;\r\n        this.friendship = 0;\r\n        this.friendshipLevel = 0;\r\n        this.friendshipToNext = 25;\r\n        this.tilesExplored = 0;\r\n        this.nightLabourActive = false;\r\n        this.autoTownUpgrade = _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault;\r\n\r\n        // dungeon variables\r\n        this.dungeons = [];\r\n\r\n        this.buildings = {\r\n            forge: {\r\n                name: \"Forge\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [50, 25, 15], resources: [[0, 0, 0], [0, 0, 0], [10, 10, 5], [0, 0, 0], [10, 10, 5], [0, 0, 0]]\r\n            },\r\n            guilds: {\r\n                name: \"Guilds\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [100, 50, 25], resources: [[0, 0, 0], [10, 10, 5], [0, 0, 0], [10, 10, 5], [0, 0, 0], [10, 10, 5]]\r\n            },\r\n            townhall: {\r\n                name: \"Town Hall\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [50, 30, 15], resources: [[15, 10, 8], [0, 0, 0], [0, 0, 0], [0, 0, 0], [10, 10, 5], [0, 0, 0]]\r\n            }\r\n        };\r\n\r\n        if (_ProgressionStore__WEBPACK_IMPORTED_MODULE_5__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true) {\r\n            this.buildings[\"barracks\"] = {\r\n                name: \"Barracks\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [75, 40, 20], resources: [[25, 15, 10], [0, 0, 0], [0, 0, 0], [20, 10, 8], [0, 0, 0], [0, 0, 0]]\r\n            }\r\n            this.buildings['armory'] = {\r\n                name: \"Armory\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [75, 40, 20], resources: [[0, 0, 0], [20, 10, 8], [25, 15, 10], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\r\n            }\r\n        }\r\n\r\n        this.upgrades = {\r\n            reinforcedhouses: {\r\n                name: \"Reinforced Houses\", level: 0, maxLevel: 10, requires: [],\r\n                goldCosts: [75, 75, 40], resources: [[0, 0, 0], [0, 0, 0], [20, 20, 10], [0, 0, 0], [40, 40, 20], [0, 0, 0]]\r\n            },\r\n            banking: {\r\n                name: \"Banking\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [20, 20, 15], resources: [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [15, 15, 8], [10, 10, 5]]\r\n            },\r\n            mapmaking: {\r\n                name: \"Map Making\", level: 0, maxLevel: -1, requires: [],\r\n                goldCosts: [25, 25, 15], resources: [[0, 0, 0], [10, 10, 5], [0, 0, 0], [5, 5, 5], [0, 0, 0], [0, 0, 0]]\r\n            },\r\n            tavern: {\r\n                name: \"Tavern\", level: 0, maxLevel: 3 + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.construction.level, requires: [],\r\n                goldCosts: [250, 150, 50], resources: [[150, 150, 40], [0, 0, 0], [0, 0, 0], [0, 0, 0], [100, 100, 35], [0, 0, 0]]\r\n            },\r\n            market: {\r\n                name: \"Market\", level: 0, maxLevel: 3 + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.construction.level, requires: [],\r\n                goldCosts: [400, 250, 60], resources: [[150, 150, 30], [75, 75, 30], [0, 0, 0], [75, 75, 30], [100, 100, 35], [75, 75, 30]]\r\n            }\r\n        };\r\n    }\r\n\r\n    //used for both buildings and upgrades\r\n    increaseTechLevel(tech) {\r\n        tech.level += 1;\r\n\r\n        switch (tech.name) {\r\n            case \"Forge\":\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().reduceCraftingCosts(this.tier, _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FORGE_REDUCTION);\r\n                break;\r\n            case \"Guilds\":\r\n                this.productionMulti += 0.1;\r\n                break;\r\n            case \"Town Hall\":\r\n                this.bountyMulti += 0.1;\r\n                break;\r\n            case \"Reinforced Houses\":\r\n                this.townDefenseBonus += 1;\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getCurrentRegion().handleReinforcedHouses();\r\n                break;\r\n            case \"Banking\":\r\n                this.goldCapBonus += 50;\r\n                break;\r\n            case \"Map Making\":\r\n                this.exploreMulti += 0.1;\r\n                break;\r\n            case \"Barracks\":\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().powerMulti += 0.05;\r\n                break;\r\n            case \"Armory\":\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().healthMulti += 0.05;\r\n                break;\r\n        }\r\n    }\r\n\r\n    calculateEconMulti(bonus) {\r\n        this.buildingEconBonus = bonus;\r\n    }\r\n    getTownIncome() {\r\n        return (Math.floor(this.currentPopulation) * this.baseIncome + this.buildingIncome) *\r\n            this.getEconomyMulti() / (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.apathy * 0.5) *\r\n            _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getArmyTaxMulti();\r\n    }\r\n    getGoldCap() {\r\n        var exploreBonus = _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.crownlands.level * 2 * this.tilesExplored;\r\n        return (this.currentPopulation * _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].GOLDCAP_PER_POP + this.goldCapBonus + exploreBonus) *\r\n            this.getEconomyMulti();\r\n    }\r\n    getProductionMulti() {\r\n        var nightLabourBonus = this.nightLabourActive === false ? 1 :\r\n            (1 + 0.001 * _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.nightlabour.level * this.currentPopulation);\r\n        var multi = this.productionMulti *\r\n            (1 + this.friendshipLevel * 0.01 * _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.motivatedlabor.level) *\r\n            nightLabourBonus * _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().productionMulti * this.dungeonProdMulti *\r\n            (1 + _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().getTalentLevel(\"governance\") * 0.04) *\r\n            (1 + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.tools.level * 0.25) * this.paidProdMulti *\r\n            (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().challenges.buildings.completions * 0.1);\r\n        if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().friendshipToProduction === true) {\r\n            return multi + this.friendshipLevel * 0.05;\r\n        } else {\r\n            return multi;\r\n        }\r\n    }\r\n    getEconomyMulti() {\r\n        return (1 + this.buildingEconBonus + (this.upgrades.banking.level * 0.05)) * this.dungeonEconMulti *\r\n            _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().econMulti * (1 + _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().getTalentLevel(\"governance\") * 0.04);\r\n    }\r\n    getMaxPopulation() { return this.maxPopulation * (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.hatchlings * 0.05); }\r\n    getMarketLevel() { return this.upgrades.market.level; }\r\n    getTavernLevel() { return this.upgrades.tavern.level; }\r\n\r\n    setMaxPopulation(pop) {\r\n        this.maxPopulation = pop;\r\n    }\r\n    setTilesExplored(explored) {\r\n        this.tilesExplored = explored;\r\n    }\r\n\r\n    addFriendship(value) {\r\n        this.friendship += value;\r\n        if (this.friendship >= this.friendshipToNext) {\r\n            this.friendshipLevel += 1;\r\n            this.friendshipToNext = TownData.calcFriendshipToLevel(this.friendshipLevel);\r\n        }\r\n    }\r\n    spendFriendship(value) {\r\n        this.friendship = Math.max(0, this.friendship - value);\r\n        for (var i = 0; i < this.friendshipLevel; i++) {\r\n            var temp = TownData.calcFriendshipToLevel(i);\r\n            if (this.friendship < temp) {\r\n                this.friendshipLevel = i;\r\n                this.friendshipToNext = temp;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    getFriendshipBonus() {\r\n        return 1 + (this.friendshipLevel * _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].FRIENDSHIP_SHADE_BONUS);\r\n    }\r\n    toggleNightLabour() {\r\n        if (this.nightLabourActive === true) {\r\n            this.baseIncome = _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].BASE_TAX_INCOME + _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.vault.level * 0.1;\r\n            this.nightLabourActive = false;\r\n        } else {\r\n            this.baseIncome = (_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].BASE_TAX_INCOME + _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.vault.level * 0.1) / 2;\r\n            this.nightLabourActive = true;\r\n        }\r\n    }\r\n\r\n    killPopulation(value) {\r\n        this.currentPopulation = Math.max(0, this.currentPopulation - value);\r\n    }\r\n\r\n    uncoverDungeon(region) {\r\n        if (this.dungeons.length >= 3) {\r\n            return;\r\n        }\r\n        var tier = this.dungeons.length;\r\n        var lvl = region.regionLevel * _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().regionDifficultyIncrease + 5 + tier * 5;\r\n        var difficulty = Math.floor((1 + lvl) * Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].MONSTER_STATSCALE_PER_LEVEL, lvl) *\r\n            Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].MONSTER_STATSCALE_PER_REGION, region.regionLevel));\r\n        this.dungeons.push(new _Dungeon__WEBPACK_IMPORTED_MODULE_6__[\"Dungeon\"](lvl, difficulty, tier, region.regionLevel, 5 + tier * 5));\r\n    }\r\n\r\n    areDungeonsComplete() {\r\n        if (this.dungeons.length != 3) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.dungeons.length; i++) {\r\n            if (this.dungeons[i].completedRooms < this.dungeons[i].maxRooms) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    chooseReward(reward) {\r\n        switch (reward.type) {\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.RESOURCES:\r\n                var region = _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getCurrentRegion();\r\n                var res = region.resourcesPerDay;\r\n                var avg = 0;\r\n                for (var i = 0; i < res.length; i++) {\r\n                    avg += res[i];\r\n                }\r\n                avg = Math.ceil(avg / res.length) * reward.amount;\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addResource([avg, avg, avg, avg, avg, avg], Math.min(7, region.regionLevel));\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.SHADE:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addShade(reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.MOTES:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addMote(reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.GOLD:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addGold(reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.GEAR_LEVELS:\r\n                var player = _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance();\r\n                if (player.weapon !== undefined) {\r\n                    var wep = player.weapon;\r\n                    player.unequip(wep.slotType);\r\n                    wep.bringToLevel(wep.level + reward.amount);\r\n                    player.equip(wep);\r\n                }\r\n                if (player.armor !== undefined) {\r\n                    var arm = player.armor;\r\n                    player.unequip(arm.slotType);\r\n                    arm.bringToLevel(arm.level + reward.amount);\r\n                    player.equip(arm);\r\n                }\r\n                if (player.trinket !== undefined) {\r\n                    var trink = player.trinket;\r\n                    player.unequip(trink.slotType);\r\n                    trink.bringToLevel(trink.level + reward.amount);\r\n                    player.equip(trink);\r\n                }\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.RUNES:\r\n                var runeLevel = 1 + Math.floor(_WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getCurrentRegion().regionLevel / 2);\r\n                for (var i = 0; i < reward.amount; i++) {\r\n                    _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addRune(_RuneRegistry__WEBPACK_IMPORTED_MODULE_7__[\"RuneRegistry\"].getRandomRuneAtLevel(runeLevel));\r\n                }\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.WOOD:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('wood', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.LEATHER:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('leather', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.METAL:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('metal', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.FIBER:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('fiber', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.STONE:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('stone', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.CRYSTAL:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('crystal', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.PRODUCTION:\r\n                this.dungeonProdMulti += reward.amount;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.ECONOMY:\r\n                this.dungeonEconMulti += reward.amount;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.STRENGTH:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('strength', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.DEXTERITY:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('dexterity', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.AGILITY:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('agility', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.ENDURANCE:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('endurance', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.RECOVERY:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('recovery', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.DEFENSE:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('defense', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.ACCURACY:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('accuracy', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.MOONLIGHT:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().multiplyDungeonBonus('moonlight', 1 + reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.TALENTS:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addTalentPoints(reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.PERM_VPOWER:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addBaseVillagerStats(reward.amount, 0);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.PERM_VHEALTH:\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addBaseVillagerStats(0, reward.amount);\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.STARSHARDS:\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().starshardsEarned += reward.amount;\r\n                break;\r\n            case _Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].DUNGEON.RITUAL_POINTS:\r\n                _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().ritualPoints += reward.amount;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    endOfDay() {\r\n        _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addShade(this.currentPopulation * 0.75 *\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.shadow3.level * _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().getShadowBonus() *\r\n            this.getProductionMulti());\r\n        if (this.nightLabourActive === true) {\r\n            var cost = _MoonlightData__WEBPACK_IMPORTED_MODULE_3__[\"MoonlightData\"].getInstance().moonperks.nightlabour.level * 0.5 * this.currentPopulation;\r\n            if (_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().gold >= cost) {\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addGold(-cost);\r\n            } else {\r\n                this.nightLabourActive = false;\r\n            }\r\n        }\r\n        if (this.autoTownUpgrade === true) {\r\n            var player = new _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"]();\r\n            for (const prop in this.buildings) {\r\n                var gold = TownData.getTechGoldCost(this.buildings[prop], this.tier);\r\n                var resCost = TownData.getTechResourceCost(this.buildings[prop], this.tier);\r\n                var resTier = Math.min(7, this.resourceTier);\r\n                if (player.gold >= gold && _utils_Common__WEBPACK_IMPORTED_MODULE_10__[\"Common\"].canCraft(resCost, player.resources[resTier]) === true &&\r\n                    this.friendshipLevel >= this.buildings[prop].level) {\r\n                    player.addGold(-gold);\r\n                    player.spendResource(resCost, resTier);\r\n                    this.increaseTechLevel(this.buildings[prop]);\r\n                }\r\n            }\r\n            for (const prop in this.upgrades) {\r\n                if (this.upgrades[prop].level < this.upgrades[prop].maxLevel || this.upgrades[prop].maxLevel === -1) {\r\n                    var gold = TownData.getTechGoldCost(this.upgrades[prop], this.tier);\r\n                    var resCost = TownData.getTechResourceCost(this.upgrades[prop], this.tier);\r\n                    var resTier = Math.min(7, this.resourceTier);\r\n                    if (player.gold >= gold && _utils_Common__WEBPACK_IMPORTED_MODULE_10__[\"Common\"].canCraft(resCost, player.resources[resTier]) === true &&\r\n                        this.friendshipLevel >= this.upgrades[prop].level) {\r\n                        player.addGold(-gold);\r\n                        player.spendResource(resCost, resTier);\r\n                        this.increaseTechLevel(this.upgrades[prop]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    endOfWeek(region) {\r\n        if (this.townExplored === true) {\r\n            if (_WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getArmySize() < _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().getArmySizeMax()) {\r\n                _WorldData__WEBPACK_IMPORTED_MODULE_2__[\"WorldData\"].getInstance().addSoldiers(1);\r\n                this.currentPopulation -= 1;\r\n            }\r\n            if (this.currentPopulation > this.getMaxPopulation()) {\r\n                this.currentPopulation = Math.max(this.getMaxPopulation(), this.currentPopulation * 0.9);\r\n            } else {\r\n                var growthRate = (_Statics__WEBPACK_IMPORTED_MODULE_1__[\"Statics\"].POPULATION_GROWTH + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.fertility.level * 0.01) *\r\n                    (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.hatchlings * 0.25) /\r\n                    (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.apathy * 0.5);\r\n                this.currentPopulation = Math.min(this.getMaxPopulation(), this.currentPopulation * (1 + growthRate));\r\n            }\r\n            _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addGold(this.getTownIncome());\r\n            if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().productionBuildingCost > 0) {\r\n                var bldCost = region.getProdBuildingCount() * _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().productionBuildingCost * 7;\r\n                if (bldCost > _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().gold) {\r\n                    this.paidProdMulti = _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().gold / bldCost;\r\n                } else {\r\n                    this.paidProdMulti = 1;\r\n                }\r\n                _PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addGold(-bldCost);\r\n            }\r\n        }\r\n    }\r\n\r\n    save() {\r\n        var buildings = [];\r\n        for (const prop in this.buildings) {\r\n            buildings.push([prop, this.buildings[prop].level]);\r\n        }\r\n        var upgrades = [];\r\n        for (const prop in this.upgrades) {\r\n            upgrades.push([prop, this.upgrades[prop].level]);\r\n        }\r\n        var dungeons = [];\r\n        for (var i = 0; i < this.dungeons.length; i++) {\r\n            dungeons.push(this.dungeons[i].save());\r\n        }\r\n        var saveObj = {\r\n            cp: this.currentPopulation,\r\n            mp: this.maxPopulation,\r\n            t: this.tier,\r\n            rt: this.resourceTier,\r\n            em: this.economyMulti,\r\n            bm: this.bountyMulti,\r\n            pm: this.productionMulti,\r\n            exm: this.exploreMulti,\r\n            bi: this.baseIncome,\r\n            bld: buildings,\r\n            up: upgrades,\r\n            dng: dungeons,\r\n            gc: this.goldCapBonus,\r\n            te: this.townExplored,\r\n            re: this.researchEnabled,\r\n            fr: this.friendship,\r\n            frl: this.friendshipLevel,\r\n            alc: this.alchemyEnabled,\r\n            tl: this.tilesExplored,\r\n            dpm: this.dungeonProdMulti,\r\n            dem: this.dungeonEconMulti,\r\n            ppm: this.paidProdMulti,\r\n            nl: this.nightLabourActive,\r\n            au: this.autoTownUpgrade\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n    load(saveObj, ver) {\r\n        this.currentPopulation = saveObj.cp;\r\n        this.maxPopulation = saveObj.mp;\r\n        this.tier = saveObj.t;\r\n        this.economyMulti = saveObj.em;\r\n        this.bountyMulti = saveObj.bm;\r\n        this.productionMulti = saveObj.pm;\r\n        this.exploreMulti = saveObj.exm;\r\n        this.baseIncome = saveObj.bi;\r\n        this.goldCapBonus = saveObj.gc;\r\n        this.townExplored = saveObj.te;\r\n        this.researchEnabled = saveObj.re;\r\n        this.friendship = saveObj.fr;\r\n        this.friendshipLevel = saveObj.frl;\r\n        this.alchemyEnabled = saveObj.alc;\r\n        this.tilesExplored = saveObj.tl ? saveObj.tl : 0;\r\n        this.dungeonProdMulti = saveObj.dpm ? saveObj.dpm : 1;\r\n        this.dungeonEconMulti = saveObj.dem ? saveObj.dem : 1;\r\n        this.paidProdMulti = saveObj.ppm ? saveObj.ppm : 1;\r\n        this.resourceTier = saveObj.rt ? saveObj.rt : this.tier - 1;\r\n        this.nightLabourActive = saveObj.nl ? saveObj.nl : false;\r\n        this.autoTownUpgrade = saveObj.au ? saveObj.au : _DynamicSettings__WEBPACK_IMPORTED_MODULE_4__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault;\r\n        this.friendshipToNext = TownData.calcFriendshipToLevel(this.friendshipLevel);\r\n        for (var i = 0; i < saveObj.bld.length; i++) {\r\n            if (this.buildings[saveObj.bld[i][0]] !== undefined) {\r\n                this.buildings[saveObj.bld[i][0]].level = saveObj.bld[i][1];\r\n            }\r\n        }\r\n        for (var i = 0; i < saveObj.up.length; i++) {\r\n            this.upgrades[saveObj.up[i][0]].level = saveObj.up[i][1];\r\n        }\r\n        if (saveObj.dng !== undefined) {\r\n            for (var i = 0; i < saveObj.dng.length; i++) {\r\n                this.dungeons.push(_Dungeon__WEBPACK_IMPORTED_MODULE_6__[\"Dungeon\"].loadFromFile(saveObj.dng[i], ver));\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/TownData.js?");

/***/ }),

/***/ "./src/data/WizardBlock.js":
/*!*********************************!*\
  !*** ./src/data/WizardBlock.js ***!
  \*********************************/
/*! exports provided: WizardBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WizardBlock\", function() { return WizardBlock; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _AdventurerBlock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AdventurerBlock */ \"./src/data/AdventurerBlock.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass WizardBlock extends _AdventurerBlock__WEBPACK_IMPORTED_MODULE_3__[\"AdventurerBlock\"] {\r\n    constructor(player) {\r\n        super(player);\r\n        this.player = player;\r\n        this.moonData = new _MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"]();\r\n        this.encounterCounter = 0;\r\n    }\r\n\r\n    convert(block) {\r\n        this.stats = {\r\n            strength: block.stats.strength,\r\n            dexterity: block.stats.dexterity,\r\n            agility: block.stats.agility,\r\n            endurance: block.stats.endurance,\r\n            recovery: block.stats.recovery,\r\n            defense: block.stats.defense,\r\n            accuracy: block.stats.accuracy,\r\n            hit: 40,\r\n            evasion: 30,\r\n            spellPower: 0,\r\n            critResistance: 25\r\n        };\r\n        this.statBonuses = {\r\n            health: 0,\r\n            damageMin: 0,\r\n            damageMax: 0,\r\n            strength: 0,\r\n            dexterity: 0,\r\n            agility: 0,\r\n            endurance: 0,\r\n            recovery: 0,\r\n            defense: 0,\r\n            accuracy: 0,\r\n            hit: 0,\r\n            evasion: 0,\r\n            spellPower: 0,\r\n            critResistance: 0,\r\n            critChance: 0,\r\n            healthRegen: 0,\r\n            armor: 0,\r\n            shield: 0,\r\n            magicDamage: 0\r\n        };\r\n        this.level = 0;\r\n        this.currentHealth = Math.min(this.MaxHealth(), block.currentHealth);\r\n        this.attackCooldown = block.attackCooldown;\r\n        this.attackSpeed = 1800;\r\n        this.cantripCounter = 0;\r\n        this.firstCounter = 0;\r\n        this.secondCounter = 0;\r\n        this.thirdCounter = 0;\r\n        this.fourthCounter = 0;\r\n        this.fifthCounter = 0;\r\n        this.hasteAttacks = 0;\r\n\r\n        //copy over event handlers because setting that back up sucks\r\n        this.healthChangedHandlers = block.healthChangedHandlers;\r\n        this.attackCooldownChangedHandlers = block.attackCooldownChangedHandlers;\r\n        this.animationChangedHandlers = block.animationChangedHandlers;\r\n    }\r\n\r\n    rebirth() {\r\n        // this should never be called\r\n    }\r\n\r\n    MaxHealth() {\r\n        var end = this.Endurance();\r\n        var ret = (this.statBonuses.health * this._getScale(end, this.statBonuses.health)) + end * this.player.classStatics.HP_PER_ENDURANCE;\r\n        ret += end * this.player.getTalentLevel(\"wizend\") * 0.75;\r\n        ret += ret * this.player.runeBonuses.healthPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Hit() {\r\n        var dex = this.Dexterity();\r\n        var ret = this.stats.hit + (this.statBonuses.hit * this._getScale(dex, this.statBonuses.hit)) + dex * this.player.classStatics.HIT_PER_DEXTERITY;\r\n        ret += dex * this.player.getTalentLevel(\"wizdex\");\r\n        ret += ret * this.player.runeBonuses.hitPercent;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Evasion() {\r\n        var agi = this.Agility();\r\n        var ret = this.stats.evasion + (this.statBonuses.evasion * this._getScale(agi, this.statBonuses.evasion)) + agi * this.player.classStatics.EVA_PER_AGILITY;\r\n        ret += agi * this.player.getTalentLevel(\"wizagi\");\r\n        ret += ret * this.player.runeBonuses.evaPercent;\r\n        if (this.hasteAttacks > 0) {\r\n            ret += ret * this.player.getTalentLevel('quicken') * 0.05;\r\n        }\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    Toughness() {\r\n        var end = this.Endurance();\r\n        var ret = this.stats.critResistance + (this.statBonuses.critResistance * this._getScale(end, this.statBonuses.critResistance)) +\r\n            end * this.player.classStatics.CRITRESISTANCE_PER_ENDURANCE;\r\n        if (this.shieldValue > 0) {\r\n            ret += ret * this.player.getTalentLevel('shell') * 0.15;\r\n        }\r\n        return Math.floor(ret);\r\n    }\r\n    Aim() {\r\n        var acc = this.Accuracy();\r\n        var ret = this.stats.spellPower + (this.statBonuses.spellPower * this._getScale(acc, this.statBonuses.spellPower)) +\r\n            acc * this.player.classStatics.SPELL_POWER_PER_POWER * (1 + this.player.getTalentLevel('first') * 0.01) *\r\n            (1 + this.player.getTalentLevel('second') * 0.01) * (1 + this.player.getTalentLevel('third') * 0.01) *\r\n            (1 + this.player.getTalentLevel('fourth') * 0.01) * (1 + this.player.getTalentLevel('fifth') * 0.01) *\r\n            (1 + this.player.getTalentLevel('runemancy') * this.player.getTotalSocketedRunes() * 0.01) *\r\n            (1 + this.player.getTalentLevel('codex') * 0.06);\r\n        ret += this.statBonuses.damageMax * (1 + this.player.runeBonuses.weaponPercent) *\r\n            this._getScale(this.Strength()) * this.player.getTalentLevel('magicweapon') * 0.1;\r\n        ret += ret * this.player.runeBonuses.critPercent;\r\n        ret += ret * this.CritChance();\r\n        return Math.floor(ret);\r\n    }\r\n    DamageMin() {\r\n        var str = this.Strength();\r\n        var ret = this.statBonuses.damageMin * (1 + this.player.runeBonuses.weaponPercent) * this._getScale(str) +\r\n            str * this.player.classStatics.STRENGTH_DMG_MIN;\r\n        ret += str * this.player.getTalentLevel(\"wizstr\") * 0.05 * this.player.classStatics.STRENGTH_DMG_MIN;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    DamageMax() {\r\n        var str = this.Strength();\r\n        var ret = this.statBonuses.damageMax * (1 + this.player.runeBonuses.weaponPercent) * this._getScale(str) +\r\n            str * this.player.classStatics.STRENGTH_DMG_MAX;\r\n        ret += str * this.player.getTalentLevel(\"wizstr\") * 0.05 * this.player.classStatics.STRENGTH_DMG_MAX;\r\n        return Math.floor(Math.max(1, ret));\r\n    }\r\n    HealthRegen() {\r\n        var rec = this.Recovery();\r\n        var ret = (this.statBonuses.healthRegen * this._getScale(rec, this.statBonuses.healthRegen)) + rec * this.player.classStatics.REGEN_PER_RECOVERY;\r\n        ret += ret * this.player.runeBonuses.regenPercent;\r\n        return Math.floor(ret * 10) / 10;\r\n    }\r\n    Armor() {\r\n        var def = this.Defense();\r\n        var ret = def * this.player.classStatics.ARMOR_PER_WARD + this.statBonuses.armor * (1 + this.player.runeBonuses.armorPercent) *\r\n            this._getScale(def, this.statBonuses.armor);\r\n        return Math.floor(ret - this.corrosion);\r\n    }\r\n    Shield() {\r\n        var ret = this.Defense() * this.player.classStatics.SHIELD_PER_WARD +\r\n            this.statBonuses.armor * (1 + this.player.runeBonuses.armorPercent) *\r\n            this._getScale(this.Defense()) * this.player.getTalentLevel('magicarmor') * 0.2;\r\n        return Math.floor(ret);\r\n    }\r\n    AttackSpeed() {\r\n        var ret = this.attackSpeed / (1 + this.player.runeBonuses.baseAttackSpeed);\r\n        return ret;\r\n    }\r\n    CritChance() {\r\n        var ret = this.statBonuses.critChance;\r\n        ret += this.player.getTalentLevel(\"crit\") * 0.03;\r\n        ret += this.player.runeBonuses.critChance;\r\n        ret += _RitualData__WEBPACK_IMPORTED_MODULE_4__[\"RitualData\"].getInstance().activePerks.playercrits * 0.1;\r\n        return ret;\r\n    }\r\n    CritDamageMulti() {\r\n        return 1;\r\n    }\r\n\r\n    equip(gear) {\r\n        var bonus = gear.getStatBonuses();\r\n        for (const prop in bonus) {\r\n            switch (prop) {\r\n                case 'critPower':\r\n                    this.statBonuses['spellPower'] += Math.floor(bonus[prop] / 3);\r\n                    break;\r\n                default:\r\n                    this.statBonuses[prop] += bonus[prop];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    unequip(gear) {\r\n        var bonus = gear.getStatBonuses();\r\n        for (const prop in bonus) {\r\n            switch (prop) {\r\n                case 'critPower':\r\n                    this.statBonuses['spellPower'] -= Math.floor(bonus[prop] / 3);\r\n                    break;\r\n                default:\r\n                    this.statBonuses[prop] -= bonus[prop];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    initCombat() {\r\n        this.corrosion = 0;\r\n        this.attackCooldown = 0;\r\n        this.shieldValue = this.Shield() + this.player.runeBonuses.defToShield * this.Defense();\r\n        this._onHealthChanged();\r\n    }\r\n\r\n    takeDamage(damage, hitType, dmgType) {\r\n        var dmg = damage;\r\n        if (hitType === _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_CRIT) {\r\n            dmg = dmg * Math.pow(0.92, this.player.runeBonuses.enemyCrit);\r\n        }\r\n        dmg = super.takeDamage(dmg, hitType, dmgType);\r\n        return dmg;\r\n    }\r\n\r\n    tickRegen(delta, inCombat = true) {\r\n        var oldVal = this.currentHealth;\r\n        var regen = this.HealthRegen()\r\n        this.currentHealth = Math.min(this.MaxHealth(), this.currentHealth + regen * (delta / 1000));\r\n        if (oldVal != this.currentHealth) {\r\n            this._onHealthChanged();\r\n        }\r\n    }\r\n    heal(value) {\r\n        this.currentHealth = Math.min(this.MaxHealth(), this.currentHealth + value);\r\n    }\r\n\r\n    _endAttack() {\r\n        this.attackCooldown = 0;\r\n        if (this.hasteAttacks > 0) {\r\n            this.hasteAttacks -= 1;\r\n            this.attackCooldown = this.AttackSpeed() * 0.075 * this.player.getTalentLevel(\"haste\");\r\n        }\r\n        this._onAttackCooldownChanged();\r\n    }\r\n\r\n    _castPowerWordKill(creature) {\r\n        var max = this.Aim() * (1 + this.player.getTalentLevel('powerwordkill') * 0.25) + 1;\r\n        var rawDmg = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(1, max);\r\n\r\n        if (this.player.getTalentLevel('powerwordstun') > 0 &&\r\n            rawDmg / max > 0.8 - this.player.getTalentLevel('powerwordstun') * 0.07) {\r\n            creature.stunTimer = 2000;\r\n        }\r\n        var dmg = creature.takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC);\r\n        creature.playAnimation(\"skull\");\r\n        this.fifthCounter = 9;\r\n        return dmg;\r\n    }\r\n    _castHaste(creature) {\r\n        this.fourthCounter = 6;\r\n        this.hasteAttacks = 3;\r\n        this.playAnimation(\"haste\");\r\n        return 0;\r\n    }\r\n    _castFireball(creatureList) {\r\n        this.thirdCounter = 5;\r\n        var rawDmg = this.Aim() * (0.07 * this.player.getTalentLevel('fireball')) + 1;\r\n        for (var i = 0; i < creatureList.length; i++) {\r\n            var dmg = creatureList[i].takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC);\r\n            if (this.player.getTalentLevel('ignite') > 0) {\r\n                creatureList[i].igniteTimer = 1000 + 500 * this.player.getTalentLevel('ignite');\r\n                creatureList[i].igniteDamage = dmg * 0.25;\r\n                if (creatureList[i].shieldValue > 0) {\r\n                    creatureList[i].igniteDamage = creatureList[i].igniteDamage / 2;\r\n                }\r\n            }\r\n            creatureList[i].playAnimation(\"fireball\");\r\n        }\r\n        this._endAttack();\r\n        return 0;\r\n    }\r\n    _castBarrier(creature) {\r\n        this.secondCounter = 13;\r\n        this.playAnimation(\"barrier\");\r\n        this.shieldValue += this.Defense() * this.player.getTalentLevel('barrier') * 0.4;\r\n        this._onHealthChanged();\r\n        return 0;\r\n    }\r\n    _castEntangle(creature) {\r\n        this.firstCounter = 4;\r\n        creature.playAnimation(\"entangle\");\r\n        creature.slowTimer = 2000 + 250 * this.player.getTalentLevel('entangle');\r\n        creature.slowPercent = 0.4;\r\n        creature.slowDamage = this.Evasion() * this.player.getTalentLevel('thorns') * 0.03;\r\n        if (creature.shieldValue > 0) {\r\n            creature.slowDamage = creature.slowDamage / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    _castCantrip(creature) {\r\n        var rawDmg = this.Aim() * (0.2 + this.player.getTalentLevel('cantrip') * 0.09) + 1;\r\n        creature.playAnimation(\"magicmissile\");\r\n        return creature.takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC);\r\n    }\r\n\r\n    canCastFireball() {\r\n        return (this.player.getTalentLevel(\"third\") >= 3 && this.player.getTalentLevel('fireball') > 0 && this.thirdCounter <= 0);\r\n    }\r\n\r\n    attack(creature) {\r\n        var dmg = 0;\r\n        var didCast = false;\r\n\r\n        var thorns = creature.findTrait(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TRAIT_THORNS);\r\n        if (thorns !== undefined) {\r\n            this.takeDamage(creature.Armor() * 0.2, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_MAGIC);\r\n        }\r\n\r\n        if (this.player.getTalentLevel(\"fifth\") >= 5 && this.player.getTalentLevel('powerwordkill') > 0 &&\r\n            this.fifthCounter <= 0) {\r\n            dmg = this._castPowerWordKill(creature);\r\n            didCast = true;\r\n        } else if (this.player.getTalentLevel(\"fourth\") >= 4 && this.player.getTalentLevel('haste') > 0 &&\r\n            this.fourthCounter <= 0) {\r\n            dmg = this._castHaste(creature);\r\n        } else if (this.player.getTalentLevel(\"second\") >= 2 && this.player.getTalentLevel('barrier') > 0 &&\r\n            this.secondCounter <= 0) {\r\n            dmg = this._castBarrier(creature);\r\n        } else if (this.player.getTalentLevel(\"first\") >= 1 && this.player.getTalentLevel('entangle') > 0 &&\r\n            this.firstCounter <= 0) {\r\n            dmg = this._castEntangle(creature);\r\n            didCast = true;\r\n        } else if (this.player.getTalentLevel(\"cantrip\") > 0) {\r\n            dmg = this._castCantrip(creature);\r\n            didCast = true;\r\n        }\r\n        this.fifthCounter -= 1;\r\n        this.fourthCounter -= 1;\r\n        this.thirdCounter -= 1;\r\n        this.secondCounter -= 1;\r\n        this.firstCounter -= 1;\r\n        var rawDmg = this.rollDamage();\r\n        dmg += creature.takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_NORMAL);\r\n        if (didCast === false) {\r\n            creature.playAnimation(\"mace\");\r\n        }\r\n        this._endAttack();\r\n        return dmg;\r\n    }\r\n    cleave(creature) {\r\n        if (Math.random() < this.player.getTalentLevel(\"stun\") * 0.05) {\r\n            creature.stunTimer = 500;\r\n        }\r\n        var rawDmg = this.Strength() * this.player.getTalentLevel(\"cleave\") * 0.2;\r\n        return creature.takeDamage(rawDmg, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].HIT_NORMAL, _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].DMG_NORMAL);\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            stat: this.stats,\r\n            ha: this.hitAnim,\r\n            ca: this.critAnim,\r\n            chp: this.currentHealth,\r\n            acd: this.attackCooldown\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        this.stats = saveObj.stat;\r\n        this.hitAnim = saveObj.ha;\r\n        this.critAnim = saveObj.ca;\r\n        this.currentHealth = saveObj.chp;\r\n        this.attackCooldown = saveObj.acd;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/WizardBlock.js?");

/***/ }),

/***/ "./src/data/WorldData.js":
/*!*******************************!*\
  !*** ./src/data/WorldData.js ***!
  \*******************************/
/*! exports provided: WorldData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorldData\", function() { return WorldData; });\n/* harmony import */ var _Region__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Region */ \"./src/data/Region.js\");\n/* harmony import */ var _WorldTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WorldTime */ \"./src/data/WorldTime.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _PlayerData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _MoonlightData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _StarData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _RitualData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./RitualData */ \"./src/data/RitualData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass WorldData {\r\n    constructor() {\r\n        if (!WorldData.instance) {\r\n            var regSize = _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().regionSize;\r\n            this.regionList = [];\r\n            this.regionList.push(new _Region__WEBPACK_IMPORTED_MODULE_0__[\"Region\"](regSize[0], regSize[1], 0, \"temperate\", this._randomizeTraits(0)));\r\n            this.currentRegion = 0;\r\n            this.nextRegions = [];\r\n            this.timeAtRunStart = 0;\r\n            this.time = new _WorldTime__WEBPACK_IMPORTED_MODULE_1__[\"WorldTime\"]();\r\n            this.time.registerEvent(\"onDayEnd\", () => { this.updateDay(); });\r\n            this.time.registerEvent(\"onWeekEnd\", () => { this.updateWeek(); });\r\n            this.onRegionChangedHandlers = [];\r\n            this.onWorldChangedHandlers = [];\r\n            this.invasionPower = 1;\r\n            this.invasionReward = 1;\r\n            this.invasionRegion = 0;\r\n            this.invasionPowerHandlers = [];\r\n            this.starshardsEarned = 0;\r\n            this.villagerPower = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().baseVillagerPower;\r\n            this.powerMulti = 1;\r\n            this.villagerHealth = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().baseVillagerHealth;\r\n            this.healthMulti = 1;\r\n            this.garrisonBonus = 0;\r\n            this.armySize = 0;\r\n\r\n            WorldData.instance = this;\r\n        }\r\n\r\n        return WorldData.instance;\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!WorldData.instance) {\r\n            return new WorldData();\r\n        }\r\n        return WorldData.instance;\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        if (event === 'invasionPowerChanged') {\r\n            this.invasionPowerHandlers.push(callback);\r\n        }\r\n    }\r\n\r\n    rebirth() {\r\n        var regSize = _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().regionSize;\r\n        this.regionList = [];\r\n        this.regionList.push(new _Region__WEBPACK_IMPORTED_MODULE_0__[\"Region\"](regSize[0], regSize[1], 0, \"temperate\", this._randomizeTraits(0)));\r\n        this.currentRegion = 0;\r\n        this.nextRegions = [];\r\n        this.timeAtRunStart = this.time.time;\r\n        this.invasionPower = 1;\r\n        this.invasionReward = 1;\r\n        this.invasionRegion = 0;\r\n        this.starshardsEarned = 0;\r\n        this.villagerPower = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().baseVillagerPower;\r\n        this.powerMulti = 1;\r\n        this.villagerHealth = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().baseVillagerHealth;\r\n        this.healthMulti = 1;\r\n        this.garrisonBonus = 0;\r\n        this._onRegionChangedHandler();\r\n    }\r\n\r\n    onRegionChanged(callback) {\r\n        this.onRegionChangedHandlers.push(callback);\r\n    }\r\n    onWorldChanged(callback) {\r\n        this.onWorldChangedHandlers.push(callback);\r\n    }\r\n\r\n    _onRegionChangedHandler() {\r\n        for (var i = 0; i < this.onRegionChangedHandlers.length; i++) {\r\n            this.onRegionChangedHandlers[i]();\r\n        }\r\n    }\r\n    _onWorldChangedHandler() {\r\n        for (var i = 0; i < this.onWorldChangedHandlers.length; i++) {\r\n            this.onWorldChangedHandlers[i]();\r\n        }\r\n    }\r\n\r\n    getRegion(idx) {\r\n        return this.regionList[idx];\r\n    }\r\n    setRegion(idx) {\r\n        this.currentRegion = idx;\r\n    }\r\n    getCurrentRegion() {\r\n        return this.getRegion(this.currentRegion);\r\n    }\r\n    setCurrentRegion(index) {\r\n        this.currentRegion = index;\r\n        this._onRegionChangedHandler();\r\n    }\r\n    getGoldCap() {\r\n        var cap = 0;\r\n        for (var i = 0; i < this.regionList.length; i++) {\r\n            cap += this.regionList[i].townData.getGoldCap();\r\n        }\r\n        return cap;\r\n    }\r\n    getInvasionPower() {\r\n        return 1 + (this.invasionPower - 1) / (1 + _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().getTalentLevel('guardian') * 0.2) /\r\n            (1 + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.invasionpower.level);\r\n    }\r\n    getInvasionReward() {\r\n        return 1 + (this.invasionReward - 1) * (1 + _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().perks.invasionrewards.level * 0.5);\r\n    }\r\n    getVillagerPower() {\r\n        return Math.round(this.villagerPower * this.powerMulti *\r\n            (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.devotion.level * 0.1) *\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.culttowns * 0.25) /\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.apathy * 0.5));\r\n    }\r\n    getVillagerHealth() {\r\n        return Math.round(this.villagerHealth * this.healthMulti *\r\n            (1 + _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonperks.devotion.level * 0.1) *\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.culttowns * 0.25) /\r\n            (1 + _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.apathy * 0.5));\r\n    }\r\n    getArmyTaxMulti() {\r\n        if (this.regionList.length * 5 > this.armySize) {\r\n            return 1;\r\n        }\r\n        return Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_7__[\"Statics\"].ARMY_TAX_POWER, this.armySize - this.regionList.length * 5);\r\n    }\r\n    getArmySizeMax() {\r\n        return this.regionList.length * 5 + this.garrisonBonus;\r\n    }\r\n    getArmySize() {\r\n        return this.armySize;\r\n    }\r\n    addVillagerStats(pow, hp) {\r\n        this.villagerPower += pow;\r\n        this.villagerHealth += hp;\r\n    }\r\n    killSoldiers() {\r\n        this.armySize = 0;\r\n    }\r\n    addSoldiers(val) {\r\n        this.armySize = Math.min(this.getArmySizeMax(), this.armySize + val);\r\n    }\r\n\r\n    _randomizeTraits(count) {\r\n        var settings = _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance();\r\n        var traits = []\r\n        for (var i = 0; i < settings.fixedTraits.length; i++) {\r\n            traits.push({ type: settings.fixedTraits[i].type, level: settings.fixedTraits[i].level });\r\n        }\r\n        for (var i = 0; i < count + settings.startingTraits; i++) {\r\n            // only allow a max of 5 traits\r\n            if (traits.length >= 5) {\r\n                var inc = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(0, traits.length);\r\n                traits[inc].level += 1;\r\n            } else {\r\n                var traitType = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(1, 12);\r\n                var temp = traits.find(t => t.type === traitType);\r\n                if (temp !== undefined) {\r\n                    temp.level += 1;\r\n                } else {\r\n                    traits.push({ type: traitType, level: 1 });\r\n                }\r\n            }\r\n        }\r\n        traits = traits.sort((a, b) => { return b.level - a.level });\r\n        for (var i = 0; i < traits.length; i++) {\r\n            traits[i].level += _RitualData__WEBPACK_IMPORTED_MODULE_9__[\"RitualData\"].getInstance().activePerks.betrayersgift;\r\n        }\r\n        return traits;\r\n    }\r\n\r\n    generateRegionChoices() {\r\n        if (this.regionList.length === 9 && _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === false) {\r\n            this.nextRegions = [{ type: \"void\", traits: this._randomizeTraits(this.regionList.length - 1) }];\r\n            this.addRegion(0);\r\n            return;\r\n        }\r\n        var choices = [\"temperate\", \"mountains\", \"desert\", \"forest\", \"hills\"];\r\n        this.nextRegions = [];\r\n        for (var i = 0; i < 3; i++) {\r\n            var choice = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].randint(0, choices.length);\r\n            var totalTraits = this.regionList.length - 1;\r\n            this.nextRegions.push({\r\n                type: choices[choice],\r\n                traits: this._randomizeTraits(totalTraits)\r\n            });\r\n            choices.splice(choice, 1);\r\n        }\r\n        this._onWorldChangedHandler();\r\n    }\r\n\r\n    _onInvasionPowerChanged() {\r\n        for (var i = 0; i < this.invasionPowerHandlers.length; i++) {\r\n            this.invasionPowerHandlers[i]();\r\n        }\r\n    }\r\n\r\n    increaseInvasionPower() {\r\n        this.invasionPower = this.invasionPower * _Statics__WEBPACK_IMPORTED_MODULE_7__[\"Statics\"].INVASION_POWER_MULTI;\r\n        this.invasionReward = this.invasionReward * _Statics__WEBPACK_IMPORTED_MODULE_7__[\"Statics\"].INVASION_REWARD_MULTI;\r\n        this.invasionRegion = this.regionList.length - 1;\r\n        this._onInvasionPowerChanged();\r\n    }\r\n\r\n    addRegion(index) {\r\n        if (this.nextRegions.length === 0) {\r\n            return;\r\n        }\r\n        var regSize = _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().regionSize;\r\n        this.regionList.push(new _Region__WEBPACK_IMPORTED_MODULE_0__[\"Region\"](regSize[0], regSize[1], this.regionList.length, this.nextRegions[index].type, this.nextRegions[index].traits));\r\n        this.regionList[this.regionList.length - 1].worldHeight = Math.floor((index + 1) * (700 / (this.nextRegions.length + 1)));\r\n        this.nextRegions = [];\r\n        this._onRegionChangedHandler();\r\n    }\r\n\r\n    handleRunCompletion() {\r\n        var moonlightEarned = _PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"].getInstance().earnableMoonlight(this.getCurrentRegion().regionLevel + 1);\r\n        _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().moonlight += moonlightEarned;\r\n        _StarData__WEBPACK_IMPORTED_MODULE_8__[\"StarData\"].getInstance().starShards += this.starshardsEarned;\r\n\r\n        if (this.getCurrentRegion().regionLevel >= 1) {\r\n            _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges = true;\r\n        }\r\n        if (this.getCurrentRegion().regionLevel >= 3) {\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.buildings.unlocked = true;\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.talent.unlocked = true;\r\n        }\r\n        if (this.getCurrentRegion().regionLevel >= 4) {\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.megamonsters.unlocked = true;\r\n        }\r\n        if (this.getCurrentRegion().regionLevel >= 6) {\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.outcast.unlocked = true;\r\n        }\r\n        if (this.getCurrentRegion().regionLevel >= 9) {\r\n            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.time2.unlocked = true;\r\n        }\r\n\r\n        //handle challenge completion here\r\n        if (_DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().maxRunTime === -1 || this.time.time - this.timeAtRunStart < _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().maxRunTime) {\r\n            var challenge = _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().getChallengeFromName(_DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().challengeName);\r\n            if (challenge !== undefined) {\r\n                if (challenge.completions < challenge.maxCompletions) {\r\n                    switch (challenge.name) {\r\n                        case \"A Matter of Years\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.forge.unlocked = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.explore.unlocked = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.invasion.unlocked = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 2;\r\n                            break;\r\n                        case \"Forged Ahead\":\r\n                            _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoGear = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 2;\r\n                            break;\r\n                        case \"Giant Lands\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 3;\r\n                            break;\r\n                        case \"Invasion\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 3;\r\n                            break;\r\n                        case \"Lazy Townsfolk\":\r\n                            _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoTown = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 4;\r\n                            break;\r\n                        case \"Talentless\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 4;\r\n                            break;\r\n                        case \"Mega Monsters\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 5;\r\n                            break;\r\n                        case \"Outcast\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 5;\r\n                            break;\r\n                        case \"A Matter of Decades\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 7;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.forge2.unlocked = true;\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challenges.capitalism.unlocked = true;\r\n                            _ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore2 = true;\r\n                            break;\r\n                        case \"Forged Ahead 2: Reforged\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 8;\r\n                            break;\r\n                        case \"Capitalism\":\r\n                            _MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().challengePoints += 10;\r\n                            break;\r\n                    }\r\n                    challenge.completions += 1;\r\n                }\r\n                if (challenge.fastestTime === 0) {\r\n                    challenge.fastestTime = this.time.time - this.timeAtRunStart;\r\n                } else {\r\n                    challenge.fastestTime = Math.min(this.time.time - this.timeAtRunStart, challenge.fastestTime);\r\n                }\r\n            }\r\n        }\r\n        _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().reset();\r\n        _DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().saveEnabled = false;\r\n    }\r\n\r\n\r\n    update(delta) {\r\n        this.time.update(delta);\r\n        for (var i = 0; i < this.regionList.length; i++) {\r\n            this.regionList[i].update(delta);\r\n        }\r\n    }\r\n\r\n    updateDay() {\r\n        for (var i = 0; i < this.regionList.length; i++) {\r\n            this.regionList[i].updateDay();\r\n        }\r\n        if (this.armySize > this.getArmySizeMax()) {\r\n            this.armySize = this.getArmySizeMax();\r\n        }\r\n    }\r\n\r\n    updateWeek() {\r\n        for (var i = 0; i < this.regionList.length; i++) {\r\n            this.regionList[i].updateWeek();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        var rlObj = [];\r\n        for (var i = 0; i < this.regionList.length; i++) {\r\n            rlObj.push(this.regionList[i].save());\r\n        }\r\n        var saveObj = {\r\n            rl: rlObj,\r\n            cr: this.currentRegion,\r\n            nr: this.nextRegions,\r\n            st: this.timeAtRunStart,\r\n            time: this.time.save(),\r\n            ip: this.invasionPower,\r\n            ir: this.invasionReward,\r\n            ire: this.invasionRegion,\r\n            sse: this.starshardsEarned,\r\n            vp: this.villagerPower,\r\n            pm: this.powerMulti,\r\n            vh: this.villagerHealth,\r\n            hm: this.healthMulti,\r\n            gb: this.garrisonBonus,\r\n            as: this.armySize\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n    load(saveObj, ver) {\r\n        if (ver <= 4) {\r\n            saveObj.st = 0;\r\n        }\r\n        this.regionList = [];\r\n        for (var i = 0; i < saveObj.rl.length; i++) {\r\n            this.regionList.push(_Region__WEBPACK_IMPORTED_MODULE_0__[\"Region\"].loadFromSave(saveObj.rl[i], ver));\r\n        }\r\n        this.currentRegion = saveObj.cr;\r\n        this.nextRegions = saveObj.nr;\r\n        this.timeAtRunStart = saveObj.st;\r\n        this.time.load(saveObj.time, ver);\r\n        this.invasionPower = saveObj.ip === undefined ? Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_7__[\"Statics\"].INVASION_POWER_MULTI, this.regionList.length - 1) : saveObj.ip;\r\n        this.invasionReward = saveObj.ir === undefined ? Math.pow(_Statics__WEBPACK_IMPORTED_MODULE_7__[\"Statics\"].INVASION_REWARD_MULTI, this.regionList.length - 1) : saveObj.ir;\r\n        this.invasionRegion = saveObj.ire === undefined ? this.regionList.length - 1 : saveObj.ire;\r\n        this.villagerPower = saveObj.vp === undefined ? 1 : saveObj.vp;\r\n        this.powerMulti = saveObj.pm === undefined ? 1 : saveObj.pm;\r\n        this.villagerHealth = saveObj.vh === undefined ? 10 : saveObj.vh;\r\n        this.healthMulti = saveObj.hm === undefined ? 1 : saveObj.hm;\r\n        this.garrisonBonus = saveObj.gb === undefined ? 0 : saveObj.gb;\r\n        this.armySize = saveObj.as === undefined ? 0 : saveObj.as;\r\n        if (this.nextRegions.length > 0 && this.nextRegions.length !== 3) {\r\n            this.generateRegionChoices();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/WorldData.js?");

/***/ }),

/***/ "./src/data/WorldTime.js":
/*!*******************************!*\
  !*** ./src/data/WorldTime.js ***!
  \*******************************/
/*! exports provided: WorldTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorldTime\", function() { return WorldTime; });\n/* harmony import */ var _Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Statics */ \"./src/data/Statics.js\");\n\r\n\r\nclass WorldTime {\r\n    constructor(time = 0) {\r\n        this.time = time;\r\n        this.offlineTime = 0;\r\n        this.frameDelta = 0;\r\n        this.delta = 0;\r\n        this.timescale = 1;\r\n        this.onDayEndHandlers = [];\r\n        this.onWeekEndHandlers = [];\r\n        this.pauseTimestamp = -1;\r\n        this.fskip = 1;\r\n    }\r\n\r\n    getYears() { return Math.floor(this.time / _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_YEAR); }\r\n    getMonths() { return Math.floor((this.time % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_YEAR) / _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_MONTH); }\r\n    getDays() { return Math.floor(((this.time % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_YEAR) % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_MONTH) / _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_DAY); }\r\n    getHours() { return Math.floor((((this.time % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_YEAR) % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_MONTH) % _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_DAY) / _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].TIME_PER_HOUR); }\r\n    getOfflineTimeString() {\r\n        var hours = Math.floor(this.offlineTime / 3600000);\r\n        var min = Math.floor((this.offlineTime % 3600000) / 60000);\r\n        var sec = Math.floor((this.offlineTime % 60000) / 1000);\r\n        return (\"0\" + hours).slice(-2) + \":\" + (\"0\" + min).slice(-2) + \":\" + (\"0\" + sec).slice(-2);\r\n    }\r\n\r\n    _onDayEnd() {\r\n        for (var i = 0; i < this.onDayEndHandlers.length; i++) {\r\n            this.onDayEndHandlers[i]();\r\n        }\r\n    }\r\n    _onWeekEnd() {\r\n        for (var i = 0; i < this.onWeekEndHandlers.length; i++) {\r\n            this.onWeekEndHandlers[i]();\r\n        }\r\n    }\r\n\r\n    registerEvent(event, callback) {\r\n        if (event === \"onDayEnd\") {\r\n            this.onDayEndHandlers.push(callback);\r\n        } else if (event === \"onWeekEnd\") {\r\n            this.onWeekEndHandlers.push(callback);\r\n        }\r\n    }\r\n\r\n    setTimeScale(scale, fskip = 1) {\r\n        if (scale === 0 && this.timescale !== 0) {\r\n            this.timescale = scale;\r\n            this.pauseTimestamp = Date.now();\r\n            return;\r\n        }\r\n\r\n        if (this.pauseTimestamp !== -1) {\r\n            this.addOfflineTime(Date.now() - this.pauseTimestamp);\r\n            this.pauseTimestamp = -1;\r\n        }\r\n\r\n        if (this.offlineTime <= 0) {\r\n            return;\r\n        }\r\n        this.timescale = scale;\r\n        this.fskip = fskip;\r\n    }\r\n\r\n    setFrameDelta(delta) {\r\n        this.delta = delta;\r\n        this.frameDelta = delta * this.timescale;\r\n    }\r\n\r\n    addOfflineTime(timeOffline) {\r\n        this.offlineTime = Math.min(_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MAX_OFFLINE_TIME, this.offlineTime + timeOffline);\r\n    }\r\n\r\n    update(delta) {\r\n        var prevDay = this.getDays();\r\n        this.time += this.frameDelta;\r\n        var curDay = this.getDays();\r\n        if (prevDay !== curDay) {\r\n            this._onDayEnd();\r\n        }\r\n        if (Math.floor(prevDay / 7) !== Math.floor(curDay / 7)) {\r\n            this._onWeekEnd();\r\n        }\r\n        if (this.timescale > 1) {\r\n            this.offlineTime -= this.delta * (this.timescale - 1);\r\n            if (this.offlineTime <= 0) {\r\n                this.timescale = 1;\r\n                this.offlineTime = 0;\r\n                this.fskip = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    timeSince(timestamp) {\r\n        return new WorldTime(this.time - timestamp);\r\n    }\r\n\r\n    getText() {\r\n        return \"Year \" + (this.getYears() + 1) + \", \" + _Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].MONTH_NAMES[this.getMonths()] + \" \" + (this.getDays() + 1) + \", \" + this.getHours() + \":00\";\r\n    }\r\n    getTimespanText() {\r\n        var ret = \"\";\r\n        var years = this.getYears();\r\n        if (years > 0) {\r\n            ret += years + \" Years\"\r\n        }\r\n        var months = this.getMonths();\r\n        if (months > 0) {\r\n            ret += (ret.length > 0 ? \", \" : \"\") + months + \" Months\";\r\n        }\r\n        var days = this.getDays();\r\n        if (days > 0) {\r\n            ret += (ret.length > 0 ? \", \" : \"\") + days + \" Days\";\r\n        }\r\n        var hours = this.getHours();\r\n        if (hours > 0) {\r\n            ret += (ret.length > 0 ? \", \" : \"\") + hours + \" Hours\";\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    save() {\r\n        var saveObj = {\r\n            time: this.time,\r\n            otime: this.offlineTime\r\n        }\r\n\r\n        return saveObj;\r\n    }\r\n\r\n    load(saveObj, ver) {\r\n        if (ver <= 4) {\r\n            saveObj.otime = 0;\r\n        }\r\n        this.time = saveObj.time;\r\n        this.offlineTime = saveObj.otime;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/data/WorldTime.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phaser */ \"phaser\");\n/* harmony import */ var phaser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phaser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scenes_GameScene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes/GameScene */ \"./src/scenes/GameScene.js\");\n\r\n\r\n\r\nvar gameScene = new _scenes_GameScene__WEBPACK_IMPORTED_MODULE_1__[\"GameScene\"]([200, 200], \"DarkWorld\");\r\n\r\nvar config = {\r\n    type: Phaser.AUTO,\r\n    parent: 'gameCanvas',\r\n    width: 1100,\r\n    height: 800,\r\n    pixelArt: true,\r\n    scale: {\r\n        autoCenter: Phaser.Scale.Center.CENTER_BOTH\r\n    },\r\n    scene: [gameScene]\r\n};\r\n\r\nvar game = new Phaser.Game(config);\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/scenes/BlueprintView.js":
/*!*************************************!*\
  !*** ./src/scenes/BlueprintView.js ***!
  \*************************************/
/*! exports provided: BlueprintView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BlueprintView\", function() { return BlueprintView; });\n/* harmony import */ var _data_Blueprint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/Blueprint */ \"./src/data/Blueprint.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_ImageButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst WIDTH = 50;\r\nconst HEIGHT = 50;\r\nconst LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q'];\r\nconst BLD_TO_TEXTURE = {\r\n    town: { sprite: \"roadicons\", tile: 54, w: 50, h: 50 },\r\n    road: { sprite: \"roadicons\", tile: 14, w: 50, h: 50 },\r\n    prod: { sprite: \"bldicons\", tile: 2, w: 32, h: 32 },\r\n    house: { sprite: \"bldicons\", tile: 6, w: 32, h: 32 },\r\n    watchtower: { sprite: \"bldicons\", tile: 7, w: 32, h: 32 },\r\n    tavern: { sprite: \"bldicons\", tile: 9, w: 32, h: 32 },\r\n    market: { sprite: \"bldicons\", tile: 8, w: 32, h: 32 },\r\n    alchemy: { sprite: \"bldicons\", tile: 51, w: 32, h: 32 },\r\n    dojo: { sprite: \"bldicons\", tile: 54, w: 32, h: 32 },\r\n    garrison: { sprite: \"bldicons\", tile: 53, w: 32, h: 32 },\r\n    warehouse: { sprite: \"bldicons\", tile: 52, w: 32, h: 32 },\r\n    none: { sprite: \"icons\", tile: 23, w: 32, h: 32 }\r\n}\r\n\r\nclass BlueprintView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.map = [];\r\n        this.images = [];\r\n        this.icons = [];\r\n        this.offsetX = 360 - 11 * WIDTH / 2;\r\n        this.offsetY = 370 - 13 * HEIGHT / 2;\r\n        this.selectedBuilding = 0;\r\n        this.selectedBp = 0;\r\n    }\r\n\r\n    _handleClearBPClick() {\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__[\"PlayerData\"].getInstance().blueprints[this.selectedBp] = new _data_Blueprint__WEBPACK_IMPORTED_MODULE_0__[\"Blueprint\"]();\r\n        this.refreshBlueprint();\r\n    }\r\n\r\n    _handleBPClick(idx) {\r\n        this.selectedBp = idx;\r\n        this.refreshBlueprint();\r\n    }\r\n\r\n    _handleIconClick(val) {\r\n        this.selectedBuilding = val;\r\n    }\r\n\r\n    _handleTileClick(x, y) {\r\n        if (this.scene.input.activePointer.leftButtonDown() === false) {\r\n            return;\r\n        }\r\n        var player = _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__[\"PlayerData\"].getInstance();\r\n        if (this.selectedBuilding === -1 || player.blueprints[this.selectedBp].map[y][x] === 'town') {\r\n            return;\r\n        }\r\n        if (this.images[y][x] !== undefined) {\r\n            this.images[y][x].destroy();\r\n        }\r\n        if (this.selectedBuilding === \"none\") {\r\n            player.blueprints[this.selectedBp].map[y][x] = 0;\r\n        } else {\r\n            player.blueprints[this.selectedBp].map[y][x] = this.selectedBuilding;\r\n\r\n            if (this.selectedBuilding !== 0) {\r\n                var texture = BLD_TO_TEXTURE[this.selectedBuilding];\r\n                var img = this.scene.add.image(this.x + (x + 0.5) * WIDTH + this.offsetX,\r\n                    this.y + (y + 0.5) * HEIGHT + this.offsetY, texture.sprite, texture.tile);\r\n                img.displayWidth = texture.w;\r\n                img.displayHeight = texture.h;\r\n                this.images[y][x] = img;\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupTile(x, y) {\r\n        var rect = this.scene.add.rectangle(this.x + (x + 0.5) * WIDTH + this.offsetX,\r\n            this.y + (y + 0.5) * HEIGHT + this.offsetY, WIDTH - 1, HEIGHT - 1, Phaser.Display.Color.GetColor(80, 90, 160));\r\n        rect.strokeColor = Phaser.Display.Color.GetColor(220, 255, 220);\r\n        rect.isStroked = true;\r\n        rect.lineWidth = 1.5;\r\n        rect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerover\", () => { this._handleTileClick(x, y); })\r\n            .on(\"pointerdown\", () => { this._handleTileClick(x, y); });\r\n        return rect;\r\n    }\r\n\r\n    _setupBuildingIcon(x, y, val) {\r\n        var icon = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_4__[\"ImageButton\"](this.scene, x, y, 32, 32, BLD_TO_TEXTURE[val]);\r\n        icon.onClickHandler(() => this._handleIconClick(val));\r\n        return icon;\r\n    }\r\n\r\n    create() {\r\n        this.map = [];\r\n        for (var i = 0; i < 13; i++) {\r\n            for (var t = 0; t < 11; t++) {\r\n                this.map.push(this._setupTile(t, i));\r\n            }\r\n        }\r\n        // X/Y GUIDES\r\n        this.guides = [];\r\n        for (var i = 0; i < 13; i++) {\r\n            this.map.push(this.scene.add.bitmapText(this.x + this.offsetX - WIDTH / 2,\r\n                this.y + this.offsetY + ((i + 0.5) * HEIGHT), \"courier20\", LETTERS[i]).setOrigin(0.5));\r\n        }\r\n        for (var i = 0; i < 11; i++) {\r\n            this.map.push(this.scene.add.bitmapText(this.x + this.offsetX + ((i + 0.5) * WIDTH),\r\n                this.y + this.offsetY - HEIGHT / 2, \"courier20\", \"\" + (i + 1)).setOrigin(0.5));\r\n        }\r\n        this.refreshBlueprint();\r\n        this.refreshIcons();\r\n    }\r\n\r\n    refreshBlueprint() {\r\n        for (var i = 0; i < this.images.length; i++) {\r\n            for (var t = 0; t < this.images[0].length; t++) {\r\n                if (this.images[i][t] !== undefined) {\r\n                    this.images[i][t].destroy();\r\n                }\r\n            }\r\n        }\r\n        this.images = [];\r\n        var bp = _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__[\"PlayerData\"].getInstance().blueprints[this.selectedBp];\r\n        for (var i = 0; i < bp.map.length; i++) {\r\n            var row = []\r\n            for (var t = 0; t < bp.map[0].length; t++) {\r\n                if (bp.map[i][t] !== 0) {\r\n                    var texture = BLD_TO_TEXTURE[bp.map[i][t]];\r\n                    var img = this.scene.add.image(this.x + (t + 0.5) * WIDTH + this.offsetX,\r\n                        this.y + (i + 0.5) * HEIGHT + this.offsetY, texture.sprite, texture.tile);\r\n                    img.displayWidth = texture.w;\r\n                    img.displayHeight = texture.h;\r\n                    row.push(img);\r\n                } else {\r\n                    row.push(undefined);\r\n                }\r\n            }\r\n            this.images.push(row);\r\n        }\r\n    }\r\n    refreshIcons() {\r\n        for (var i = 0; i < this.icons.length; i++) {\r\n            this.icons[i].destroy();\r\n        }\r\n        this.icons = [];\r\n\r\n        this.icons.push(this.scene.add.bitmapText(this.x + 650, this.y + 50, \"courier20\", \"Blueprint:\"));\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 650, this.y + 70, 30, 20, \"1\").onClickHandler(() => { this._handleBPClick(0); }));\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 685, this.y + 70, 30, 20, \"2\").onClickHandler(() => { this._handleBPClick(1); }));\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 720, this.y + 70, 30, 20, \"3\").onClickHandler(() => { this._handleBPClick(2); }));\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 755, this.y + 70, 30, 20, \"4\").onClickHandler(() => { this._handleBPClick(3); }));\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 790, this.y + 70, 30, 20, \"5\").onClickHandler(() => { this._handleBPClick(4); }));\r\n\r\n        this.icons.push(this.scene.add.bitmapText(this.x + 650, this.y + 100, \"courier20\", \"Building:\"));\r\n        var bld = [\"road\", \"prod\", \"house\", \"watchtower\", \"tavern\", \"market\", \"alchemy\"];\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true) {\r\n            bld.push(\"dojo\");\r\n            bld.push(\"garrison\");\r\n        }\r\n        if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0) {\r\n            bld.push(\"warehouse\");\r\n        }\r\n        bld.push(\"none\");\r\n        for (var i = 0; i < bld.length; i++) {\r\n            var x = this.x + 650 + (i % 7) * 34;\r\n            var y = this.y + 120 + Math.floor(i / 7) * 34;\r\n            this.icons.push(this._setupBuildingIcon(x, y, bld[i]));\r\n        }\r\n\r\n        this.icons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 650, this.y + 200, 180, 20, \"Clear Blueprint\")\r\n            .onClickHandler(() => { this._handleClearBPClick(); }));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.icons.length; i++) {\r\n            this.icons[i].setVisible(visible);\r\n        }\r\n        for (var i = 0; i < this.images.length; i++) {\r\n            for (var t = 0; t < this.images[i].length; t++) {\r\n                if (this.images[i][t] !== undefined) {\r\n                    this.images[i][t].setVisible(visible);\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < this.map.length; i++) {\r\n            this.map[i].setVisible(visible);\r\n        }\r\n        for (var i = 0; i < this.guides.length; i++) {\r\n            this.guides[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/BlueprintView.js?");

/***/ }),

/***/ "./src/scenes/CombatScene.js":
/*!***********************************!*\
  !*** ./src/scenes/CombatScene.js ***!
  \***********************************/
/*! exports provided: CombatScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CombatScene\", function() { return CombatScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../ui/CreatureDisplay */ \"./src/ui/CreatureDisplay.js\");\n/* harmony import */ var _utils_Combat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Combat */ \"./src/utils/Combat.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/ProgressBar */ \"./src/ui/ProgressBar.js\");\n/* harmony import */ var _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/SpriteAnimation */ \"./src/ui/SpriteAnimation.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _data_CombatManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../data/CombatManager */ \"./src/data/CombatManager.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_GearData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../data/GearData */ \"./src/data/GearData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//width 800x600\r\n\r\nclass CombatScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.player = _data_PlayerData__WEBPACK_IMPORTED_MODULE_10__[\"PlayerData\"].getInstance();\r\n        this.regionTier = 0;\r\n        this.restartAfterRegen = false;\r\n\r\n        this.playerHitAnim = undefined;\r\n        this.monsterHitAnim = [undefined, undefined, undefined];\r\n\r\n        this.progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_6__[\"ProgressionStore\"]();\r\n\r\n        this.combatManager = new _data_CombatManager__WEBPACK_IMPORTED_MODULE_9__[\"CombatManager\"]()\r\n            .registerEvent(\"onAnimationChanged\", (i, anim) => { this._setupAnim(i, anim); })\r\n            .registerEvent(\"onCreatureHealthChanged\", (x, i) => { this._monsterHealthCallback(x, i); })\r\n            .registerEvent(\"onCreatureAttackChanged\", (x, i) => { this._monsterAttackCooldownCallback(x, i); })\r\n            .registerEvent(\"onExplore\", (x) => { this._exploreCallback(x); })\r\n            .registerEvent(\"onCombatStart\", (x) => { this._onCombatCallback(x); })\r\n            .registerEvent(\"onCombatEnd\", (x) => { this._onCombatEndCallback(x); })\r\n            .registerEvent('onInvasionEnd', () => { this._onInvasionEndCallback(); });\r\n    }\r\n\r\n    enableScene() {\r\n    }\r\n\r\n    disableScene() {\r\n    }\r\n\r\n    _playerHealthCallback(health) {\r\n        var shieldPercent = this.player.statBlock.shieldValue / this.player.statBlock.MaxHealth();\r\n        var fillTxt = \"\";\r\n        if (shieldPercent > 0) {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(health)) + \"+(\" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(this.player.statBlock.shieldValue)) + \")/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(this.player.statBlock.MaxHealth());\r\n        } else {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(health)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(this.player.statBlock.MaxHealth());\r\n        }\r\n        this.playerDisplay.setHealthBar(health / this.player.statBlock.MaxHealth(), fillTxt);\r\n        this.playerDisplay.setShieldBar(shieldPercent);\r\n    }\r\n    _playerAttackCooldownCallback(attackCooldown) {\r\n        this.playerDisplay.setAttackBar(attackCooldown / this.player.statBlock.attackSpeed,\r\n            Math.floor(attackCooldown / this.player.statBlock.attackSpeed * 100) + \"%\");\r\n    }\r\n\r\n    _monsterHealthCallback(health, idx) {\r\n        health = Math.max(0, health);\r\n        var shieldPercent = this.combatManager.monsters[idx].shieldValue / this.combatManager.monsters[idx].MaxHealth();\r\n        var fillTxt = \"\";\r\n        if (shieldPercent > 0) {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(health)) + \"+(\" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(this.combatManager.monsters[idx].shieldValue)) + \")/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(this.combatManager.monsters[idx].MaxHealth());\r\n        } else {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.ceil(health)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(this.combatManager.monsters[idx].MaxHealth());\r\n        }\r\n        this.monsterDisplays[idx].setHealthBar(health / this.combatManager.monsters[idx].MaxHealth(), fillTxt);\r\n        this.monsterDisplays[idx].setShieldBar(shieldPercent);\r\n    }\r\n    _monsterAttackCooldownCallback(attackCooldown, idx) {\r\n        this.monsterDisplays[idx].setAttackBar(attackCooldown / this.combatManager.monsters[idx].attackSpeed,\r\n            Math.floor(attackCooldown / this.combatManager.monsters[idx].attackSpeed * 100) + \"%\");\r\n    }\r\n\r\n    _onCombatEndCallback(rewards) {\r\n        this._hideEnemyDisplays();\r\n        this.restButton.setVisible(true);\r\n        if (rewards === undefined) {\r\n            this.restartAfterRegen = true;\r\n            this.progression.registerDeath(1);\r\n            this.restButton.setText(\"Explore\");\r\n        } else {\r\n            this.restButton.setText(\"Rest\");\r\n            if (this.progression.unlocks.craftingUI === true) {\r\n                _data_GearData__WEBPACK_IMPORTED_MODULE_14__[\"GearData\"].getInstance().tiersAvailable = Math.min(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().maxGearTier,\r\n                    Math.max(_data_GearData__WEBPACK_IMPORTED_MODULE_14__[\"GearData\"].getInstance().tiersAvailable, rewards.regionLevel + 1));\r\n                this.scene.get(\"GearScene\")._updateTierButtons();\r\n            }\r\n            this.player.addShade(rewards.shade);\r\n            this.player.addResource(rewards.resource, rewards.tier);\r\n            this.player.addMote(rewards.motes);\r\n            this.progression.registerMonsterKill();\r\n            this.progression.registerShadeGain(rewards.shade);\r\n            this.progression.registerResourceGain(rewards.resource);\r\n            if (this.progression.unlocks.townTab === true) {\r\n                this.player.addGold(rewards.gold);\r\n                _data_WorldData__WEBPACK_IMPORTED_MODULE_8__[\"WorldData\"].getInstance().getRegion(rewards.regionLevel).townData.addFriendship(rewards.friendship);\r\n                this.scene.get(\"TownScene\")._updateStatus();\r\n            }\r\n\r\n            var tile = this.combatManager.activeTile;\r\n\r\n            if (tile.isInvaded === true) {\r\n                tile.invasionFights += 1;\r\n                if (tile.invasionFights >= 2 + tile.parent.invasionStrength) {\r\n                    tile.parent.clearInvadedTile(tile.x, tile.y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _updatePlayerBlock() {\r\n        this.playerDisplay.initWithCreature(this.player.statBlock);\r\n    }\r\n    _hideEnemyDisplays() {\r\n        for (var i = 0; i < this.monsterDisplays.length; i++) {\r\n            this.monsterDisplays[i].setVisible(false);\r\n        }\r\n    }\r\n    _setupAnim(idx, animKey) {\r\n        if (idx === -1) {\r\n            this._setupPlayerAnim(animKey);\r\n        } else {\r\n            this._setupMonsterAnim(idx, animKey);\r\n        }\r\n    }\r\n    _setupPlayerAnim(animKey) {\r\n        if (this.playerHitAnim !== undefined) {\r\n            this._removePlayerAnim();\r\n        }\r\n        var x = this.playerDisplay.getCenterX();\r\n        var y = this.playerDisplay.getCenterY();\r\n        this.playerHitAnim = new _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_5__[\"SpriteAnimation\"](this, x, y, animKey, _utils_Combat__WEBPACK_IMPORTED_MODULE_2__[\"Combat\"].getAnimInfoFromKey(animKey), () => { this._removePlayerAnim(); });\r\n    }\r\n    _removePlayerAnim() {\r\n        this.playerHitAnim.destroy();\r\n        this.playerHitAnim = undefined;\r\n    }\r\n    _setupMonsterAnim(idx, animKey) {\r\n        // if an animation is already playing, cancel it\r\n        if (this.monsterHitAnim[idx] !== undefined) {\r\n            this._removeMonsterAnim(idx);\r\n        }\r\n        var x = this.monsterDisplays[idx].getCenterX();\r\n        var y = this.monsterDisplays[idx].getCenterY();\r\n        this.monsterHitAnim[idx] = new _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_5__[\"SpriteAnimation\"](this, x, y, animKey, _utils_Combat__WEBPACK_IMPORTED_MODULE_2__[\"Combat\"].getAnimInfoFromKey(animKey), () => { this._removeMonsterAnim(idx); });\r\n    }\r\n    _removeMonsterAnim(i) {\r\n        this.monsterHitAnim[i].destroy();\r\n        this.monsterHitAnim[i] = undefined;\r\n    }\r\n\r\n    _restHandler() {\r\n        if (this.combatManager.combatActive === true) {\r\n            this.restButton.setText(\"Explore\");\r\n            this.combatManager.stopCombat();\r\n        } else {\r\n            this.restButton.setText(\"Rest\");\r\n            this.combatManager.combatActive = true;\r\n        }\r\n    }\r\n\r\n    initFight(tile) {\r\n        const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q'];\r\n        const tileName = letters[tile.y] + \"\" + (tile.x + 1) + \" - \" + tile.name;\r\n        if (tile.amountExplored >= tile.explorationNeeded) {\r\n            this.explorationBar.setFillPercent(tile.amountExplored / tile.explorationNeeded,\r\n                tileName + \": Explored\");\r\n        } else {\r\n            this.explorationBar.setFillPercent(tile.amountExplored / tile.explorationNeeded,\r\n                tileName + \": \" + Math.floor(tile.amountExplored / tile.explorationNeeded * 100) + \"%\");\r\n        }\r\n        this.invasionCounter.setVisible(tile.isInvaded);\r\n        var invaders = 3 * (2 + tile.parent.invasionStrength - tile.invasionFights);\r\n        this.invasionCounter.setText(\"Invaders: \" + invaders);\r\n        this.combatManager.setTile(tile);\r\n        this.combatManager.initFight();\r\n        this.regionTier = tile.parent.regionLevel;\r\n    }\r\n\r\n    rebirth() {\r\n        this.combatManager.stopCombat();\r\n        this._hideEnemyDisplays();\r\n    }\r\n\r\n    stopCombat() {\r\n        this.combatManager.stopCombat();\r\n    }\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"claws\", \"./../../assets/anims/clawanim.png\", { frameWidth: 128, frameHeight: 128 });\r\n        this.load.spritesheet(\"clawscrit\", \"./../../assets/anims/clawanimcrit.png\", { frameWidth: 128, frameHeight: 128 });\r\n        this.load.spritesheet(\"mace\", \"./../../assets/anims/maceanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"magicmissile\", \"./../../assets/anims/magicanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"entangle\", \"./../../assets/anims/entangleanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"barrier\", \"./../../assets/anims/barrieranim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"fireball\", \"./../../assets/anims/fireanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"haste\", \"./../../assets/anims/hasteanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"skull\", \"./../../assets/anims/killanim.png\", { frameWidth: 32, frameHeight: 32 });\r\n        this.load.spritesheet(\"glancing\", \"./../../assets/anims/glancinganim.png\", { frameWidth: 128, frameHeight: 128 });\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.explorationBar = new _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_4__[\"ProgressBar\"](this, this.relativeX(10), this.relativeY(10), 880, 20,\r\n            Phaser.Display.Color.GetColor(0, 0, 255), Phaser.Display.Color.GetColor(32, 32, 64));\r\n        this.invasionCounter = this.add.bitmapText(this.relativeX(400), this.relativeY(35), \"courier20\", \"Invaders: 0\")\r\n            .setTint(Phaser.Display.Color.GetColor(220, 0, 220));\r\n        this.invasionCounter.setVisible(false);\r\n        this.monsterDisplays = [];\r\n        this.monsterDisplays.push(new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_1__[\"CreatureDisplay\"](this, this.relativeX(325), this.relativeY(70)));\r\n        this.monsterDisplays.push(new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_1__[\"CreatureDisplay\"](this, this.relativeX(65), this.relativeY(170)));\r\n        this.monsterDisplays.push(new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_1__[\"CreatureDisplay\"](this, this.relativeX(585), this.relativeY(170)));\r\n\r\n        this.playerDisplay = new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_1__[\"CreatureDisplay\"](this, this.relativeX(325), this.relativeY(460));\r\n        this.playerDisplay.initWithCreature(this.player.statBlock);\r\n        this._hideEnemyDisplays();\r\n\r\n        this.restButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(800), this.relativeY(40), 80, 20, \"Rest\")\r\n            .onClickHandler(() => { this._restHandler(); });\r\n        this.restButton.setVisible(false);\r\n\r\n        this.player.statBlock.registerEvent(\"onHealthChanged\", (x) => { this._playerHealthCallback(x); });\r\n        this.player.statBlock.registerEvent(\"onAttackCooldownChanged\", (x) => { this._playerAttackCooldownCallback(x); });\r\n        this.player.statBlock.registerEvent(\"onAnimationChanged\", (x) => { this._setupAnim(-1, x); });\r\n        this.player.registerEvent(\"onStatChanged\", () => { this._updatePlayerBlock(); });\r\n    }\r\n\r\n    _updateAnimations(delta) {\r\n        if (this.playerHitAnim !== undefined) {\r\n            this.playerHitAnim.update(delta);\r\n        }\r\n        for (var i = 0; i < this.monsterHitAnim.length; i++) {\r\n            if (this.monsterHitAnim[i] !== undefined) {\r\n                this.monsterHitAnim[i].update(delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    _exploreCallback(tile) {\r\n        const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q'];\r\n        const tileName = letters[tile.y] + \"\" + (tile.x + 1) + \" - \" + tile.name;\r\n        if (tile.explored) {\r\n            this.explorationBar.setFillPercent(tile.amountExplored / tile.explorationNeeded,\r\n                tileName + \": Explored\");\r\n        } else {\r\n            this.explorationBar.setFillPercent(tile.amountExplored / tile.explorationNeeded,\r\n                tileName + \": \" + Math.floor(tile.amountExplored / tile.explorationNeeded * 100) + \"%\");\r\n        }\r\n\r\n        if (tile.explored === true && tile.isInvaded === false) {\r\n            this.scene.get(\"RegionScene\").triggerAutoExplore(tile, tile.parent.regionLevel);\r\n        }\r\n    }\r\n\r\n    _onCombatCallback(isInvasion) {\r\n        this._hideEnemyDisplays();\r\n        var monsters = this.combatManager.monsters;\r\n        for (var i = 0; i < Math.min(monsters.length, this.monsterDisplays.length); i++) {\r\n            this.monsterDisplays[i].setVisible(true);\r\n            this.monsterDisplays[i].initWithCreature(monsters[i]);\r\n            if (isInvasion === true) {\r\n                this.monsterDisplays[i].setInvader();\r\n            }\r\n        }\r\n        this.invasionCounter.setVisible(this.combatManager.activeTile.isInvaded);\r\n        var invaders = 3 * (2 + this.combatManager.activeTile.parent.invasionStrength -\r\n            this.combatManager.activeTile.invasionFights);\r\n        this.invasionCounter.setText(\"Invaders: \" + invaders);\r\n        this.restButton.setVisible(false);\r\n        this.playerDisplay.initWithCreature(this.player.statBlock);\r\n    }\r\n\r\n    _onInvasionEndCallback() {\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoInvade === true) {\r\n            this.scene.get(\"RegionScene\").triggerAutoExplore(this.combatManager.activeTile,\r\n                this.combatManager.activeTile.parent.regionLevel);\r\n        }\r\n    }\r\n\r\n    isInCombat() { return this.combatManager.isInCombat(); }\r\n\r\n    update(__time, __delta) {\r\n        var fDelta = _data_WorldData__WEBPACK_IMPORTED_MODULE_8__[\"WorldData\"].getInstance().time.frameDelta;\r\n        for (var i = 0; i < _data_WorldData__WEBPACK_IMPORTED_MODULE_8__[\"WorldData\"].getInstance().time.fskip; i++) {\r\n            this._updateAnimations(fDelta);\r\n            this.combatManager.update(fDelta);\r\n\r\n            if (this.restartAfterRegen === true && this.combatManager.combatActive === false &&\r\n                this.player.statBlock.currentHealth >= this.player.statBlock.MaxHealth() &&\r\n                _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoExplore === true) {\r\n                this.combatManager.initFight(true);\r\n                this.restartAfterRegen = false;\r\n            }\r\n            if (this.combatManager.combatActive === true) {\r\n                this.restartAfterRegen = false;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/CombatScene.js?");

/***/ }),

/***/ "./src/scenes/GameScene.js":
/*!*********************************!*\
  !*** ./src/scenes/GameScene.js ***!
  \*********************************/
/*! exports provided: GameScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameScene\", function() { return GameScene; });\n/* harmony import */ var _RegionScene__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegionScene */ \"./src/scenes/RegionScene.js\");\n/* harmony import */ var _CombatScene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CombatScene */ \"./src/scenes/CombatScene.js\");\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/ProgressBar */ \"./src/ui/ProgressBar.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _LoreScene__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LoreScene */ \"./src/scenes/LoreScene.js\");\n/* harmony import */ var _TownScene__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TownScene */ \"./src/scenes/TownScene.js\");\n/* harmony import */ var _GearScene__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GearScene */ \"./src/scenes/GearScene.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_GearData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/GearData */ \"./src/data/GearData.js\");\n/* harmony import */ var _TalentScene__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TalentScene */ \"./src/scenes/TalentScene.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _MoonlightScene__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./MoonlightScene */ \"./src/scenes/MoonlightScene.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_LoreStore__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../data/LoreStore */ \"./src/data/LoreStore.js\");\n/* harmony import */ var _WorldScene__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./WorldScene */ \"./src/scenes/WorldScene.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _ui_ImageButton__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../ui/ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! lz-string */ \"./node_modules/lz-string/libs/lz-string.js\");\n/* harmony import */ var lz_string__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(lz_string__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _ui_OptionsDialog__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../ui/OptionsDialog */ \"./src/ui/OptionsDialog.js\");\n/* harmony import */ var _ui_GuideWindow__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../ui/GuideWindow */ \"./src/ui/GuideWindow.js\");\n/* harmony import */ var _data_WorldTime__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../data/WorldTime */ \"./src/data/WorldTime.js\");\n/* harmony import */ var _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../ui/FadingNumberLabel */ \"./src/ui/FadingNumberLabel.js\");\n/* harmony import */ var _data_StarData__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../data/StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _MyrahScene__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./MyrahScene */ \"./src/scenes/MyrahScene.js\");\n/* harmony import */ var _data_RitualData__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../data/RitualData */ \"./src/data/RitualData.js\");\n/* harmony import */ var _ui_StatsWindow__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../ui/StatsWindow */ \"./src/ui/StatsWindow.js\");\n/* harmony import */ var _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../ui/HighlightElementGroup */ \"./src/ui/HighlightElementGroup.js\");\n// main scene for game window\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BUY_FLAT = [[1, 10, 100, 1000], [\"1\", \"10\", \"100\", \"1K\"]];\r\nconst BUY_PERCENT = [[0.1, 0.25, 0.5, 1], [\"10%\", \"25%\", \"50%\", \"MAX\"]];\r\n\r\nclass GameScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_2__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        //initialize data\r\n        // DYNAMIC SETTINGS SHOULD BE FIRST ALWAYS\r\n        this.settings = new _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"]();\r\n        this.moonlight = new _data_MoonlightData__WEBPACK_IMPORTED_MODULE_16__[\"MoonlightData\"]();\r\n        this.starData = new _data_StarData__WEBPACK_IMPORTED_MODULE_27__[\"StarData\"]();\r\n        this.worldData = new _data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"]();\r\n        this.player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_4__[\"PlayerData\"]();\r\n        this.progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"]();\r\n        this.gearShowTimer = 2000;\r\n        this.infuseStart = 0;\r\n        this.gearStart = 0;\r\n        this.detailsStart = 0;\r\n        this.resourceStart = 0;\r\n        this.resourceTierSelected = 0;\r\n        this.saveTimer = _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].AUTOSAVE_TIMER;\r\n        this.statBuyAmount = 1;\r\n        this.talentBuyAmount = 1;\r\n        this.talentCost = 0;\r\n        this.statCost = 0;\r\n        this.lastFrame = 0;\r\n        this.showTimeThisRun = false;\r\n        this.shiftModifier = false;\r\n        this.buyBtnIdx = 0;\r\n        this.resourceChanges = [0, 0, 0, 0, 0, 0];\r\n        this.resourcesDirty = false;\r\n        //try loading save data if it exists\r\n        this.loadGame();\r\n    }\r\n\r\n    preload() {\r\n        this.load.bitmapFont(\"courier16\", \"./../../assets/font/anonpro16.png\", \"./../../assets/font/anonpro16.xml\");\r\n        this.load.bitmapFont(\"courier20\", \"./../../assets/font/anonpro20.png\", \"./../../assets/font/anonpro20.xml\");\r\n        this.load.spritesheet(\"icons\", \"./../../assets/icons/icons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"icons2\", \"./../../assets/icons/icons2.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"talenticons\", \"./../../assets/icons/talenticons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"bldicons\", \"./../../assets/icons/buildingicons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"roadicons\", \"./../../assets/icons/roadicons.png\", { frameWidth: 50, frameHeight: 50 });\r\n        this.load.spritesheet(\"moonicons\", \"./../../assets/icons/moonicons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"runeicons\", \"./../../assets/icons/runeicons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"enemyicons\", \"./../../assets/enemy/enemyicons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"staricons\", \"./../../assets/icons/staricons.png\", { frameWidth: 16, frameHeight: 16 });\r\n        this.load.spritesheet(\"runemap\", \"./../../assets/icons/runemap.png\", { frameWidth: 444, frameHeight: 444 });\r\n        this.load.image(\"title\", \"./../../assets/title.png\");\r\n    }\r\n\r\n    create() {\r\n        //base UI\r\n        this.add.bitmapText(10, 10, \"courier20\", \"Stats\");\r\n        this.add.rectangle(0, 0, 200, 800, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n        this.add.rectangle(200, 0, 900, 100, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.statLabels = [];\r\n        this.statIcons = [];\r\n        this.statIncButtons = [];\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 20, 16, 16, { sprite: \"icons\", tile: 0 }, this.player.strTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 40, 16, 16, { sprite: \"icons\", tile: 1 }, this.player.dexTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 60, 16, 16, { sprite: \"icons\", tile: 2 }, this.player.agiTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 80, 16, 16, { sprite: \"icons\", tile: 3 }, this.player.endTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 100, 16, 16, { sprite: \"icons\", tile: 4 }, this.player.recTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 120, 16, 16, { sprite: \"icons\", tile: 5 }, this.player.defTooltip()));\r\n        this.statIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 140, 16, 16, { sprite: \"icons\", tile: 6 }, this.player.accTooltip()));\r\n\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 20, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('str'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 40, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('dex'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 60, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('agi'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 80, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('end'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 100, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('rec'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 120, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('def'); }));\r\n        this.statIncButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 150, 140, 16, 16, '+')\r\n            .onClickHandler(() => { this._increaseStat('acc'); }));\r\n\r\n        this.detailsLabels = [];\r\n        this.detailsIcons = [];\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 25 },\r\n            \"Health, when this runs out you die.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 24 },\r\n            \"The damage you deal with each attack. Your damage is reduced by the targets armor, dealing a minimum of 1 damage.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 26 },\r\n            \"Armor. Each point reduces damage from enemy attacks by 1.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 27 },\r\n            \"Hit Chance. Hit increases your attack speed, while enemy Evasion lowers your attack speed.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 28 },\r\n            \"Evasion. Slows enemy attack speed if you have more Evasion then their Hit.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 29 },\r\n            \"Health Regen. You restore this much Health every second. Works in combat.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 31 },\r\n            \"Crit Chance. The chance any hit is a critical hit, dealing extra damage.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 30 },\r\n            \"Aim. Increases damage dealt with Critical Hits and reduces the chance of a Glancing Hit. Opposed by your opponents Toughness.\"));\r\n        this.detailsIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 48 },\r\n            \"Toughness. Reduces the damage taken by Critical Hits and increases enemies chance of a Glancing Hit.\"));\r\n\r\n        this.gearLabels = this.add.bitmapText(20, 30, \"courier16\", \"\").setOrigin(0);\r\n\r\n        this.resourceLabels = [];\r\n        this.resourceTierButtons = [];\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"1\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 0; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"2\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 1; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"3\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 2; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"4\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 3; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"5\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 4; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"6\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 5; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"7\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 6; this._updateResources(); }));\r\n        this.resourceTierButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 20, 170, 16, 16, \"8\")\r\n            .onClickHandler(() => { this.resourceTierSelected = 7; this._updateResources(); }));\r\n        this.resourceTabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_31__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        for (var i = 0; i < this.resourceTierButtons.length; i++) {\r\n            this.resourceTabGroup.addElement(this.resourceTierButtons[i]);\r\n        }\r\n        this.resourceTabGroup._updateHighlights(0);\r\n\r\n        this.resourceIcons = [];\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 32 },\r\n            \"Wood. Found in forests and wodes, duh.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 33 },\r\n            \"Leather. The best leather comes from the plains and forests.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 34 },\r\n            \"Metal. Hard to find resource thats available in large quantities in the mountains.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 35 },\r\n            \"Fiber. Found in swamps and forests.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 36 },\r\n            \"Stone. Can be found in abundance in the hills.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 37 },\r\n            \"Crystal. Hard to find in large amounts, but can be found in the harder to reach areas.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 38 },\r\n            \"Gold. Your current gold cap is equal to (Flat bonuses + population) * Economy Multiplier.\"));\r\n        this.resourceIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_14__[\"TooltipImage\"](this, 20, 170, 16, 16, { sprite: \"icons\", tile: 39 },\r\n            \"Motes of Darkness. Fuse these onto weapons to improve their power.\"));\r\n        this.resourceIncLabels = [];\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n        this.resourceIncLabels.push(new _ui_FadingNumberLabel__WEBPACK_IMPORTED_MODULE_26__[\"FadingNumberLabel\"](this, 100, 170, 2500,\r\n            Phaser.Display.Color.GetColor(80, 200, 80), Phaser.Display.Color.GetColor(200, 0, 0), \"courier16\", 16));\r\n\r\n\r\n        this.buyButtons = [];\r\n        this.buyButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 10, 780, 30, 18, \"x1\")\r\n            .onClickHandler(() => { this._setBuyAmount(0); })\r\n            .setTextColor(Phaser.Display.Color.GetColor(255, 255, 0)));\r\n        this.buyButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 45, 780, 30, 18, \"x10\")\r\n            .onClickHandler(() => { this._setBuyAmount(1); }));\r\n        this.buyButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 80, 780, 40, 18, \"x100\")\r\n            .onClickHandler(() => { this._setBuyAmount(2); }));\r\n        this.buyButtons.push(new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 125, 780, 40, 18, \"x1K\")\r\n            .onClickHandler(() => { this._setBuyAmount(3); }));\r\n        this.buyGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_31__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.buyGroup.addElement(this.buyButtons[0]);\r\n        this.buyGroup.addElement(this.buyButtons[1]);\r\n        this.buyGroup.addElement(this.buyButtons[2]);\r\n        this.buyGroup.addElement(this.buyButtons[3]);\r\n\r\n        this.infuseLabel = this.add.bitmapText(10, 10, \"courier20\", \"Infuse\");\r\n        this.shadeLabel = this.add.bitmapText(20, 10, \"courier16\", \"Shade: \" + this.player.shade);\r\n        this.statInfuseLabel = this.add.bitmapText(20, 10, \"courier16\", \"Infuse Stat\");\r\n        this.statProgressBar = new _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_3__[\"ProgressBar\"](this, 100, 10, 120, 14, Phaser.Display.Color.GetColor(0, 0, 255), Phaser.Display.Color.GetColor(0, 32, 0));\r\n        this.statInfuseButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 250, 10, 16, 16, '+');\r\n        this.statInfuseButton.onClickHandler(() => { this._buyStatPoint(); });\r\n        this.talentInfuseLabel = this.add.bitmapText(20, 10, \"courier16\", \"Infuse Talent\");\r\n        this.talentProgressBar = new _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_3__[\"ProgressBar\"](this, 100, 10, 120, 14, Phaser.Display.Color.GetColor(0, 0, 255), Phaser.Display.Color.GetColor(0, 32, 0));\r\n        this.talentInfuseButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 250, 10, 16, 16, '+');\r\n        this.talentInfuseButton.onClickHandler(() => { this._buyTalentPoint(); });\r\n\r\n        this.gearLabel = this.add.bitmapText(10, 10, \"courier20\", \"Gear\");\r\n        this.detailsLabel = this.add.bitmapText(10, 10, \"courier20\", \"Details\");\r\n        this.resourceLabel = this.add.bitmapText(10, 10, \"courier20\", \"Resources\");\r\n\r\n        this.progression.addOnUnlockHandler((a, b, c) => { this._handleProgressionEvents(a, b, c) });\r\n\r\n        this.titleImage = this.add.image(650, 25, \"title\");\r\n        // header buttons\r\n        this.loreButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 200, 60, 122, 20, \"Lore\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"LoreScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.gearButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 327, 60, 122, 20, \"Gear\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"GearScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.talentButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 454, 60, 122, 20, \"Talents\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"TalentScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.regionButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 581, 60, 122, 20, \"Region\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"RegionScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.combatButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 708, 60, 122, 20, \"Combat\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"CombatScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.townButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 835, 60, 122, 20, \"Town\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"TownScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.worldButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this, 962, 60, 122, 20, \"World\")\r\n            .onClickHandler(() => { this.scene.bringToTop(\"WorldScene\"); this.scene.bringToTop(\"DarkWorld\"); });\r\n        this.tabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_31__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.tabGroup.addElement(this.loreButton);\r\n        this.tabGroup.addElement(this.gearButton);\r\n        this.tabGroup.addElement(this.talentButton);\r\n        this.tabGroup.addElement(this.regionButton);\r\n        this.tabGroup.addElement(this.combatButton);\r\n        this.tabGroup.addElement(this.townButton);\r\n        this.tabGroup.addElement(this.worldButton);\r\n        this.tabGroup._updateHighlights(0);\r\n\r\n        this.worldTimeBacking = this.add.rectangle(500, 81, 300, 19, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive()\r\n            .on(\"pointerover\", () => { this.showTimeThisRun = true; })\r\n            .on(\"pointerout\", () => { this.showTimeThisRun = false; });\r\n        this.worldTimeLabel = this.add.bitmapText(650, 80, \"courier20\", \"\").setOrigin(0.5, 0);\r\n        this.moonlightButton = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_20__[\"ImageButton\"](this, 925, 12, 32, 32, { sprite: \"moonicons\", tile: 12 })\r\n            .onClickHandler(() => { this.scene.bringToTop(\"MoonlightScene\"); });\r\n\r\n        this.exportDialog = undefined;\r\n        this.guideWindow = undefined;\r\n        this.statsWindow = undefined;\r\n        this.optionsButton = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_20__[\"ImageButton\"](this, 965, 12, 32, 32, { sprite: \"icons\", tile: 55 })\r\n            .onClickHandler(() => { this._openExportDialog(); });\r\n        this.guideButton = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_20__[\"ImageButton\"](this, 1005, 12, 32, 32, { sprite: \"icons\", tile: 54 })\r\n            .onClickHandler(() => { this._openGuideWindow(); });\r\n        this.statsButton = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_20__[\"ImageButton\"](this, 1045, 12, 32, 32, { sprite: \"icons2\", tile: 27 })\r\n            .onClickHandler(() => { this._openStatsWindow(); });\r\n\r\n        this.gearButton.setVisible(this.progression.unlocks.gearTab);\r\n        this.regionButton.setVisible(this.progression.unlocks.exploreTab);\r\n        this.combatButton.setVisible(this.progression.unlocks.combatTab);\r\n        this.townButton.setVisible(_data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].instance.getCurrentRegion().townData.townExplored);\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().talentsEnabled === true) {\r\n            this.talentButton.setVisible(this.progression.unlocks.talentsTab);\r\n        } else {\r\n            this.talentButton.setVisible(false);\r\n        }\r\n        this.worldButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().unlocks.worldTab === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true);\r\n        this.moonlightButton.setVisible(this.progression.totalCounts.timesGated > 0);\r\n\r\n        this.registry.set('setTooltip', (x, y, w, h, txt) => { this._setTooltip(x, y, w, h, txt); });\r\n        this.registry.set('disableTooltip', () => { this._disableTooltip(); });\r\n\r\n        this.regionScene = new _RegionScene__WEBPACK_IMPORTED_MODULE_0__[\"RegionScene\"]([200, 100], \"RegionScene\");\r\n        this.regionScene.registerEvent(\"onTileClick\", (t, ae) => { this._handleTileClick(t, ae); });\r\n\r\n        this.combatScene = new _CombatScene__WEBPACK_IMPORTED_MODULE_1__[\"CombatScene\"]([200, 100], \"CombatScene\");\r\n\r\n        this.loreScene = new _LoreScene__WEBPACK_IMPORTED_MODULE_6__[\"LoreScene\"]([200, 100], \"LoreScene\");\r\n        this.gearScene = new _GearScene__WEBPACK_IMPORTED_MODULE_8__[\"GearScene\"]([200, 100], \"GearScene\");\r\n        this.townScene = new _TownScene__WEBPACK_IMPORTED_MODULE_7__[\"TownScene\"]([200, 100], \"TownScene\");\r\n        this.talentScene = new _TalentScene__WEBPACK_IMPORTED_MODULE_12__[\"TalentScene\"]([200, 100], \"TalentScene\");\r\n        this.worldScene = new _WorldScene__WEBPACK_IMPORTED_MODULE_18__[\"WorldScene\"]([200, 100], \"WorldScene\");\r\n        this.moonlightScene = new _MoonlightScene__WEBPACK_IMPORTED_MODULE_15__[\"MoonlightScene\"]([0, 0], \"MoonlightScene\");\r\n        this.myrahScene = new _MyrahScene__WEBPACK_IMPORTED_MODULE_28__[\"MyrahScene\"]([0, 0], \"MyrahScene\");\r\n\r\n        this.scene.add(\"CombatScene\", this.combatScene, true);\r\n        this.scene.add(\"RegionScene\", this.regionScene, true);\r\n        this.scene.add(\"LoreScene\", this.loreScene, true);\r\n        this.scene.add(\"GearScene\", this.gearScene, true);\r\n        this.scene.add(\"TownScene\", this.townScene, true);\r\n        this.scene.add(\"TalentScene\", this.talentScene, true);\r\n        this.scene.add(\"WorldScene\", this.worldScene, true);\r\n        this.scene.add(\"MoonlightScene\", this.moonlightScene, true);\r\n        this.scene.add(\"MyrahScene\", this.myrahScene, true);\r\n\r\n        this.scene.bringToTop(\"LoreScene\");\r\n        this.scene.bringToTop(\"DarkWorld\");\r\n\r\n        this.player.statBlock.registerEvent(\"onHealthChanged\", () => { this._updateDetails(); });\r\n        this.player.registerEvent(\"onStatChanged\", () => {\r\n            this._layoutStats();\r\n            this.updateStatIcons();\r\n        });\r\n        this.player.registerEvent(\"onResourcesChanged\", (res, gold, tier) => {\r\n            this._updateShade();\r\n            this._updateResources();\r\n            this._updateFadingResourceLabels(res, gold, tier);\r\n        });\r\n        this.player.registerEvent(\"onTalentChanged\", () => {\r\n            this.updateStatIcons();\r\n        });\r\n        this.player.registerEvent(\"onClassSelected\", () => { this._handleClassSelected(); });\r\n        this.worldData.time.registerEvent(\"onWeekEnd\", () => { this._updateWeek(); });\r\n        this.shiftKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT);\r\n\r\n        if (this.progression.unlocks.gearTab === false) {\r\n            this.loreScene.addText(\"You open your eyes and see a vast wilderness before you. \" +\r\n                \"Unsure of how you got here you check your surroundings for any clues. You find \" +\r\n                \"a broken sword, an old barrel lid and some worn, raggy leathers. Not great, but \" +\r\n                \"you're also naked so you take what you can get.\\n\\n\" +\r\n                \"After putting these on you should go exploring.\");\r\n        }\r\n        // our class is set during load, however by that point we have no UI and haven't hooked up events, so\r\n        // we make sure we handle class specific UI here.\r\n        this._handleClassSelected();\r\n        this._layoutStats();\r\n        this._setBuyAmount(0);\r\n    }\r\n\r\n    _setBuyAmount(idx) {\r\n        this.buyBtnIdx = idx;\r\n        if (this.shiftModifier === true) {\r\n            this.statBuyAmount = this.player.getStatCostMax(BUY_PERCENT[0][idx]);\r\n            this.talentBuyAmount = this.player.getTalentCostMax(BUY_PERCENT[0][idx]);\r\n            for (var i = 0; i < this.buyButtons.length; i++) {\r\n                this.buyButtons[i].setText(BUY_PERCENT[1][i]);\r\n            }\r\n        } else {\r\n            this.statBuyAmount = BUY_FLAT[0][idx];\r\n            this.talentBuyAmount = BUY_FLAT[0][idx];\r\n            for (var i = 0; i < this.buyButtons.length; i++) {\r\n                this.buyButtons[i].setText(BUY_FLAT[1][i]);\r\n            }\r\n        }\r\n        this._updateInfuseCosts();\r\n        this.buyGroup._updateHighlights(idx);\r\n    }\r\n\r\n    _updateInfuseCosts() {\r\n        this.statCost = this.player.getStatCost(this.statBuyAmount);\r\n        this.talentCost = this.player.getTalentCost(this.talentBuyAmount);\r\n        this.statProgressBar.setFillPercent(this.player.shade / this.statCost,\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(Math.min(this.player.shade, this.statCost))) + '/' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.statCost));\r\n        this.talentProgressBar.setFillPercent(this.player.shade / this.talentCost,\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(Math.min(this.player.shade, this.talentCost))) + '/' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.talentCost)));\r\n        this.statInfuseButton.setEnable(this.player.shade >= this.statCost);\r\n        this.talentInfuseButton.setEnable(this.player.shade >= this.talentCost);\r\n    }\r\n\r\n    notifyGear() {\r\n        this.gearButton.setNotification();\r\n    }\r\n    notifyRegion() {\r\n        this.regionButton.setNotification();\r\n    }\r\n\r\n    updateStatIcons() {\r\n        this.statIcons[0].setTooltip(this.player.strTooltip());\r\n        this.statIcons[1].setTooltip(this.player.dexTooltip());\r\n        this.statIcons[2].setTooltip(this.player.agiTooltip());\r\n        this.statIcons[3].setTooltip(this.player.endTooltip());\r\n        this.statIcons[4].setTooltip(this.player.recTooltip());\r\n        this.statIcons[5].setTooltip(this.player.defTooltip());\r\n        this.statIcons[6].setTooltip(this.player.accTooltip());\r\n        this.detailsIcons[6].setTooltip(this.player.critTooltip());\r\n        this.detailsIcons[7].setTooltip(this.player.critPowerTooltip());\r\n    }\r\n\r\n    _handleClassSelected() {\r\n        if (this.player.playerClass === _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].CLASS_WIZARD) {\r\n            this.statIcons[5].setImage({ sprite: \"icons\", tile: 62 });\r\n            this.statIcons[6].setImage({ sprite: \"icons\", tile: 63 });\r\n        }\r\n        this.updateStatIcons();\r\n    }\r\n\r\n    _handleProgressionEvents(type, count, text) {\r\n        if (text !== undefined && text !== \"\") {\r\n            this.loreButton.setNotification();\r\n        }\r\n        switch (type) {\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_GEAR_TAB:\r\n                this.gearButton.setVisible(true);\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_EXPLORE_TAB:\r\n                this.regionButton.setVisible(true);\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_COMBAT_TAB:\r\n                this.combatButton.setVisible(true);\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_TOWN_TAB:\r\n                this.townButton.setVisible(true);\r\n                this._updateResources();\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_TALENTS_TAB:\r\n                if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().talentsEnabled === true) {\r\n                    this.talentButton.setVisible(true);\r\n                }\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_WORLD_TAB:\r\n                this.worldButton.setVisible(true);\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_INFUSE_UI:\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_RESOURCE_UI:\r\n                this._layoutStats();\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_SHADE:\r\n                if (count === 50) {\r\n                    this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_INFUSE_UI);\r\n                }\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_EXPLORE:\r\n                if (count === 5) {\r\n                    this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_BUILDING_UI);\r\n                }\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_RESOURCE:\r\n                if (count === 25) {\r\n                    this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_RESOURCE_UI);\r\n                }\r\n                else if (count === 100) {\r\n                    var gearData = new _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"]();\r\n                    gearData.tiersAvailable = 1;\r\n                    this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_CRAFTING_UI);\r\n                }\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_MOTES_UI:\r\n                this._updateResources();\r\n                break;\r\n            default:\r\n                this.worldScene.refreshButtons();\r\n                break;\r\n        }\r\n    }\r\n\r\n    _updateStats() {\r\n        for (var i = 0; i < this.statLabels.length; i++) {\r\n            this.statLabels[i].destroy();\r\n        }\r\n        this.statLabels = [];\r\n        this.statLabels.push(this.add.bitmapText(20, 0, \"courier16\", \"Stat Points: \" + this.player.statPoints));\r\n        this.statLabels.push(this.add.bitmapText(40, 20, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Strength())));\r\n        this.statLabels.push(this.add.bitmapText(40, 40, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Dexterity())));\r\n        this.statLabels.push(this.add.bitmapText(40, 60, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Agility())));\r\n        this.statLabels.push(this.add.bitmapText(40, 80, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Endurance())));\r\n        this.statLabels.push(this.add.bitmapText(40, 100, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Recovery())));\r\n        this.statLabels.push(this.add.bitmapText(40, 120, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Defense())));\r\n        this.statLabels.push(this.add.bitmapText(40, 140, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Accuracy())));\r\n\r\n        this._updateStatButtons();\r\n    }\r\n\r\n    _updateShade() {\r\n        this.infuseLabel.setPosition(10, this.infuseStart);\r\n        this.shadeLabel.setPosition(20, this.infuseStart + 20);\r\n        this.statInfuseLabel.setPosition(20, this.infuseStart + 40);\r\n        this.statProgressBar.setPosition(20, this.infuseStart + 60);\r\n        this.statInfuseButton.setPosition(150, this.infuseStart + 60);\r\n        this.talentInfuseLabel.setPosition(20, this.infuseStart + 80);\r\n        this.talentProgressBar.setPosition(20, this.infuseStart + 100);\r\n        this.talentInfuseButton.setPosition(150, this.infuseStart + 100);\r\n\r\n        this.shadeLabel.setText(\"Shade: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.player.shade)));\r\n        this.statProgressBar.setFillPercent(this.player.shade / this.statCost,\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(Math.min(this.player.shade, this.statCost))) + '/' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.statCost));\r\n        this.talentProgressBar.setFillPercent(this.player.shade / this.talentCost,\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(Math.min(this.player.shade, this.talentCost))) + '/' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.talentCost)));\r\n        this.statInfuseButton.setEnable(this.player.shade >= this.statCost);\r\n        this.talentInfuseButton.setEnable(this.player.shade >= this.talentCost);\r\n    }\r\n\r\n    _updateGear() {\r\n        var text = \"\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].processText(this.player.weapon === undefined ? \"None\" : this.player.weapon.shortname + \" Lv\" + this.player.weapon.level, 20) + \"\\n\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].processText(this.player.armor === undefined ? \"None\" : this.player.armor.shortname + \" Lv\" + this.player.armor.level, 20) + \"\\n\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].processText(this.player.trinket === undefined ? \"None\" : this.player.trinket.shortname + \" Lv\" + this.player.trinket.level, 20);\r\n\r\n        this.gearLabels.setText(text);\r\n    }\r\n\r\n    _updateDetails() {\r\n        this.detailsLabel.setPosition(10, this.detailsStart);\r\n\r\n        for (var i = 0; i < this.detailsLabels.length; i++) {\r\n            this.detailsLabels[i].destroy();\r\n        }\r\n        this.detailsLabels = [];\r\n        for (var i = 0; i < this.detailsIcons.length; i++) {\r\n            this.detailsIcons[i].setPosition(20, this.detailsStart + 20 + (i * 20));\r\n        }\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 20, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.player.statBlock.currentHealth)) + '/' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.MaxHealth())));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 40, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.DamageMin()) + '-' + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.DamageMax())));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 60, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Armor())));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 80, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Hit())));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 100, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Evasion())));\r\n        var txt = this.player.statBlock.HealthRegen() > 100 ? _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.player.statBlock.HealthRegen())) : this.player.statBlock.HealthRegen() + \"\";\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 120, \"courier16\", txt + \"/s\"));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 140, \"courier16\",\r\n            Math.floor(this.player.statBlock.CritChance() * 100) + \"%\"));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 160, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Aim()) + \"\"));\r\n        this.detailsLabels.push(this.add.bitmapText(40, this.detailsStart + 180, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(this.player.statBlock.Toughness()) + \"\"));\r\n    }\r\n\r\n    _updateFadingResourceLabels(res, gold, tier) {\r\n        if (this.progression.unlocks.resourceUI === false) {\r\n            return;\r\n        }\r\n        if (tier === this.resourceTierSelected) {\r\n            this.resourcesDirty = true;\r\n            for (var i = 0; i < res.length; i++) {\r\n                if (res[i] !== 0) {\r\n                    this.resourceChanges[i] += res[i];\r\n                }\r\n            }\r\n        }\r\n        // For now don't show gold, it doesn't fit well with even base gold values\r\n        // if (gold > 0 && this.progression.unlocks.townTab === true) {\r\n        //     this.resourceIncLabels[6].setValue(Math.floor(gold));\r\n        // }\r\n    }\r\n\r\n    _updateResources() {\r\n        this.resourceLabel.setPosition(10, this.resourceStart);\r\n        this.resourceLabel.setVisible(this.progression.unlocks.resourceUI);\r\n        this.resourceTierSelected = Math.max(this.resourceTierSelected, _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().minResourceTier);\r\n\r\n        for (var i = 0; i < this.resourceLabels.length; i++) {\r\n            this.resourceLabels[i].destroy();\r\n        }\r\n        this.resourceLabels = [];\r\n        for (var i = 0; i < this.resourceIcons.length; i++) {\r\n            this.resourceIcons[i].setPosition(20, this.resourceStart + 40 + (i * 20));\r\n            this.resourceIcons[i].setVisible(this.progression.unlocks.resourceUI);\r\n        }\r\n        for (var i = 0; i < this.resourceIncLabels.length; i++) {\r\n            this.resourceIncLabels[i].setPosition(100, this.resourceStart + 40 + (i * 20));\r\n        }\r\n        for (var i = 0; i < this.resourceTierButtons.length; i++) {\r\n            if (i < _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().minResourceTier) {\r\n                this.resourceTierButtons[i].setVisible(false);\r\n                continue;\r\n            }\r\n            this.resourceTierButtons[i].setPosition(20 + ((i - _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().minResourceTier) * 20), this.resourceStart + 20);\r\n            this.resourceTierButtons[i].setVisible(this.player.resourceTierReached >= 1 && i <= this.player.resourceTierReached);\r\n        }\r\n        this.resourceIcons[7].setVisible(this.progression.unlocks.motes || this.player.motes > 0);\r\n        if (this.progression.unlocks.resourceUI === true) {\r\n            var res = this.player.resources[this.resourceTierSelected];\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 40, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[0]))));\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 60, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[1]))));\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 80, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[2]))));\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 100, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[3]))));\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 120, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[4]))));\r\n            this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 140, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(res[5]))));\r\n            if (this.progression.unlocks.townTab === true) {\r\n                this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 160, \"courier16\",\r\n                    _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.player.gold)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.worldData.getGoldCap()))));\r\n            }\r\n            if (this.progression.unlocks.motes === true) {\r\n                this.resourceLabels.push(this.add.bitmapText(40, this.resourceStart + 180, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_19__[\"Common\"].numberString(Math.floor(this.player.motes))));\r\n            }\r\n        }\r\n    }\r\n\r\n    _layoutStats() {\r\n        var h = 160;\r\n\r\n        this.infuseLabel.setVisible(this.progression.unlocks.infuseUI);\r\n        this.shadeLabel.setVisible(this.progression.unlocks.infuseUI);\r\n        this.statProgressBar.setVisible(this.progression.unlocks.infuseUI);\r\n        this.statInfuseButton.setVisible(this.progression.unlocks.infuseUI);\r\n        this.statInfuseLabel.setVisible(this.progression.unlocks.infuseUI);\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().talentsEnabled === true) {\r\n            this.talentProgressBar.setVisible(this.progression.unlocks.infuseUI);\r\n            this.talentInfuseButton.setVisible(this.progression.unlocks.infuseUI);\r\n            this.talentInfuseLabel.setVisible(this.progression.unlocks.infuseUI);\r\n        } else {\r\n            this.talentProgressBar.setVisible(false);\r\n            this.talentInfuseButton.setVisible(false);\r\n            this.talentInfuseLabel.setVisible(false);\r\n        }\r\n\r\n        if (this.progression.unlocks.infuseUI === true) {\r\n            this.infuseStart = h;\r\n            h += 120;\r\n        }\r\n\r\n        this.gearStart = h;\r\n        this.gearLabel.setPosition(10, h);\r\n        this.gearLabels.setPosition(20, h + 20);\r\n        this._updateGear();\r\n\r\n        h += this.gearLabels.getTextBounds().local.height + 20;\r\n        this.detailsStart = h;\r\n        h += 200;\r\n        this.resourceStart = h;\r\n\r\n        this._updateStats();\r\n        this._updateDetails();\r\n        this._updateShade();\r\n        this._updateResources();\r\n    }\r\n\r\n    _updateStatButtons() {\r\n        var enabled = this.player.statPoints > 0;\r\n        for (var i = 0; i < this.statIncButtons.length; i++) {\r\n            this.statIncButtons[i].setEnable(enabled);\r\n        }\r\n    }\r\n\r\n    _handleTileClick(tile, fromAutoExplore = false) {\r\n        if (tile.parent.isExplorable(tile.x, tile.y)) {\r\n            if (fromAutoExplore === false && _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().openCombatOnExplore === true) {\r\n                this.scene.bringToTop(\"CombatScene\");\r\n                this.scene.bringToTop(\"DarkWorld\");\r\n            }\r\n            this.combatScene.initFight(tile);\r\n        }\r\n    }\r\n\r\n    _buyStatPoint() {\r\n        this.progression.registerStatPointGain(this.statBuyAmount);\r\n        this.player.buyStat(this.statBuyAmount);\r\n        this._setBuyAmount(this.buyBtnIdx);\r\n        this._updateStats();\r\n        this._updateShade();\r\n    }\r\n    _buyTalentPoint() {\r\n        if (this.progression.unlocks.talentsTab === false) {\r\n            this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_TALENTS_TAB,\r\n                \"Holding this much raw shade, it almost feels... alive? Or it would be if classes were \" +\r\n                \"in the game. Since they're not you just get 1 measly talent point to spend on the \" +\r\n                \"basic bitch talents.\");\r\n        }\r\n        this.player.buyTalent(this.talentBuyAmount);\r\n        this._setBuyAmount(this.buyBtnIdx);\r\n        this._updateShade();\r\n    }\r\n\r\n    _increaseStat(stat) {\r\n        var amount = this.shiftModifier === true ?\r\n            Math.max(1, Math.floor(this.player.statPoints * BUY_PERCENT[0][this.buyBtnIdx])) :\r\n            BUY_FLAT[0][this.buyBtnIdx];\r\n        this.player.increaseStat(stat, amount);\r\n    }\r\n\r\n    _openExportDialog() {\r\n        this._closeExportDialog();\r\n        this.exportDialog = new _ui_OptionsDialog__WEBPACK_IMPORTED_MODULE_23__[\"OptionsDialog\"](this, 485, 120);\r\n        this.exportDialog.onCloseHandler(() => { this._closeExportDialog(); });\r\n    }\r\n    _closeExportDialog() {\r\n        if (this.exportDialog !== undefined) {\r\n            this.exportDialog.destroy();\r\n            this.exportDialog = undefined;\r\n        }\r\n    }\r\n    _openGuideWindow() {\r\n        this._closeGuideWindow();\r\n        this.guideWindow = new _ui_GuideWindow__WEBPACK_IMPORTED_MODULE_24__[\"GuideWindow\"](this, 175, 100);\r\n        this.guideWindow.onCloseHandler(() => { this._closeGuideWindow(); });\r\n    }\r\n    _closeGuideWindow() {\r\n        if (this.guideWindow !== undefined) {\r\n            this.guideWindow.destroy();\r\n            this.guideWindow = undefined;\r\n        }\r\n    }\r\n    _openStatsWindow() {\r\n        this._closeStatsWindow();\r\n        this.statsWindow = new _ui_StatsWindow__WEBPACK_IMPORTED_MODULE_30__[\"StatsWindow\"](this, 175, 100);\r\n        this.statsWindow.onCloseHandler(() => { this._closeStatsWindow(); });\r\n    }\r\n    _closeStatsWindow() {\r\n        if (this.statsWindow !== undefined) {\r\n            this.statsWindow.destroy();\r\n            this.statsWindow = undefined;\r\n        }\r\n    }\r\n\r\n    _updateWeek() {\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().autoGearUpgrade === true) {\r\n            if (this.player.weapon !== undefined) {\r\n                _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"].getInstance().upgradeGear(this.player.weapon);\r\n            }\r\n            if (this.player.armor !== undefined) {\r\n                _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"].getInstance().upgradeGear(this.player.armor);\r\n            }\r\n            if (this.player.trinket !== undefined) {\r\n                _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"].getInstance().upgradeGear(this.player.trinket);\r\n            }\r\n            this.gearScene.refresh(false);\r\n        }\r\n    }\r\n\r\n    rebirth() {\r\n        this.player.applyRitualBonuses();\r\n        _data_RitualData__WEBPACK_IMPORTED_MODULE_29__[\"RitualData\"].getInstance().rebirth();\r\n        this.player.rebirth();\r\n        var gear = new _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"]();\r\n        gear.rebirth();\r\n        this.worldData.rebirth();\r\n        this.progression.rebirth();\r\n        var lore = new _data_LoreStore__WEBPACK_IMPORTED_MODULE_17__[\"LoreStore\"]();\r\n        lore.rebirth();\r\n        this.resourceTierSelected = 0;\r\n        this.worldData.time.setTimeScale(1);\r\n\r\n        this.gearButton.setVisible(this.progression.unlocks.gearTab);\r\n        this.regionButton.setVisible(this.progression.unlocks.exploreTab);\r\n        this.combatButton.setVisible(this.progression.unlocks.combatTab);\r\n        this.townButton.setVisible(_data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].instance.getCurrentRegion().townData.townExplored);\r\n        this.talentButton.setVisible(this.progression.unlocks.talentsTab);\r\n        this.worldButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().unlocks.worldTab === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true);\r\n        this.moonlightButton.setVisible(this.progression.totalCounts.timesGated > 0);\r\n        this._layoutStats();\r\n        this._updateInfuseCosts();\r\n        this.gearShowTimer = 2000;\r\n\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore === true) {\r\n            this.gearShowTimer = 0;\r\n            this.player.equip(gear.getGearByName(\"Broken Sword\"));\r\n            this.player.equip(gear.getGearByName(\"Old Leathers\"));\r\n            this.player.equip(gear.getGearByName(\"Barrel Lid\"));\r\n        }\r\n\r\n        this.loreScene.rebirth();\r\n        this.gearScene.rebirth();\r\n        this.talentScene.rebirth();\r\n        this.regionScene.rebirth();\r\n        this.combatScene.rebirth();\r\n        this.townScene.rebirth();\r\n        this.worldScene.rebirth();\r\n\r\n        //reset images back to adventurer\r\n        this.statIcons[5].setImage({ sprite: \"icons\", tile: 5 });\r\n        this.statIcons[6].setImage({ sprite: \"icons\", tile: 6 });\r\n\r\n        this.scene.bringToTop(\"LoreScene\");\r\n        this.scene.bringToTop();\r\n\r\n        this.loreScene.addText(\"You open your eyes and see a vast wilderness before you. \" +\r\n            \"Unsure of how you got here you check your surroundings for any clues. You find \" +\r\n            \"a broken sword, an old barrel lid and some worn, raggy leathers. Not great, but \" +\r\n            \"you're also naked so you take what you can get.\\n\\n\" +\r\n            \"After putting these on you should go exploring.\");\r\n    }\r\n\r\n    changeRegion() {\r\n        this.townButton.setVisible(_data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].getInstance().getCurrentRegion().townData.townExplored);\r\n    }\r\n\r\n    refreshAll() {\r\n        this.gearButton.setVisible(this.progression.unlocks.gearTab);\r\n        this.regionButton.setVisible(this.progression.unlocks.exploreTab);\r\n        this.combatButton.setVisible(this.progression.unlocks.combatTab);\r\n        this.townButton.setVisible(_data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].instance.getCurrentRegion().townData.townExplored);\r\n        this.talentButton.setVisible(this.progression.unlocks.talentsTab);\r\n        this.worldButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().unlocks.worldTab === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === true ||\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_9__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true);\r\n        this.moonlightButton.setVisible(this.progression.totalCounts.timesGated > 0);\r\n        this._layoutStats();\r\n        this._updateInfuseCosts();\r\n\r\n        this.loreScene.refresh();\r\n        this.gearScene.refresh();\r\n        this.talentScene.refresh();\r\n        this.regionScene.refresh();\r\n        this.worldScene.refresh();\r\n        this.townScene.refresh();\r\n        this.moonlightScene.refresh();\r\n    }\r\n\r\n    update(time, __delta) {\r\n        var lastFrameTime = time - this.lastFrame;\r\n        if (lastFrameTime > 15000) {\r\n            this.worldData.time.addOfflineTime(lastFrameTime);\r\n        }\r\n        this.worldData.time.setFrameDelta(Math.min(500, lastFrameTime));\r\n        this.lastFrame = time;\r\n        var fDelta = this.worldData.time.frameDelta;\r\n\r\n        for (var i = 0; i < this.worldData.time.fskip; i++) {\r\n            this.worldData.update(fDelta);\r\n            this.player.statBlock.tickRegen(fDelta, this.combatScene.isInCombat());\r\n            if (this.showTimeThisRun === true) {\r\n                var runTime = _data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].getInstance().time.time - _data_WorldData__WEBPACK_IMPORTED_MODULE_13__[\"WorldData\"].getInstance().timeAtRunStart;\r\n                this.worldTimeLabel.setText(\"Current Run: \" + new _data_WorldTime__WEBPACK_IMPORTED_MODULE_25__[\"WorldTime\"](runTime).getTimespanText());\r\n            } else {\r\n                this.worldTimeLabel.setText(this.worldData.time.getText());\r\n            }\r\n        }\r\n\r\n        if (this.progression.unlocks.gearTab !== true) {\r\n            this.gearShowTimer -= fDelta;\r\n            if (this.gearShowTimer <= 0) {\r\n                this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].UNLOCK_GEAR_TAB);\r\n            }\r\n        }\r\n\r\n        if (this.resourcesDirty === true) {\r\n            for (var i = 0; i < this.resourceChanges.length; i++) {\r\n                if (this.resourceChanges[i] !== 0) {\r\n                    this.resourceIncLabels[i].setValue(Math.round(this.resourceChanges[i]));\r\n                }\r\n            }\r\n            this.resourceChanges = [0, 0, 0, 0, 0, 0];\r\n            this.resourcesDirty = false;\r\n        }\r\n        for (var i = 0; i < this.resourceIncLabels.length; i++) {\r\n            this.resourceIncLabels[i].update(this.worldData.time.delta);\r\n        }\r\n\r\n        // regardless of time dialation we still only want to save every minute\r\n        this.saveTimer -= this.worldData.time.delta;\r\n        if (this.saveTimer <= 0) {\r\n            this.saveTimer = _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].AUTOSAVE_TIMER;\r\n            this.save();\r\n        }\r\n\r\n        if (Phaser.Input.Keyboard.JustUp(this.shiftKey)) {\r\n            this.shiftModifier = false;\r\n            this._setBuyAmount(this.buyBtnIdx);\r\n        } else if (Phaser.Input.Keyboard.JustDown(this.shiftKey)) {\r\n            this.shiftModifier = true;\r\n            this._setBuyAmount(this.buyBtnIdx);\r\n        }\r\n    }\r\n\r\n    copyToClipboard() {\r\n        navigator.clipboard.writeText(lz_string__WEBPACK_IMPORTED_MODULE_22___default.a.compressToEncodedURIComponent(localStorage.getItem(\"save-beta\"))).then(() => { },\r\n            () => {\r\n                prompt(\"This is your save string, make sure you copy it!\",\r\n                    lz_string__WEBPACK_IMPORTED_MODULE_22___default.a.compressToEncodedURIComponent(localStorage.getItem(\"save-beta\")));\r\n            });\r\n    }\r\n\r\n    copyFromClipboard() {\r\n        var that = this;\r\n        if (navigator.clipboard.readText === undefined) {\r\n            var text = prompt(\"Paste your save string\", \"\");\r\n            if (text !== \"\") {\r\n                that.loadGame(text);\r\n                that.refreshAll();\r\n            }\r\n        } else {\r\n            navigator.clipboard.readText().then((text) => {\r\n                if (text !== \"\") {\r\n                    that.loadGame(text);\r\n                    that.refreshAll();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _getSaveObj() {\r\n        return {\r\n            version: _data_Statics__WEBPACK_IMPORTED_MODULE_10__[\"Statics\"].VERSION_NUMBER,\r\n            saveTime: Date.now(),\r\n            settings: _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().save(),\r\n            player: this.player.save(),\r\n            gear: _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"].getInstance().save(),\r\n            world: this.worldData.save(),\r\n            progression: this.progression.save(),\r\n            moon: this.moonlight.save(),\r\n            star: this.starData.save(),\r\n            ritual: _data_RitualData__WEBPACK_IMPORTED_MODULE_29__[\"RitualData\"].getInstance().save(),\r\n            lore: _data_LoreStore__WEBPACK_IMPORTED_MODULE_17__[\"LoreStore\"].getInstance().save()\r\n        }\r\n    }\r\n    save() {\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"].getInstance().saveEnabled === false) {\r\n            return;\r\n        }\r\n        var saveObj = this._getSaveObj();\r\n\r\n        localStorage.setItem(\"save-beta\", JSON.stringify(saveObj));\r\n    }\r\n\r\n    loadGame(saveStr = undefined) {\r\n        var saveObj = {};\r\n        if (saveStr !== undefined) {\r\n            saveObj = JSON.parse(lz_string__WEBPACK_IMPORTED_MODULE_22___default.a.decompressFromEncodedURIComponent(saveStr));\r\n        } else {\r\n            saveObj = JSON.parse(localStorage.getItem(\"save-beta\"));\r\n        }\r\n        if (saveObj === null) {\r\n            return;\r\n        }\r\n\r\n        var gearData = new _data_GearData__WEBPACK_IMPORTED_MODULE_11__[\"GearData\"]();\r\n        var lore = new _data_LoreStore__WEBPACK_IMPORTED_MODULE_17__[\"LoreStore\"]();\r\n\r\n        if (saveObj.version > 4) {\r\n            var dynamicSettings = new _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_21__[\"DynamicSettings\"]();\r\n            dynamicSettings.load(saveObj.settings);\r\n        }\r\n        this.progression.load(saveObj.progression, saveObj.version);\r\n        this.moonlight.load(saveObj.moon, saveObj.version);\r\n        if (saveObj.star !== undefined) {\r\n            this.starData.load(saveObj.star, saveObj.version);\r\n        }\r\n        if (saveObj.ritual !== undefined) {\r\n            _data_RitualData__WEBPACK_IMPORTED_MODULE_29__[\"RitualData\"].getInstance().load(saveObj.ritual, saveObj.version);\r\n        }\r\n        gearData.load(saveObj.gear, saveObj.version);\r\n        //player needs to load after gear\r\n        this.player.load(saveObj.player, saveObj.version);\r\n        this.worldData.load(saveObj.world, saveObj.version);\r\n        lore.load(saveObj.lore, saveObj.version);\r\n        var timeOffline = Date.now() - saveObj.saveTime;\r\n        if (timeOffline > 60000) {\r\n            this.worldData.time.addOfflineTime(timeOffline);\r\n        }\r\n\r\n        //handle new progression milestones here:\r\n        this.progression.persistentUnlocks.autoGear = this.moonlight.challenges.forge.completions > 0;\r\n        this.progression.persistentUnlocks.autoTown = this.moonlight.challenges.buildings.completions > 0;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/GameScene.js?");

/***/ }),

/***/ "./src/scenes/GearScene.js":
/*!*********************************!*\
  !*** ./src/scenes/GearScene.js ***!
  \*********************************/
/*! exports provided: GearScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GearScene\", function() { return GearScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ui_GearCraftDisplay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/GearCraftDisplay */ \"./src/ui/GearCraftDisplay.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_GearDisplay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/GearDisplay */ \"./src/ui/GearDisplay.js\");\n/* harmony import */ var _data_GearData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/GearData */ \"./src/data/GearData.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _ui_GearRuneWindow__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/GearRuneWindow */ \"./src/ui/GearRuneWindow.js\");\n/* harmony import */ var _ui_ImageButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui/ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _ui_RuneUpgradeWindow__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ui/RuneUpgradeWindow */ \"./src/ui/RuneUpgradeWindow.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ui/HighlightElementGroup */ \"./src/ui/HighlightElementGroup.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BUY_FLAT = [1, 10, 100, 1000];\r\nconst BUY_PERCENT = [0.1, 0.25, 0.5, 1];\r\n\r\nclass GearScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_7__[\"PlayerData\"]();\r\n        this.page = 0;\r\n        this.gearList = [];\r\n        this.craftDisplays = [];\r\n        this.gearDisplays = [];\r\n\r\n        this.progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"]();\r\n\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_11__[\"WorldData\"].getInstance().time.registerEvent(\"onDayEnd\", () => { this._setupView(); });\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.runeBtn = new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_9__[\"ImageButton\"](this, this.relativeX(250), this.relativeY(10), 32, 32, { sprite: \"runeicons\", tile: 0 });\r\n        this.runeBtn.onClickHandler(() => { this._onRuneUpgradeHandler(); });\r\n        this.runeBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().unlocks.runes);\r\n        var tx = 290;\r\n        this.equippedBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"E\");\r\n        this.equippedBtn.onClickHandler(() => { this._changeFilter(-2); });\r\n        tx += 30;\r\n        this.allBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 50, 20, \"All\");\r\n        this.allBtn.onClickHandler(() => { this._changeFilter(-1); });\r\n        tx += 50;\r\n        this.tier0Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 80, 20, \"Broken\");\r\n        this.tier0Btn.onClickHandler(() => { this._changeFilter(0); });\r\n        tx += 80;\r\n        this.tier1Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T1\");\r\n        this.tier1Btn.onClickHandler(() => { this._changeFilter(1); });\r\n        tx += 30;\r\n        this.tier2Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T2\");\r\n        this.tier2Btn.onClickHandler(() => { this._changeFilter(2); });\r\n        tx += 30;\r\n        this.tier3Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T3\");\r\n        this.tier3Btn.onClickHandler(() => { this._changeFilter(3); });\r\n        tx += 30;\r\n        this.tier4Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T4\");\r\n        this.tier4Btn.onClickHandler(() => { this._changeFilter(4); });\r\n        tx += 30;\r\n        this.tier5Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T5\");\r\n        this.tier5Btn.onClickHandler(() => { this._changeFilter(5); });\r\n        tx += 30;\r\n        this.tier6Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T6\");\r\n        this.tier6Btn.onClickHandler(() => { this._changeFilter(6); });\r\n        tx += 30;\r\n        this.tier7Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T7\");\r\n        this.tier7Btn.onClickHandler(() => { this._changeFilter(7); });\r\n        tx += 30;\r\n        this.tier8Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(tx), this.relativeY(10), 30, 20, \"T8\");\r\n        this.tier8Btn.onClickHandler(() => { this._changeFilter(8); });\r\n        this.tabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_14__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.tabGroup.addElement(this.equippedBtn);\r\n        this.tabGroup.addElement(this.allBtn);\r\n        this.tabGroup.addElement(this.tier0Btn);\r\n        this.tabGroup.addElement(this.tier1Btn);\r\n        this.tabGroup.addElement(this.tier2Btn);\r\n        this.tabGroup.addElement(this.tier3Btn);\r\n        this.tabGroup.addElement(this.tier4Btn);\r\n        this.tabGroup.addElement(this.tier5Btn);\r\n        this.tabGroup.addElement(this.tier6Btn);\r\n        this.tabGroup.addElement(this.tier7Btn);\r\n        this.tabGroup.addElement(this.tier8Btn);\r\n        this.tabGroup._updateHighlights(1);\r\n\r\n        this.prevPageBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(850), this.relativeY(10), 20, 20, \"<\")\r\n            .onClickHandler(() => { this._prevPage(); });\r\n        this.nextPageBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(870), this.relativeY(10), 20, 20, \">\")\r\n            .onClickHandler(() => { this._nextPage(); });\r\n\r\n        this.buyMaxLabel = this.add.bitmapText(this.relativeX(10), this.relativeY(10), \"courier20\", \"Upgrade Amount:\");\r\n        this.buyMaxButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(170), this.relativeY(10), 40, 20, \"1x\")\r\n            .onClickHandler(() => { this._toggleBuyMax(); });\r\n        this.autoUpgradeLabel = this.add.bitmapText(this.relativeX(10), this.relativeY(40), \"courier20\", \"Auto Upgrade:\");\r\n        this.autoUpgradeButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(170), this.relativeY(40), 40, 20, \"OFF\")\r\n            .onClickHandler(() => { this._toggleAutoUpgrade(); });\r\n        this.autoUpgradeLabel.setVisible(false);\r\n        this.autoUpgradeButton.setVisible(false);\r\n        this.craftingCostLabel = this.add.bitmapText(this.relativeX(10), this.relativeY(90), \"courier16\", \"Crafting Cost: 100%\");\r\n        this.weaponLabel = this.add.bitmapText(this.relativeX(0), this.relativeY(0), \"courier20\", \"Weapon\");\r\n        this.armorLabel = this.add.bitmapText(this.relativeX(0), this.relativeY(0), \"courier20\", \"Armor\");\r\n        this.trinketLabel = this.add.bitmapText(this.relativeX(0), this.relativeY(0), \"courier20\", \"Trinket\");\r\n\r\n\r\n        this._updateTierButtons();\r\n        this._setupGearDisplays();\r\n        this._changeFilter(-1);\r\n\r\n        this.buyMax = false;\r\n\r\n        var progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"]();\r\n        progression.addOnUnlockHandler((type, count, text) => { this._handleProgressionEvents(type, count, text); });\r\n    }\r\n\r\n    _handleProgressionEvents(type, __count, __text) {\r\n        switch (type) {\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].UNLOCK_RESOURCE_UI:\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].UNLOCK_CRAFTING_UI:\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].UNLOCK_RUNES_UI:\r\n                this._updateTierButtons();\r\n                this._setupView();\r\n                this.runeBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().unlocks.runes);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _updateTierButtons() {\r\n        var gearData = new _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"]();\r\n        this.tier1Btn.setVisible(gearData.tiersAvailable >= 1);\r\n        this.tier2Btn.setVisible(gearData.tiersAvailable >= 2);\r\n        this.tier3Btn.setVisible(gearData.tiersAvailable >= 3);\r\n        this.tier4Btn.setVisible(gearData.tiersAvailable >= 4);\r\n        this.tier5Btn.setVisible(gearData.tiersAvailable >= 5);\r\n        this.tier6Btn.setVisible(gearData.tiersAvailable >= 6);\r\n        this.tier7Btn.setVisible(gearData.tiersAvailable >= 7);\r\n        this.tier8Btn.setVisible(gearData.tiersAvailable >= 8);\r\n    }\r\n\r\n    _toggleBuyMax() {\r\n        this.buyMax = this.buyMax === true ? false : true;\r\n        this.buyMaxButton.setText(this.buyMax === true ? \"Max\" : \"1x\");\r\n    }\r\n\r\n    _toggleAutoUpgrade() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoGearUpgrade = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoGearUpgrade === true ? false : true;\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoGearUpgrade === true) {\r\n            this.autoUpgradeButton.setText(\"ON\");\r\n        } else {\r\n            this.autoUpgradeButton.setText(\"OFF\");\r\n        }\r\n    }\r\n\r\n    _nextPage() {\r\n        if (this.page * 6 + 6 < this.gearList.length) {\r\n            this.page += 1;\r\n        }\r\n        this._setupView();\r\n    }\r\n    _prevPage() {\r\n        if (this.page > 0) {\r\n            this.page -= 1;\r\n        }\r\n        this._setupView();\r\n    }\r\n\r\n    _changeFilter(filter) {\r\n        if (filter === -2 || filter === -1) {\r\n            this.craftingCostLabel.setText(\"Crafting Cost: N/A\");\r\n        } else if (filter === 0) {\r\n            this.craftingCostLabel.setText(\"Crafting Cost: 100%\");\r\n        } else {\r\n            this.craftingCostLabel.setText(\"Crafting Cost: \" + (Math.round(this.player.getCraftingCosts(filter - 1) * 10000) / 100) + \"%\");\r\n        }\r\n        var gearData = new _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"]();\r\n        this.gearList = [];\r\n        this.page = 0;\r\n        for (var i = 0; i < gearData.gear.length; i++) {\r\n            if (filter === -2 && _data_PlayerData__WEBPACK_IMPORTED_MODULE_7__[\"PlayerData\"].getInstance().isEquippedItem(gearData.gear[i])) {\r\n                this.gearList.push(gearData.gear[i]);\r\n            }\r\n            else if ((filter === -1 || filter === gearData.gear[i].tier) && gearData.gear[i].tier <= gearData.tiersAvailable) {\r\n                this.gearList.push(gearData.gear[i]);\r\n            }\r\n        }\r\n        this._setupView();\r\n    }\r\n\r\n    _setupGearDisplays() {\r\n        for (var i = 0; i < this.gearDisplays.length; i++) {\r\n            this.gearDisplays[i].destroy();\r\n        }\r\n        this.gearDisplays = [];\r\n\r\n        this.autoUpgradeButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoGear);\r\n        this.autoUpgradeLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoGear);\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_13__[\"DynamicSettings\"].getInstance().autoGearUpgrade === true) {\r\n            this.autoUpgradeButton.setText(\"ON\");\r\n        } else {\r\n            this.autoUpgradeButton.setText(\"OFF\");\r\n        }\r\n\r\n        this.weaponLabel.setPosition(this.relativeX(10), this.relativeY(110));\r\n        var h = 110 + this.weaponLabel.getTextBounds(true).local.height;\r\n\r\n        this.gearDisplays.push(new _ui_GearDisplay__WEBPACK_IMPORTED_MODULE_5__[\"GearDisplay\"](this, this.relativeX(20), this.relativeY(h), this.player.weapon));\r\n        h += 20 + this.gearDisplays[0].getTextBounds();\r\n\r\n        this.armorLabel.setPosition(this.relativeX(10), this.relativeY(h));\r\n        h += this.armorLabel.getTextBounds(true).local.height;\r\n\r\n        this.gearDisplays.push(new _ui_GearDisplay__WEBPACK_IMPORTED_MODULE_5__[\"GearDisplay\"](this, this.relativeX(20), this.relativeY(h), this.player.armor));\r\n        h += 20 + this.gearDisplays[1].getTextBounds();\r\n\r\n        this.trinketLabel.setPosition(this.relativeX(10), this.relativeY(h));\r\n        h += this.trinketLabel.getTextBounds(true).local.height;\r\n\r\n        this.gearDisplays.push(new _ui_GearDisplay__WEBPACK_IMPORTED_MODULE_5__[\"GearDisplay\"](this, this.relativeX(20), this.relativeY(h), this.player.trinket));\r\n    }\r\n\r\n    _onEquipHandler(gear) {\r\n        this.player.equip(gear);\r\n        this._setupView();\r\n        this._setupGearDisplays();\r\n    }\r\n    _onUpgradeHandler(gear) {\r\n        if (this.buyMax === true) {\r\n            var cost = _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().getGearCost(gear);\r\n            while (_utils_Common__WEBPACK_IMPORTED_MODULE_12__[\"Common\"].canCraft(cost[0], _data_PlayerData__WEBPACK_IMPORTED_MODULE_7__[\"PlayerData\"].getInstance().resources[cost[1]])) {\r\n                _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().upgradeGear(gear);\r\n                cost = _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().getGearCost(gear);\r\n            }\r\n        } else {\r\n            _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().upgradeGear(gear);\r\n        }\r\n        this._setupGearDisplays();\r\n        this._setupView();\r\n    }\r\n    _onFuseHandler(gear) {\r\n        var idx = this.scene.get(\"DarkWorld\").buyBtnIdx;\r\n        var shift = this.scene.get(\"DarkWorld\").shiftModifier;\r\n        var motesFused = shift === true ? Math.floor(this.player.motes * BUY_PERCENT[idx]) :\r\n            Math.min(this.player.motes, BUY_FLAT[idx]);\r\n        _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().fuseGear(gear, motesFused);\r\n\r\n        this._setupView();\r\n        this._setupGearDisplays();\r\n    }\r\n    _onRuneHandler(gear) {\r\n        this._closeRuneWindow();\r\n        this.runeWindow = new _ui_GearRuneWindow__WEBPACK_IMPORTED_MODULE_8__[\"GearRuneWindow\"](this, 350, 150, gear);\r\n        this.runeWindow.onCancelHandler(() => { this._closeRuneWindow(); });\r\n    }\r\n    _onRuneUpgradeHandler(gear) {\r\n        this._closeRuneWindow();\r\n        this.runeWindow = new _ui_RuneUpgradeWindow__WEBPACK_IMPORTED_MODULE_10__[\"RuneUpgradeWindow\"](this, 350, 150, gear);\r\n        this.runeWindow.onCancelHandler(() => { this._closeRuneWindow(); });\r\n    }\r\n\r\n    _closeRuneWindow() {\r\n        if (this.runeWindow !== undefined) {\r\n            this.runeWindow.destroy();\r\n            this.runeWindow = undefined;\r\n        }\r\n    }\r\n\r\n    _setupView() {\r\n        for (var i = 0; i < this.craftDisplays.length; i++) {\r\n            this.craftDisplays[i].destroy();\r\n        }\r\n        this.craftDisplays = [];\r\n        for (var i = this.page * 6; i < Math.min(this.gearList.length, this.page * 6 + 6); i++) {\r\n            var x = this.relativeX(290 + i % 2 * 305);\r\n            var y = this.relativeY(40 + Math.floor((i - this.page * 6) / 2) * 215);\r\n            this.craftDisplays.push(new _ui_GearCraftDisplay__WEBPACK_IMPORTED_MODULE_2__[\"GearCraftDisplay\"](this, x, y, this.gearList[i])\r\n                .registerEvents(\"onEquip\", (gear) => { this._onEquipHandler(gear); })\r\n                .registerEvents(\"onUpgrade\", (gear) => { this._onUpgradeHandler(gear); })\r\n                .registerEvents(\"onFuse\", (gear) => { this._onFuseHandler(gear); })\r\n                .registerEvents(\"onRune\", (gear) => { this._onRuneHandler(gear); }));\r\n        }\r\n    }\r\n\r\n    refresh(changeFilter = true) {\r\n        this._updateTierButtons();\r\n        this._setupGearDisplays();\r\n        if (changeFilter) {\r\n            this._changeFilter(-1);\r\n        }\r\n    }\r\n\r\n    rebirth() {\r\n        this._updateTierButtons();\r\n        this._setupGearDisplays();\r\n        this._changeFilter(-1);\r\n    }\r\n\r\n    update(__time, __delta) {\r\n        if (this.progression.unlocks.exploreTab === false) {\r\n            if (this.player.weapon !== undefined &&\r\n                this.player.armor !== undefined &&\r\n                this.player.trinket !== undefined) {\r\n                this.progression.registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_3__[\"Statics\"].UNLOCK_EXPLORE_TAB,\r\n                    \"Now that you're all equipped it's time to explore. It's not like\\n\" +\r\n                    \"staying here is going to do you any good.\\n\");\r\n            }\r\n        }\r\n        if (this.runeWindow !== undefined) {\r\n            this.runeWindow.update();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/GearScene.js?");

/***/ }),

/***/ "./src/scenes/LoreScene.js":
/*!*********************************!*\
  !*** ./src/scenes/LoreScene.js ***!
  \*********************************/
/*! exports provided: LoreScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LoreScene\", function() { return LoreScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_LoreLabel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/LoreLabel */ \"./src/ui/LoreLabel.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_LoreStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/LoreStore */ \"./src/data/LoreStore.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass LoreScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.labels = [];\r\n        this.labelIndex = 0;\r\n        this.loreStore = new _data_LoreStore__WEBPACK_IMPORTED_MODULE_4__[\"LoreStore\"]();\r\n        this.labelCount = undefined;\r\n    }\r\n\r\n    relativeX(val) {\r\n        return super.relativeX(val) + 1000;\r\n    }\r\n\r\n    refresh() {\r\n        this.cameras.getCamera(\"loreBox\").scrollY = this.relativeY(0);\r\n        for (var i = 0; i < this.labels.length; i++) {\r\n            this.labels[i].destroy();\r\n        }\r\n        this.labels = [];\r\n        this.labelIndex = 0;\r\n\r\n        for (var i = 0; i < this.loreStore.lore.length; i++) {\r\n            this.addText(this.loreStore.lore[i], false);\r\n        }\r\n        this._scrollTo(this.labels.length - 1);\r\n    }\r\n\r\n    rebirth() {\r\n        this.cameras.getCamera(\"loreBox\").scrollY = this.relativeY(0);\r\n        for (var i = 0; i < this.labels.length; i++) {\r\n            this.labels[i].destroy();\r\n        }\r\n        this.labels = [];\r\n        this.labelIndex = 0;\r\n    }\r\n\r\n    create() {\r\n        this.cameras.add(super.relativeX(0), this.relativeY(30), 900, 670, false, \"loreBox\");\r\n        this.cameras.getCamera(\"loreBox\").scrollX = this.relativeX(0);\r\n        this.cameras.getCamera(\"loreBox\").scrollY = this.relativeY(0);\r\n        //background\r\n        this.add.rectangle(super.relativeX(0), this.relativeY(0), 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.progresion = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"]();\r\n        this.progresion.addOnUnlockHandler((a, b, c) => { this._handleProgressionEvents(a, b, c) });\r\n\r\n        this.upButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this, super.relativeX(20), this.relativeY(5), 60, 20, 'up');\r\n        this.upButton.onClickHandler(() => { this._scrollUp(); });\r\n        this.downButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this, super.relativeX(80), this.relativeY(5), 60, 20, 'down');\r\n        this.downButton.onClickHandler(() => { this._scrollDown(); });\r\n\r\n        for (var i = 0; i < this.loreStore.lore.length; i++) {\r\n            this.addText(this.loreStore.lore[i], false);\r\n        }\r\n        this._scrollTo(this.labels.length - 1);\r\n\r\n        this.labelCount = this.add.bitmapText(super.relativeX(170), this.relativeY(5), \"courier20\", (this.labelIndex + 1) + \"/\" + this.labels.length);\r\n    }\r\n\r\n    _scrollUp() {\r\n        if (this.labelIndex > 0) {\r\n            this.labelIndex -= 1;\r\n        }\r\n        this._scrollTo(this.labelIndex);\r\n    }\r\n\r\n    _scrollDown() {\r\n        if (this.labelIndex < this.labels.length - 1) {\r\n            this.labelIndex += 1;\r\n        }\r\n        this._scrollTo(this.labelIndex);\r\n    }\r\n\r\n    _scrollTo(index) {\r\n        if (index < 0 || index >= this.labels.length) {\r\n            return;\r\n        }\r\n        this.labelIndex = index;\r\n        this.cameras.getCamera(\"loreBox\").scrollY = this.labels[this.labelIndex].getPosY() - 10;\r\n        if (this.labelCount !== undefined) {\r\n            this.labelCount.setText((this.labelIndex + 1) + \"/\" + this.labels.length);\r\n        }\r\n    }\r\n\r\n    _handleProgressionEvents(_type, _count, text) {\r\n        if (text !== undefined && text !== \"\") {\r\n            this.addText(text);\r\n        }\r\n    }\r\n\r\n    addText(text, addToStore = true) {\r\n        // to prevent infinite lore adding\r\n        if (addToStore === true) {\r\n            this.loreStore.addLore(text);\r\n        }\r\n        var x = this.relativeX(10);\r\n        var y = this.relativeY(10);\r\n        if (this.labels.length !== 0) {\r\n            x = this.labels[this.labels.length - 1].getPosX();\r\n            y = this.labels[this.labels.length - 1].getHeight();\r\n        }\r\n        this.labels.push(new _ui_LoreLabel__WEBPACK_IMPORTED_MODULE_2__[\"LoreLabel\"](this, x, y, text, 85, \"courier20\", 20));\r\n        if (this.labelCount !== undefined) {\r\n            this.labelCount.setText((this.labelIndex + 1) + \"/\" + this.labels.length);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/LoreScene.js?");

/***/ }),

/***/ "./src/scenes/MoonlightScene.js":
/*!**************************************!*\
  !*** ./src/scenes/MoonlightScene.js ***!
  \**************************************/
/*! exports provided: MoonlightScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoonlightScene\", function() { return MoonlightScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_ChallengeWindow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/ChallengeWindow */ \"./src/ui/ChallengeWindow.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _ui_ActiveChallengeDialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui/ActiveChallengeDialog */ \"./src/ui/ActiveChallengeDialog.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _MoonlightView__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MoonlightView */ \"./src/scenes/MoonlightView.js\");\n/* harmony import */ var _StarshardView__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./StarshardView */ \"./src/scenes/StarshardView.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MOONLIGHT_VIEW = 0;\r\nconst STARSHARD_VIEW = 1;\r\n\r\nclass MoonlightScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.canLevelPerks = false;\r\n        this.currentView = MOONLIGHT_VIEW;\r\n\r\n        this.moonlightContainer = new _MoonlightView__WEBPACK_IMPORTED_MODULE_8__[\"MoonlightView\"](this, this.relativeX(0), this.relativeY(0));\r\n        this.starshardContainer = new _StarshardView__WEBPACK_IMPORTED_MODULE_9__[\"StarshardView\"](this, this.relativeX(0), this.relativeY(0));\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 1100, 800, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n        this.moonlightContainer.create();\r\n        this.starshardContainer.create();\r\n        this.starshardContainer.setVisible(false);\r\n\r\n        this.exitButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](this, this.relativeX(950), this.relativeY(730), 120, 40, \"BACK\")\r\n            .onClickHandler(() => {\r\n                if (this.canLevelPerks === true) {\r\n                    this.exitButton.setText(\"BACK\");\r\n                    var game = this.scene.get(\"DarkWorld\");\r\n                    this.canLevelPerks = false;\r\n                    this.moonlightContainer.canLevelPerks = false;\r\n                    this.starshardContainer.canLevelPerks = false;\r\n                    _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__[\"DynamicSettings\"].getInstance().reset();\r\n                    game.rebirth();\r\n                } else {\r\n                    this.scene.sendToBack();\r\n                }\r\n            });\r\n\r\n        this.challengeBox = undefined;\r\n\r\n        this.challengeBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](this, this.relativeX(950), this.relativeY(12), 120, 30, \"Challenges\")\r\n            .onClickHandler(() => { this._setupChallengeWindow(); });\r\n        this.challengePointIcon = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_7__[\"TooltipImage\"](this, 20, 20, 16, 16, { sprite: \"moonicons\", tile: 7 },\r\n            \"Challenge Points earned from completing challenges. Each point increases your core stats by an additional 1%.\");\r\n        this.challengePointLabel = this.add.bitmapText(40, 20, \"courier20\", _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].instance.challengePoints + \"\");\r\n        this.challengeBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n        this.challengePointIcon.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n        this.challengePointLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n\r\n        this.moonlightBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](this, this.relativeX(950), this.relativeY(50), 120, 30, \"Moonlight\")\r\n            .onClickHandler(() => { this._switchView(MOONLIGHT_VIEW); });\r\n        this.starshardBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](this, this.relativeX(950), this.relativeY(88), 120, 30, \"Star Shards\")\r\n            .onClickHandler(() => { this._switchView(STARSHARD_VIEW); });\r\n\r\n        this.moonlightBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true);\r\n        this.starshardBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true);\r\n    }\r\n\r\n    _switchView(id) {\r\n        this.currentView = id;\r\n        if (id === MOONLIGHT_VIEW) {\r\n            this.moonlightContainer.setVisible(true);\r\n            this.starshardContainer.setVisible(false);\r\n        } else {\r\n            this.moonlightContainer.setVisible(false);\r\n            this.starshardContainer.setVisible(true);\r\n        }\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        if (this.currentView === MOONLIGHT_VIEW) {\r\n            this.moonlightContainer.refreshView();\r\n        } else {\r\n            this.starshardContainer.refreshView();\r\n        }\r\n        this._removeChallengeWindow();\r\n        this.challengeBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n        this.challengePointIcon.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n        this.challengePointLabel.setText(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].getInstance().challengePoints + \"\");\r\n        this.challengePointLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges);\r\n        this.moonlightBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true);\r\n        this.starshardBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true);\r\n    }\r\n\r\n    enableLeveling() {\r\n        this.starshardContainer.canLevelPerks = true;\r\n        this.moonlightContainer.canLevelPerks = true;\r\n        this.canLevelPerks = true;\r\n        this.exitButton.setText(\"REBIRTH\");\r\n        this.refresh();\r\n    }\r\n\r\n    _setupChallengeWindow() {\r\n        if (this.challengeBox !== undefined) {\r\n            this.challengeBox.destroy();\r\n            this.challengeBox = undefined;\r\n        }\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__[\"DynamicSettings\"].getInstance().challengeName !== \"\") {\r\n            this.challengeBox = new _ui_ActiveChallengeDialog__WEBPACK_IMPORTED_MODULE_6__[\"ActiveChallengeDialog\"](this, 200, 150)\r\n                .onAbandonHandler(() => { this._abandonChallenge(); })\r\n                .onCancelHandler(() => { this._removeChallengeWindow(); });\r\n        } else {\r\n            this.challengeBox = new _ui_ChallengeWindow__WEBPACK_IMPORTED_MODULE_4__[\"ChallengeWindow\"](this, 150, 100, this.canLevelPerks === false)\r\n                .onAcceptHandler((c) => { this._beginChallenge(c); })\r\n                .onCancelHandler(() => { this._removeChallengeWindow(); });\r\n        }\r\n    }\r\n    _removeChallengeWindow() {\r\n        if (this.challengeBox !== undefined) {\r\n            this.challengeBox.destroy();\r\n            this.challengeBox = undefined;\r\n        }\r\n    }\r\n    _beginChallenge(challenge) {\r\n        this.exitButton.setText(\"BACK\");\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__[\"DynamicSettings\"].getInstance().setupChallenge(challenge);\r\n        var game = this.scene.get(\"DarkWorld\");\r\n        this.canLevelPerks = false;\r\n        this.moonlightContainer.canLevelPerks = false;\r\n        this.starshardContainer.canLevelPerks = false;\r\n        game.rebirth();\r\n        if (this.challengeBox !== undefined) {\r\n            this.challengeBox.destroy();\r\n            this.challengeBox = undefined;\r\n        }\r\n    }\r\n    _abandonChallenge() {\r\n        if (this.challengeBox !== undefined) {\r\n            this.challengeBox.destroy();\r\n            this.challengeBox = undefined;\r\n        }\r\n        this.exitButton.setText(\"REBIRTH\");\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__[\"DynamicSettings\"].getInstance().reset();\r\n        this.canLevelPerks = true;\r\n        this.moonlightContainer.canLevelPerks = true;\r\n        this.starshardContainer.canLevelPerks = true;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/MoonlightScene.js?");

/***/ }),

/***/ "./src/scenes/MoonlightView.js":
/*!*************************************!*\
  !*** ./src/scenes/MoonlightView.js ***!
  \*************************************/
/*! exports provided: MoonlightView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoonlightView\", function() { return MoonlightView; });\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass MoonlightView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.canLevelPerks = false;\r\n        this.elements = [];\r\n\r\n        this.moonlightArray = [[648, 480], [672, 408], [624, 312], [552, 240], [456, 192], [360, 144], [264, 120],\r\n        [168, 144], [144, 216], [192, 312], [264, 384], [360, 432], [456, 480], [552, 504],\r\n        [528, 576], [312, 504], [120, 360], [120, 72], [72, 240], [672, 552], [744, 432], [696, 288],\r\n        [624, 192], [528, 120], [408, 72], [264, 48], [24, 384], [192, 456], [216, 552], [480, 648], [408, 552],\r\n        [336, 624], [-24, 240], [96, 504], [672, 624], [816, 480], [792, 288], [720, 168], [624, 72], [480, 0],\r\n        [288, -24], [120, 0], [696, 0], [768, 24], [792, 96]];\r\n    }\r\n\r\n    create() {\r\n        this.refreshView();\r\n    }\r\n\r\n    refreshView() {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].destroy();\r\n        }\r\n        this.elements = [];\r\n\r\n        var txt = this.scene.add.bitmapText(this.x + 550, this.y + 400, \"courier20\", \"MOONLIGHT\\n\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonlight)), 20, 1).setOrigin(0.5);\r\n        txt.setTint(Phaser.Display.Color.GetColor(206, 238, 240));\r\n        this.elements.push(txt);\r\n\r\n        var moonlight = new _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"]();\r\n        var idx = 0;\r\n        for (const prop in moonlight.moonperks) {\r\n            if ((prop === 'devotion' || prop === 'ninja' || prop === 'urbanization') &&\r\n                _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === false) {\r\n                continue;\r\n            }\r\n            var x = this.x + this.moonlightArray[idx][0] + 118;\r\n            var y = this.y + this.moonlightArray[idx][1] + 56;\r\n            this.elements.push(this._setupMoonlightButton(moonlight.moonperks[prop], x, y));\r\n            idx++;\r\n        }\r\n    }\r\n\r\n    _havePerkRequirements(perk) {\r\n        for (var i = 0; i < perk.requires.length; i++) {\r\n            if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks[perk.requires[i]].level === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    _levelUpPerk(perk) {\r\n        if (this.canLevelPerks === false) {\r\n            return;\r\n        }\r\n        _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().levelUpPerk(perk);\r\n    }\r\n\r\n    _setupMoonlightButton(perk, x, y) {\r\n        var txt = \"\";\r\n        if (perk.maxLevel !== -1) {\r\n            txt = perk.name + \" Lv\" + perk.level + \"/\" + perk.maxLevel + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getMoonlightTooltip(perk) + \"\\n\\n\";\r\n        } else {\r\n            txt = perk.name + \" Lv\" + perk.level + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getMoonlightTooltip(perk) + \"\\n\\n\";\r\n        }\r\n        var cost = Math.floor((perk.cost[0] + perk.cost[1] * (perk.level)) * Math.pow(perk.cost[2], perk.level));\r\n        txt += \"Costs \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(cost) + \" Moonlight\\n\";\r\n\r\n        var btn = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_3__[\"TooltipImage\"](this.scene, x, y, 48, 48, perk.texture, txt, [450, 150], 53)\r\n            .onClickHandler(() => {\r\n                this._levelUpPerk(perk);\r\n                this.refreshView();\r\n            });\r\n        if (this._havePerkRequirements(perk) === false) {\r\n            btn.setTint(Phaser.Display.Color.GetColor(32, 32, 32));\r\n        }\r\n        return btn;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/MoonlightView.js?");

/***/ }),

/***/ "./src/scenes/MyrahScene.js":
/*!**********************************!*\
  !*** ./src/scenes/MyrahScene.js ***!
  \**********************************/
/*! exports provided: MyrahScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MyrahScene\", function() { return MyrahScene; });\n/* harmony import */ var _data_CombatManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/CombatManager */ \"./src/data/CombatManager.js\");\n/* harmony import */ var _data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/CreatureRegistry */ \"./src/data/CreatureRegistry.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_StarData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui/CreatureDisplay */ \"./src/ui/CreatureDisplay.js\");\n/* harmony import */ var _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/SpriteAnimation */ \"./src/ui/SpriteAnimation.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _utils_Combat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/Combat */ \"./src/utils/Combat.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst STATE_IDLE = -1;\r\nconst STATE_COMBAT = 0;\r\nconst STATE_REWARDS = 1;\r\nconst STATE_FAILURE = 2;\r\n\r\n\r\nclass MyrahScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_12__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.sceneState = STATE_IDLE;\r\n        this.myrahDefeats = 0;\r\n\r\n        this.player = _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__[\"PlayerData\"].getInstance();\r\n        this.playerHitAnim = undefined;\r\n        this.monsterHitAnim = [undefined, undefined, undefined];\r\n\r\n        this.playerDisplay = undefined;\r\n        this.monsterDisplays = [];\r\n        this.elements = [];\r\n\r\n        this.combatManager = new _data_CombatManager__WEBPACK_IMPORTED_MODULE_0__[\"CombatManager\"]()\r\n            .registerEvent(\"onAnimationChanged\", (i, anim) => { this._setupAnim(i, anim); })\r\n            .registerEvent(\"onCreatureHealthChanged\", (x, i) => { this._monsterHealthCallback(x, i); })\r\n            .registerEvent(\"onCreatureAttackChanged\", (x, i) => { this._monsterAttackCooldownCallback(x, i); })\r\n            .registerEvent(\"onReward\", (x, y) => { this._rewardCallback(x, y); })\r\n            .registerEvent(\"onCombatEnd\", (x) => { this._onCombatEndCallback(x); })\r\n            .registerEvent(\"onCombatStart\", (x) => { this._onCombatCallback(x); })\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 1100, 800, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n        this.monsterDisplays = [];\r\n        this.monsterDisplays.push(new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_6__[\"CreatureDisplay\"](this, 425, 120));\r\n        this.playerDisplay = new _ui_CreatureDisplay__WEBPACK_IMPORTED_MODULE_6__[\"CreatureDisplay\"](this, 425, 450);\r\n\r\n        this.player.statBlock.registerEvent(\"onHealthChanged\", (x) => { this._playerHealthCallback(x); });\r\n        this.player.statBlock.registerEvent(\"onAttackCooldownChanged\", (x) => { this._playerAttackCooldownCallback(x); });\r\n        this.player.statBlock.registerEvent(\"onAnimationChanged\", (x) => { this._setupAnim(-1, x); });\r\n        this.player.registerEvent(\"onStatChanged\", () => { this._updatePlayerBlock(); });\r\n    }\r\n\r\n    _playerHealthCallback(health) {\r\n        var shieldPercent = this.player.statBlock.shieldValue / this.player.statBlock.MaxHealth();\r\n        var fillTxt = \"\";\r\n        if (shieldPercent > 0) {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(health)) + \"+(\" + _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(this.player.statBlock.shieldValue)) + \")/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(this.player.statBlock.MaxHealth());\r\n        } else {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(health)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(this.player.statBlock.MaxHealth());\r\n        }\r\n        this.playerDisplay.setHealthBar(health / this.player.statBlock.MaxHealth(), fillTxt);\r\n        this.playerDisplay.setShieldBar(shieldPercent);\r\n    }\r\n    _playerAttackCooldownCallback(attackCooldown) {\r\n        this.playerDisplay.setAttackBar(attackCooldown / this.player.statBlock.attackSpeed,\r\n            Math.floor(attackCooldown / this.player.statBlock.attackSpeed * 100) + \"%\");\r\n    }\r\n\r\n    _monsterHealthCallback(health, idx) {\r\n        health = Math.max(0, health);\r\n        var shieldPercent = this.combatManager.monsters[idx].shieldValue / this.combatManager.monsters[idx].MaxHealth();\r\n        var fillTxt = \"\";\r\n        if (shieldPercent > 0) {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(health)) + \"+(\" + _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(this.combatManager.monsters[idx].shieldValue)) + \")/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(this.combatManager.monsters[idx].MaxHealth());\r\n        } else {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(Math.ceil(health)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(this.combatManager.monsters[idx].MaxHealth());\r\n        }\r\n        this.monsterDisplays[idx].setHealthBar(health / this.combatManager.monsters[idx].MaxHealth(), fillTxt);\r\n        this.monsterDisplays[idx].setShieldBar(shieldPercent);\r\n    }\r\n    _monsterAttackCooldownCallback(attackCooldown, idx) {\r\n        this.monsterDisplays[idx].setAttackBar(attackCooldown / this.combatManager.monsters[idx].attackSpeed,\r\n            Math.floor(attackCooldown / this.combatManager.monsters[idx].attackSpeed * 100) + \"%\");\r\n    }\r\n\r\n    _onCombatEndCallback(rewards) {\r\n        if (rewards === undefined) {\r\n            this._setSceneState(STATE_FAILURE);\r\n        } else {\r\n            if (this.myrahDefeats === 0) {\r\n                var tile = this.combatManager.activeTile;\r\n                this.myrahDefeats += 1;\r\n                var creatures = [_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__[\"CreatureRegistry\"].GetCreatureByName(\"myrah2\", tile.difficulty, tile.parent.regionLevel)];\r\n    \r\n                for (var t = 0; t < tile.parent.traits.length; t++) {\r\n                    creatures[0].addTrait(tile.parent.traits[t].type, tile.parent.traits[t].level);\r\n                }\r\n                creatures[0].applyTraits();\r\n                this.combatManager.initFightWithCreatures(false, creatures);\r\n            } else {\r\n                this._setSceneState(STATE_REWARDS);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updatePlayerBlock() {\r\n        this.playerDisplay.initWithCreature(this.player.statBlock);\r\n    }\r\n\r\n    _onExplore(tile) {\r\n        for (var i = 0; i < this.onExploreHandlers.length; i++) {\r\n            this.onExploreHandlers[i](tile, this.regionTier);\r\n        }\r\n    }\r\n    _hideEnemyDisplays() {\r\n        for (var i = 0; i < this.monsterDisplays.length; i++) {\r\n            this.monsterDisplays[i].setVisible(false);\r\n        }\r\n    }\r\n    _setupAnim(idx, animKey) {\r\n        if (idx === -1) {\r\n            this._setupPlayerAnim(animKey);\r\n        } else {\r\n            this._setupMonsterAnim(idx, animKey);\r\n        }\r\n    }\r\n    _setupPlayerAnim(animKey) {\r\n        if (this.playerHitAnim !== undefined) {\r\n            this._removePlayerAnim();\r\n        }\r\n        var x = this.playerDisplay.getCenterX();\r\n        var y = this.playerDisplay.getCenterY();\r\n        this.playerHitAnim = new _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_7__[\"SpriteAnimation\"](this, x, y, animKey, _utils_Combat__WEBPACK_IMPORTED_MODULE_10__[\"Combat\"].getAnimInfoFromKey(animKey), () => { this._removePlayerAnim(); });\r\n    }\r\n    _removePlayerAnim() {\r\n        this.playerHitAnim.destroy();\r\n        this.playerHitAnim = undefined;\r\n    }\r\n    _setupMonsterAnim(idx, animKey) {\r\n        // if an animation is already playing, cancel it\r\n        if (this.monsterHitAnim[idx] !== undefined) {\r\n            this._removeMonsterAnim(idx);\r\n        }\r\n        var x = this.monsterDisplays[idx].getCenterX();\r\n        var y = this.monsterDisplays[idx].getCenterY();\r\n        this.monsterHitAnim[idx] = new _ui_SpriteAnimation__WEBPACK_IMPORTED_MODULE_7__[\"SpriteAnimation\"](this, x, y, animKey, _utils_Combat__WEBPACK_IMPORTED_MODULE_10__[\"Combat\"].getAnimInfoFromKey(animKey), () => { this._removeMonsterAnim(idx); });\r\n    }\r\n    _removeMonsterAnim(i) {\r\n        this.monsterHitAnim[i].destroy();\r\n        this.monsterHitAnim[i] = undefined;\r\n    }\r\n\r\n    _onCombatCallback(__isInvasion) {\r\n        var monsters = this.combatManager.monsters;\r\n        for (var i = 0; i < monsters.length; i++) {\r\n            this.monsterDisplays[i].setVisible(true);\r\n            this.monsterDisplays[i].initWithCreature(monsters[i]);\r\n            this.monsterDisplays[i].setInvader();\r\n        }\r\n        this.playerDisplay.initWithCreature(this.player.statBlock);\r\n    }\r\n\r\n    _setSceneState(state) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].destroy();\r\n        }\r\n        this.elements = [];\r\n        this.sceneState = state;\r\n        this.playerDisplay.setVisible(state === STATE_COMBAT);\r\n        if (this.playerHitAnim !== undefined) {\r\n            this._removePlayerAnim();\r\n        }\r\n        for (var i = 0; i < this.monsterDisplays.length; i++) {\r\n            this.monsterDisplays[i].setVisible(state === STATE_COMBAT);\r\n            if (this.monsterHitAnim[i] !== undefined) {\r\n                this._removeMonsterAnim(i);\r\n            }\r\n        }\r\n        this.combatManager.stopCombat();\r\n        this.scene.get(\"CombatScene\").stopCombat();\r\n\r\n        switch (this.sceneState) {\r\n            case STATE_FAILURE:\r\n                var txt = \"Defeated, you throw all \" + _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].numberString(this.player.shade) + \" of your shade at MYRAH as you escape. \" +\r\n                    \"you have no idea if it was necessary, but at least you made it out of there alive. Now that you think about \" +\r\n                    \"it, if you had just infused that shade instead you might have won. Oh well!\";\r\n                this.elements.push(this.add.bitmapText(550, 150, \"courier20\", _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].processText(txt, 80), 20, 1).setOrigin(0.5, 0));\r\n                var btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_8__[\"TextButton\"](this, 490, 400, 120, 40, \"FLEE\")\r\n                    .onClickHandler(() => { this._fleeHandler(); });\r\n                this.elements.push(btn);\r\n                break;\r\n            case STATE_REWARDS:\r\n                var txt = \"Before you can land the final blow, MYRAH disappears in a flash of light. As your eyes adjust you are \" +\r\n                    \"left alone in the room. On the ground where myrah stood are a handful of glowing shards... neat!\";\r\n                this.elements.push(this.add.bitmapText(550, 150, \"courier20\", _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].processText(txt, 80), 20, 1).setOrigin(0.5, 0));\r\n                txt = \"\\\"YOU PURSUE US, YET KNOW NOT WHO WE ARE. WE HIDE NO MORE, THE COUNTLESS LIGHTS SHALL \" +\r\n                    \"SHINE DOWN FROM THE VOID TO PURIFY THE USURPERS LIES.\\\"\";\r\n                this.elements.push(this.add.bitmapText(550, 230, \"courier20\", _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].processText(txt, 80), 20, 1)\r\n                    .setTint(Phaser.Display.Color.GetColor(177, 100, 169)).setOrigin(0.5, 0));\r\n                var txt = \"You only catch a few words as you were too busy shoving those rocks into your pack. There's \" +\r\n                    \"a portal in the next room glowing the same color as those shards. There doesn't seem to be anywhere \" +\r\n                    \"else to go, so you hop inside. You're not sure whats on the other side, but you're pretty sure you've \" +\r\n                    \"unlocked some sweet new perks!\";\r\n                this.elements.push(this.add.bitmapText(550, 290, \"courier20\", _utils_Common__WEBPACK_IMPORTED_MODULE_11__[\"Common\"].processText(txt, 80), 20, 1).setOrigin(0.5, 0));\r\n                this.elements.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__[\"TooltipImage\"](this, 520, 400, 32, 32, { sprite: \"icons2\", tile: 4 },\r\n                    \"Starshards. Fragments of a fallen star containing an unbelievable power.\"));\r\n                this.elements.push(this.add.bitmapText(555, 407, \"courier20\", \"x5\")\r\n                    .setTint(Phaser.Display.Color.GetColor(177, 100, 169)));\r\n                var btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_8__[\"TextButton\"](this, 490, 450, 120, 40, \"REBIRTH\")\r\n                    .onClickHandler(() => { this._rebirthHandler(); });\r\n                this.elements.push(btn);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _fleeHandler() {\r\n        this._setSceneState(STATE_IDLE);\r\n        this.player.addShade(-this.player.shade);\r\n        this.scene.sendToBack();\r\n    }\r\n\r\n    _rebirthHandler() {\r\n        this._setSceneState(STATE_IDLE);\r\n        _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards = true;\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().starshardsEarned += 5;\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().handleRunCompletion();\r\n        this.scene.get(\"MoonlightScene\")._switchView(1);\r\n        this.scene.get(\"MoonlightScene\").enableLeveling();\r\n        this.scene.bringToTop(\"MoonlightScene\");\r\n        this.scene.sendToBack();\r\n    }\r\n\r\n    initFight(tile) {\r\n        this.myrahDefeats = 0;\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().time.setTimeScale(1);\r\n        this._setSceneState(STATE_COMBAT);\r\n        this.combatManager.setTile(tile);\r\n\r\n        var creatures = [_data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_1__[\"CreatureRegistry\"].GetCreatureByName(\"myrah1\", tile.difficulty, tile.parent.regionLevel)];\r\n        for (var t = 0; t < tile.parent.traits.length; t++) {\r\n            creatures[0].addTrait(tile.parent.traits[t].type, tile.parent.traits[t].level);\r\n        }\r\n        creatures[0].applyTraits();\r\n        this.combatManager.initFightWithCreatures(false, creatures);\r\n    }\r\n\r\n    _updateAnimations(delta) {\r\n        if (this.playerHitAnim !== undefined) {\r\n            this.playerHitAnim.update(delta);\r\n        }\r\n        for (var i = 0; i < this.monsterHitAnim.length; i++) {\r\n            if (this.monsterHitAnim[i] !== undefined) {\r\n                this.monsterHitAnim[i].update(delta);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(__time, __delta) {\r\n        //ANIMATIONS\r\n        if (this.sceneState === STATE_COMBAT) {\r\n            var fDelta = _data_WorldData__WEBPACK_IMPORTED_MODULE_5__[\"WorldData\"].getInstance().time.frameDelta;\r\n            this._updateAnimations(fDelta);\r\n\r\n            this.combatManager.update(fDelta);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/MyrahScene.js?");

/***/ }),

/***/ "./src/scenes/RegionScene.js":
/*!***********************************!*\
  !*** ./src/scenes/RegionScene.js ***!
  \***********************************/
/*! exports provided: RegionScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionScene\", function() { return RegionScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _RegionView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RegionView */ \"./src/scenes/RegionView.js\");\n/* harmony import */ var _BlueprintView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BlueprintView */ \"./src/scenes/BlueprintView.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst REGION_VIEW = 0;\r\nconst BLUEPRINT_VIEW = 1;\r\n\r\nclass RegionScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.regionViewContainer = new _RegionView__WEBPACK_IMPORTED_MODULE_2__[\"RegionView\"](this, this.relativeX(0), this.relativeY(0));\r\n        this.blueprintViewContainer = new _BlueprintView__WEBPACK_IMPORTED_MODULE_3__[\"BlueprintView\"](this, this.relativeX(0), this.relativeY(0));\r\n\r\n        this.activeWindow = REGION_VIEW;\r\n    }\r\n\r\n    preload() {\r\n\r\n    }\r\n\r\n    registerEvent(name, callback) {\r\n        if (name === 'onTileClick') {\r\n            this.regionViewContainer.registerEvent(name, callback);\r\n        }\r\n    }\r\n\r\n    triggerAutoExplore(tile, tier) {\r\n        this.regionViewContainer.triggerAutoExplore(tile, tier);\r\n    }\r\n\r\n    refresh() {\r\n        this.regionViewContainer.refresh();\r\n        this.blueprintViewContainer.refreshBlueprint();\r\n        this.blueprintViewContainer.refreshIcons();\r\n        this._switchRegionView();\r\n    }\r\n\r\n    changeRegion() {\r\n        this.regionViewContainer.refresh();\r\n    }\r\n\r\n    rebirth() {\r\n        this.regionViewContainer.refresh();\r\n        this.blueprintViewContainer.refreshIcons();\r\n        this._switchRegionView();\r\n    }\r\n\r\n    _switchRegionView() {\r\n        this.regionBtn.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_4__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0);\r\n        this.blueprintBtn.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_4__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0);\r\n        this.regionViewContainer.setVisible(true);\r\n        this.blueprintViewContainer.setVisible(false);\r\n        this.activeWindow = REGION_VIEW;\r\n    }\r\n    _switchBlueprintView() {\r\n        this.regionViewContainer.setVisible(false);\r\n        this.blueprintViewContainer.setVisible(true);\r\n        this.activeWindow = BLUEPRINT_VIEW;\r\n    }\r\n\r\n    create() {\r\n        this.regionViewContainer.create();\r\n        this.blueprintViewContainer.create();\r\n        this.blueprintViewContainer.setVisible(false);\r\n\r\n        this.regionBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(660), this.relativeY(15), 110, 20, \"Region\")\r\n            .onClickHandler(() => { this._switchRegionView(); });\r\n        this.blueprintBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(780), this.relativeY(15), 110, 20, \"Blueprints\")\r\n            .onClickHandler(() => { this._switchBlueprintView(); });\r\n\r\n        this.regionBtn.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_4__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0);\r\n        this.blueprintBtn.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_4__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0);\r\n    }\r\n\r\n    update(time, delta) {\r\n        if (this.activeWindow === REGION_VIEW) {\r\n            this.regionViewContainer.update(time, delta);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/RegionScene.js?");

/***/ }),

/***/ "./src/scenes/RegionView.js":
/*!**********************************!*\
  !*** ./src/scenes/RegionView.js ***!
  \**********************************/
/*! exports provided: RegionView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionView\", function() { return RegionView; });\n/* harmony import */ var _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/BuildingRegistry */ \"./src/data/BuildingRegistry.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _ui_FloatingTooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui/HighlightElementGroup */ \"./src/ui/HighlightElementGroup.js\");\n/* harmony import */ var _ui_MyrahTileDialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ui/MyrahTileDialog */ \"./src/ui/MyrahTileDialog.js\");\n/* harmony import */ var _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ui/ProgressBar */ \"./src/ui/ProgressBar.js\");\n/* harmony import */ var _ui_RebirthDialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ui/RebirthDialog */ \"./src/ui/RebirthDialog.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ui_TileSelectWindow__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ui/TileSelectWindow */ \"./src/ui/TileSelectWindow.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst toPhaserColor = (clr) => { return Phaser.Display.Color.GetColor(clr[0], clr[1], clr[2]); };\r\n\r\nconst WIDTH = 50;\r\nconst HEIGHT = 50;\r\n\r\nclass RegionView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.tileClickHandlers = [];\r\n        this.region = _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().getCurrentRegion();\r\n        this.offsetX = 360 - this.region.width * WIDTH / 2;\r\n        this.offsetY = 370 - this.region.height * HEIGHT / 2;\r\n        this.letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q'];\r\n        this.sightingVal = 0;\r\n\r\n        this.tileSelectWindow = undefined;\r\n        this.rebirthDialog = undefined;\r\n\r\n        this.updateBuildings = false;\r\n\r\n        this.upgradeKey = undefined;\r\n        this.houseKey = undefined;\r\n        this.roadKey = undefined;\r\n        this.productionKey = undefined;\r\n        this.exploreKey = undefined;\r\n        this.woodKey = undefined;\r\n        this.leatherKey = undefined;\r\n        this.metalKey = undefined;\r\n        this.fiberKey = undefined;\r\n        this.stoneKey = undefined;\r\n        this.crystalKey = undefined;\r\n        this.marketKey = undefined;\r\n        this.tavernKey = undefined;\r\n        this.warehouseKey = undefined;\r\n        this.alchemyKey = undefined;\r\n        this.destroyKey = undefined;\r\n        this.docksKey = undefined;\r\n        this.dojoKey = undefined;\r\n        this.garrisonKey = undefined;\r\n        this.watchtowerKey = undefined;\r\n        this.hoveredTile = [-1, -1];\r\n        this.regionTiles = [];\r\n        this.regionStats = undefined;\r\n        this.activeTile = undefined;\r\n        this.lastTileHotkeyed = [-1, -1];\r\n\r\n        this.detailsContainer = [];\r\n        this.tileElements = [];\r\n        this.guides = [];\r\n    }\r\n\r\n    registerEvent(name, callback) {\r\n        if (name === 'onTileClick') {\r\n            this.tileClickHandlers.push(callback);\r\n        }\r\n    }\r\n\r\n    _setupRegionButton(idx, x, y) {\r\n        return new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, x, y, 24, 20, (idx + 1) + \"\").onClickHandler(() => {\r\n            _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().setCurrentRegion(idx);\r\n            this.scene.scene.get(\"DarkWorld\").changeRegion();\r\n        });\r\n    }\r\n\r\n    _nextToConnector(x, y) {\r\n        return this.region.map[y][x].name === \"Town\" || (this.region.map[y][x].building !== undefined && this.region.map[y][x].building.name === \"Docks\");\r\n    }\r\n    _getRoadTexture(x, y) {\r\n        var l = x > 0 && (this.region.map[y][x - 1].roadDist === 0 || this._nextToConnector(x - 1, y)) ? '1' : '0';\r\n        var r = x < this.region.width - 1 && (this.region.map[y][x + 1].roadDist === 0 || this._nextToConnector(x + 1, y)) ? '1' : '0';\r\n        var u = y > 0 && (this.region.map[y - 1][x].roadDist === 0 || this._nextToConnector(x, y - 1)) ? '1' : '0';\r\n        var d = y < this.region.height - 1 && (this.region.map[y + 1][x].roadDist === 0 || this._nextToConnector(x, y + 1)) ? '1' : '0';\r\n        return { sprite: \"roadicons\", tile: _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].ROADTYPES[l + r + u + d] + (this.region.map[y][x].building.tier - 1) * 20, w: 50, h: 50 };\r\n    }\r\n\r\n    _getBuildingImage(x, y) {\r\n        if (this.region.map[y][x].building.name === \"Road\") {\r\n            return this._getRoadTexture(x, y);\r\n        } else {\r\n            return {\r\n                sprite: this.region.map[y][x].building.texture.sprite,\r\n                tile: this.region.map[y][x].building.texture.tile + 10 * (this.region.map[y][x].building.tier - 1),\r\n                w: this.region.map[y][x].building.texture.w,\r\n                h: this.region.map[y][x].building.texture.h\r\n            };\r\n        }\r\n    }\r\n\r\n    _setupTile(x, y) {\r\n        var clr = toPhaserColor(this.region.map[y][x].color);\r\n        var border = toPhaserColor(this.region.map[y][x].borderColor);\r\n        if (this.region.map[y][x].revealed === false) {\r\n            clr = Phaser.Display.Color.GetColor(0, 0, 0);\r\n            border = Phaser.Display.Color.GetColor(40, 80, 40);\r\n        } else if (this.region.map[y][x].explored === false && this.region.map[y][x].revealed === true) {\r\n            clr = _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].colorLerp(clr, Phaser.Display.Color.GetColor(0, 0, 0), 0.65);\r\n        }\r\n        if (this.region.map[y][x].hasShard === true && this.region.map[y][x].revealed === true) {\r\n            border = Phaser.Display.Color.GetColor(177, 100, 169);\r\n            clr = _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].colorLerp(clr, Phaser.Display.Color.GetColor(177, 100, 169), 0.65);\r\n        }\r\n        var rect = this.scene.add.rectangle(this.x + (x + 0.5) * WIDTH + this.offsetX,\r\n            this.y + (y + 0.5) * HEIGHT + this.offsetY, WIDTH - 2, HEIGHT - 2, clr);\r\n        rect.isStroked = true;\r\n        rect.strokeColor = border;\r\n        rect.lineWidth = 1.5;\r\n        rect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerdown\", () => { this._handleTileClick(x, y); })\r\n            .on('pointerover', () => { this.hoveredTile = [x, y]; this._setTooltip(x, y); })\r\n            .on('pointerout', () => { this.hoveredTile = [-1, -1]; this._disableTooltip(); });\r\n\r\n        var bld = undefined;\r\n        if (this.region.map[y][x].building !== undefined && this.region.map[y][x].revealed === true) {\r\n            var texture = this._getBuildingImage(x, y);\r\n            bld = this.scene.add.image(this.x + (x + 0.5) * WIDTH + this.offsetX,\r\n                this.y + (y + 0.5) * HEIGHT + this.offsetY, texture.sprite, texture.tile);\r\n            bld.displayWidth = texture.w;\r\n            bld.displayHeight = texture.h;\r\n        }\r\n        return { rect: rect, building: bld };\r\n    }\r\n\r\n    _setTooltip(x, y) {\r\n        if (this.floatingText !== undefined) {\r\n            this._disableTooltip();\r\n        }\r\n        var txt = \"Tile \" + this.letters[y] + (x + 1) + '\\n';\r\n\r\n        if (this.region.map[y][x].revealed === true) {\r\n            if (this.region.map[y][x].hasShard === true) {\r\n                txt += \"Starlight \";\r\n            }\r\n            txt += this.region.map[y][x].name + '\\n';\r\n            if (this.region.map[y][x].difficulty < 1) {\r\n                txt += \"Difficulty: Weak\\n\";\r\n            } else {\r\n                txt += \"Difficulty: \" + this.region.map[y][x].difficulty + '\\n';\r\n            }\r\n            if (this.region.map[y][x].explored === false) {\r\n                txt += \"Explored: \" + Math.floor(this.region.map[y][x].amountExplored / this.region.map[y][x].explorationNeeded * 100) + '%\\n';\r\n            } else {\r\n                txt += \"Explored\\n\";\r\n            }\r\n        } else {\r\n            txt += \"Unknown\";\r\n        }\r\n\r\n        var xAdj = this.x + x * WIDTH + this.offsetX;\r\n        xAdj += xAdj + 190 > 1100 ? -150 : 0;\r\n        var yAdj = this.y + y * HEIGHT + this.offsetY - 82;\r\n        yAdj += yAdj < 100 ? 115 : 0;\r\n        this.floatingText = new _ui_FloatingTooltip__WEBPACK_IMPORTED_MODULE_8__[\"FloatingTooltip\"](this.scene, txt, xAdj, yAdj, 190, 82);\r\n    }\r\n    _disableTooltip() {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n            this.floatingText = undefined;\r\n        }\r\n    }\r\n\r\n    _exploreTown(x, y) {\r\n        this.region.map[y][x].explore(1000);\r\n        // this.scene.scene.get(\"DarkWorld\").townButton.setVisible(true);\r\n    }\r\n\r\n    _handleTileClick(x, y) {\r\n        if (this.region.map[y][x].explored === false && this.region.map[y][x].revealed === false) {\r\n            return;\r\n        }\r\n        if (this.region.map[y][x].name === \"Town\") {\r\n            this._exploreTown(x, y);\r\n            return;\r\n        }\r\n        if (this.region.map[y][x].name === \"Mystic Gate\" && this.region.map[y][x].explored === true) {\r\n            this.rebirthDialog = new _ui_RebirthDialog__WEBPACK_IMPORTED_MODULE_12__[\"RebirthDialog\"](this.scene, this.x + 250, this.y + 215, this.region.regionLevel)\r\n                .onRebirthHandler(() => { this._rebirthClickedHandler(); })\r\n                .onLeaveHandler(() => { this._leaveClickedHandler(); });\r\n            return;\r\n        }\r\n        if (this.region.map[y][x].name === \"Starlight Palace\") {\r\n            this.rebirthDialog = new _ui_MyrahTileDialog__WEBPACK_IMPORTED_MODULE_10__[\"MyrahTileDialog\"](this.scene, this.x + 250, this.y + 215)\r\n                .onRebirthHandler(() => { this._myrahTileClickedHandler(this.region.map[y][x]); })\r\n                .onLeaveHandler(() => { this._leaveClickedHandler(); });\r\n            return;\r\n        }\r\n        if (this.tileSelectWindow !== undefined) {\r\n            this.tileSelectWindow.destroy();\r\n            this.tileSelectWindow = undefined;\r\n        }\r\n\r\n        this.tileSelectWindow = new _ui_TileSelectWindow__WEBPACK_IMPORTED_MODULE_14__[\"TileSelectWindow\"](this.scene, this.x + 190, this.y + 240, this.region.map[y][x]);\r\n        this.tileSelectWindow.addOnActionHandler((action, blob) => { this._tileActionHandler(action, blob); });\r\n    }\r\n\r\n    _tileActionHandler(action, blob) {\r\n        switch (action) {\r\n            case \"explore\":\r\n                this._exploreTile(blob.tile, false);\r\n                break;\r\n            case \"build\":\r\n                if (this.region._canBuild(blob.tile, blob.building)) {\r\n                    this.region.placeBuilding(blob.tile.x, blob.tile.y, blob.building);\r\n                    blob.tile.building = blob.building;\r\n                    this.scene.scene.get(\"TownScene\")._updateStatus();\r\n                }\r\n                break;\r\n            case \"upgrade\":\r\n                if (blob.tile.building === undefined) {\r\n                    break;\r\n                }\r\n                if (this.region._canUpgrade(blob.tile) === true) {\r\n                    this.region.upgradeBuilding(blob.tile.x, blob.tile.y);\r\n                    var texture = this._getBuildingImage(blob.tile.x, blob.tile.y)\r\n                    this.tileElements[blob.tile.y][blob.tile.x].building.setTexture(texture.sprite, texture.tile);\r\n                    this.scene.scene.get(\"TownScene\")._updateStatus();\r\n                }\r\n                break;\r\n            case \"destroy\":\r\n                if (blob.tile.building !== undefined && blob.tile.building.name !== \"Town\" &&\r\n                    _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().gold >= blob.tile.building.tier * _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].DESTROY_BUILDING_COST) {\r\n                    _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().addGold(-blob.tile.building.tier * _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].DESTROY_BUILDING_COST);\r\n                    this.region.destroyBuilding(blob.tile.x, blob.tile.y);\r\n                }\r\n                break;\r\n        }\r\n        this.refreshDetails();\r\n        if (this.tileSelectWindow !== undefined) {\r\n            this.tileSelectWindow.destroy();\r\n            this.tileSelectWindow = undefined;\r\n        }\r\n    }\r\n    _rebirthClickedHandler() {\r\n        this.rebirthDialog.destroy();\r\n        this.rebirthDialog = undefined;\r\n\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().handleRunCompletion();\r\n        this.scene.scene.get(\"MoonlightScene\").refresh();\r\n        this.scene.scene.get(\"MoonlightScene\").enableLeveling();\r\n        this.scene.scene.bringToTop(\"MoonlightScene\");\r\n    }\r\n    _leaveClickedHandler() {\r\n        if (this.rebirthDialog !== undefined) {\r\n            this.rebirthDialog.destroy();\r\n            this.rebirthDialog = undefined;\r\n        }\r\n    }\r\n    _myrahTileClickedHandler(tile) {\r\n        this.rebirthDialog.destroy();\r\n        this.rebirthDialog = undefined;\r\n        this.scene.scene.bringToTop(\"MyrahScene\");\r\n        this.scene.scene.get(\"MyrahScene\").initFight(tile);\r\n    }\r\n    _changeBlueprintHandler(index) {\r\n        this.region.blueprint = index;\r\n        this.refreshDetails();\r\n    }\r\n\r\n    _exploreTile(tile, fromAutoExplore) {\r\n        if (tile.parent.isExplorable(tile.x, tile.y) === false) {\r\n            return;\r\n        }\r\n        this.activeTile = tile;\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().unlocks.combatTab === false) {\r\n            _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().registerFeatureUnlocked(_data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].UNLOCK_COMBAT_TAB,\r\n                \"Well this isn't so bad, walking aimlessly through this fog covered wilderness.\\n\" +\r\n                \"I wonder if I'll meet a new friend.\\n\");\r\n        }\r\n        for (var i = 0; i < this.tileClickHandlers.length; i++) {\r\n            this.tileClickHandlers[i](tile, fromAutoExplore);\r\n        }\r\n    }\r\n\r\n    _updateTile(tile) {\r\n        this.scene.scene.get(\"TownScene\").refresh();\r\n        var clr = toPhaserColor(tile.color);\r\n        var border = toPhaserColor(tile.borderColor);\r\n        if (tile.revealed === false) {\r\n            clr = Phaser.Display.Color.GetColor(0, 0, 0);\r\n            border = Phaser.Display.Color.GetColor(40, 80, 40);\r\n        } else if (tile.explored === false && tile.revealed === true) {\r\n            clr = _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].colorLerp(clr, Phaser.Display.Color.GetColor(0, 0, 0), 0.65);\r\n        }\r\n        if (tile.hasShard === true && tile.revealed === true) {\r\n            border = Phaser.Display.Color.GetColor(177, 100, 169);\r\n            clr = _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].colorLerp(clr, Phaser.Display.Color.GetColor(177, 100, 169), 0.65);\r\n        }\r\n        this.tileElements[tile.y][tile.x].rect.fillColor = clr;\r\n        this.tileElements[tile.y][tile.x].rect.strokeColor = border;\r\n        if (tile.building !== undefined && tile.revealed === true) {\r\n            this.updateBuildings = true;\r\n            var texture = this._getBuildingImage(tile.x, tile.y);\r\n            if (this.tileElements[tile.y][tile.x].building !== undefined) {\r\n                this.tileElements[tile.y][tile.x].building.setTexture(texture.sprite, texture.tile);\r\n            } else {\r\n                this.tileElements[tile.y][tile.x].building = this.scene.add.image(this.x + (tile.x + 0.5) * WIDTH + this.offsetX,\r\n                    this.y + (tile.y + 0.5) * HEIGHT + this.offsetY, texture.sprite, texture.tile);\r\n                this.tileElements[tile.y][tile.x].building.displayWidth = texture.w;\r\n                this.tileElements[tile.y][tile.x].building.displayHeight = texture.h;\r\n            }\r\n\r\n            // if this is a road we need to update neighbouring roads\r\n            if (tile.building.name === \"Road\") {\r\n                if (tile.x > 0 && this.region.map[tile.y][tile.x - 1].building !== undefined &&\r\n                    this.tileElements[tile.y][tile.x - 1].building !== undefined &&\r\n                    this.region.map[tile.y][tile.x - 1].building.name === \"Road\") {\r\n                    var rtxt = this._getBuildingImage(tile.x - 1, tile.y);\r\n                    this.tileElements[tile.y][tile.x - 1].building.setTexture(rtxt.sprite, rtxt.tile);\r\n                }\r\n                if (tile.x < this.region.width - 1 && this.region.map[tile.y][tile.x + 1].building !== undefined &&\r\n                    this.tileElements[tile.y][tile.x + 1].building !== undefined &&\r\n                    this.region.map[tile.y][tile.x + 1].building.name === \"Road\") {\r\n                    var rtxt = this._getBuildingImage(tile.x + 1, tile.y);\r\n                    this.tileElements[tile.y][tile.x + 1].building.setTexture(rtxt.sprite, rtxt.tile);\r\n                }\r\n                if (tile.y > 0 && this.region.map[tile.y - 1][tile.x].building !== undefined &&\r\n                    this.tileElements[tile.y - 1][tile.x].building !== undefined &&\r\n                    this.region.map[tile.y - 1][tile.x].building.name === \"Road\") {\r\n                    var rtxt = this._getBuildingImage(tile.x, tile.y - 1);\r\n                    this.tileElements[tile.y - 1][tile.x].building.setTexture(rtxt.sprite, rtxt.tile);\r\n                }\r\n                if (tile.y < this.region.height - 1 && this.region.map[tile.y + 1][tile.x].building !== undefined &&\r\n                    this.tileElements[tile.y + 1][tile.x].building !== undefined &&\r\n                    this.region.map[tile.y + 1][tile.x].building.name === \"Road\") {\r\n                    var rtxt = this._getBuildingImage(tile.x, tile.y + 1);\r\n                    this.tileElements[tile.y + 1][tile.x].building.setTexture(rtxt.sprite, rtxt.tile);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.tileElements[tile.y][tile.x].building !== undefined) {\r\n                this.tileElements[tile.y][tile.x].building.destroy();\r\n                this.tileElements[tile.y][tile.x].building = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    triggerAutoExplore(tile, tier) {\r\n        var activeRegion = _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList[tier];\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade !== -1 && activeRegion.invasions.length > 0 &&\r\n            activeRegion.invasionStrength >= _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade) {\r\n            var pos = activeRegion.invasions[0];\r\n            this._exploreTile(activeRegion.map[pos[0]][pos[1]], true);\r\n            return;\r\n        }\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore === true) {\r\n            var pos = activeRegion.nextWeakestTile(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade);\r\n            if (pos[0] !== -1) {\r\n                if (activeRegion.map[pos[1]][pos[0]].name === \"Town\") {\r\n                    this._exploreTown(tile.x, tile.y);\r\n                    var pos = activeRegion.nextWeakestTile(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade);\r\n                    if (pos[0] === -1) {\r\n                        return;\r\n                    }\r\n                }\r\n                this._exploreTile(activeRegion.map[pos[1]][pos[0]], true);\r\n            } else if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore2 === true &&\r\n                _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExploreRegions === true &&\r\n                _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().nextRegions.length > 0) {\r\n                _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().addRegion(0);\r\n                _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().setCurrentRegion(_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList.length - 1);\r\n                this.scene.scene.get(\"DarkWorld\").changeRegion();\r\n                this.scene.scene.get(\"WorldScene\").refresh();\r\n                this.triggerAutoExplore(tile, _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList.length - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        this.rebirth();\r\n    }\r\n\r\n    changeRegion() {\r\n        this.rebirth();\r\n    }\r\n\r\n    create() {\r\n        //add handlers\r\n        this.region.onTileChanged((x) => { this._updateTile(x); });\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().onRegionChanged(() => { this.changeRegion(); });\r\n\r\n        //hotkeys\r\n        this.upgradeKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.U);\r\n        this.houseKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.H);\r\n        this.roadKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R);\r\n        this.productionKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P);\r\n        this.exploreKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E);\r\n        this.marketKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.M);\r\n        this.tavernKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.T);\r\n        this.warehouseKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W);\r\n        this.alchemyKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\r\n        this.destroyKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D);\r\n        this.docksKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.O);\r\n        this.dojoKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.J);\r\n        this.garrisonKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.G);\r\n        this.watchtowerKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.C);\r\n        this.woodKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ONE);\r\n        this.leatherKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.TWO);\r\n        this.metalKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.THREE);\r\n        this.fiberKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.FOUR);\r\n        this.stoneKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.FIVE);\r\n        this.crystalKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SIX);\r\n\r\n        //background\r\n        this.scene.add.rectangle(this.x + 0, this.y + 0, 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.refreshMap();\r\n        this.refreshDetails();\r\n    }\r\n\r\n    rebirth() {\r\n        // we need to ensure we're only updating when the current region is changed\r\n        this.region.removeHandlers();\r\n        this.region = _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.getCurrentRegion();\r\n        this.region.onTileChanged((x) => { this._updateTile(x); });\r\n        this.offsetX = 360 - this.region.width * WIDTH / 2;\r\n        this.offsetY = 370 - this.region.height * HEIGHT / 2;\r\n\r\n        this._destroyPopups();\r\n        this.refreshMap();\r\n        this.refreshDetails();\r\n    }\r\n\r\n    _toggleAutoExplore() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore = !_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore;\r\n        if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore === true) {\r\n            this.autoExploreButton.setText(\"ON\");\r\n            this.autoExploreButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n        } else {\r\n            this.autoExploreButton.setText(\"OFF\");\r\n            this.autoExploreButton.setTextColor(Phaser.Display.Color.GetColor(175, 0, 140));\r\n        }\r\n    }\r\n    _updateAutoInvade() {\r\n        switch (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade) {\r\n            case -1:\r\n                this.autoInvadeButton.setText(\"OFF\");\r\n                this.autoInvadeButton.setTextColor(Phaser.Display.Color.GetColor(175, 0, 140));\r\n                break;\r\n            case 0:\r\n                this.autoInvadeButton.setText(\"ALL\");\r\n                this.autoInvadeButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n                break;\r\n            case 1:\r\n                this.autoInvadeButton.setText(\"1+\");\r\n                this.autoInvadeButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n                break;\r\n            case 2:\r\n                this.autoInvadeButton.setText(\"2+\");\r\n                this.autoInvadeButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n                break;\r\n            case 3:\r\n                this.autoInvadeButton.setText(\"3+\");\r\n                this.autoInvadeButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n                break;\r\n        }\r\n    }\r\n    _toggleAutoInvade() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().toggleAutoInvade();\r\n        this._updateAutoInvade();\r\n    }\r\n    _toggleAutoUpgrade() {\r\n        this.region.autoUpgrade = !this.region.autoUpgrade;\r\n        if (this.region.autoUpgrade === true) {\r\n            this.autoUpgradeButton.setText(\"ON\");\r\n            this.autoUpgradeButton.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n        } else {\r\n            this.autoUpgradeButton.setText(\"OFF\");\r\n            this.autoUpgradeButton.setTextColor(Phaser.Display.Color.GetColor(175, 0, 140));\r\n        }\r\n    }\r\n\r\n    _destroyPopups() {\r\n        this._disableTooltip();\r\n        if (this.rebirthDialog !== undefined) {\r\n            this.rebirthDialog.destroy();\r\n            this.rebirthDialog = undefined;\r\n        }\r\n        if (this.tileSelectWindow !== undefined) {\r\n            this.tileSelectWindow.destroy();\r\n            this.tileSelectWindow = undefined;\r\n        }\r\n    }\r\n\r\n    refreshMap() {\r\n        for (var i = 0; i < this.tileElements.length; i++) {\r\n            for (var t = 0; t < this.tileElements[0].length; t++) {\r\n                this.tileElements[i][t].rect.destroy();\r\n                if (this.tileElements[i][t].building !== undefined) {\r\n                    this.tileElements[i][t].building.destroy();\r\n                }\r\n            }\r\n        }\r\n        this.tileElements = [];\r\n        for (var i = 0; i < this.region.height; i++) {\r\n            var row = []\r\n            for (var t = 0; t < this.region.width; t++) {\r\n                row.push(this._setupTile(t, i));\r\n            }\r\n            this.tileElements.push(row);\r\n        }\r\n        // X/Y GUIDES\r\n        for (var i = 0; i < this.guides.length; i++) {\r\n            this.guides[i].destroy();\r\n        }\r\n        this.guides = [];\r\n        for (var i = 0; i < this.region.height; i++) {\r\n            this.guides.push(this.scene.add.bitmapText(this.x + this.offsetX - WIDTH / 2,\r\n                this.y + this.offsetY + ((i + 0.5) * HEIGHT), \"courier20\", this.letters[i]).setOrigin(0.5));\r\n        }\r\n        for (var i = 0; i < this.region.width; i++) {\r\n            this.guides.push(this.scene.add.bitmapText(this.x + this.offsetX + ((i + 0.5) * WIDTH),\r\n                this.y + this.offsetY - HEIGHT / 2, \"courier20\", \"\" + (i + 1)).setOrigin(0.5));\r\n        }\r\n    }\r\n\r\n    refreshDetails() {\r\n        for (var i = 0; i < this.detailsContainer.length; i++) {\r\n            this.detailsContainer[i].destroy();\r\n        }\r\n        this.detailsContainer = [];\r\n        var h = this.y + 40;\r\n\r\n        if (_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList.length > 1) {\r\n            this.detailsContainer.push(this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Regions:\"));\r\n            this.regionTabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_9__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n                Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n            for (var i = 0; i < _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList.length; i++) {\r\n                var x = this.x + 660 + (i % 10) * 24;\r\n                var y = h + 25 + Math.floor(i / 10) * 20;\r\n                var btn = this._setupRegionButton(i, x, y);\r\n                this.detailsContainer.push(btn);\r\n                this.regionTabGroup.addElement(btn);\r\n            }\r\n            this.regionTabGroup._updateHighlights(_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().currentRegion);\r\n        }\r\n        h += 55 + Math.floor(_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().regionList.length / 10) * 20;\r\n\r\n        this.invasionBar = new _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_11__[\"ProgressBar\"](this.scene, this.x + 660, h, 160, 20,\r\n            Phaser.Display.Color.GetColor(255, 128, 255), Phaser.Display.Color.GetColor(32, 32, 64), \"Invasion Strength\");\r\n        this.invasionBar.setTextColor(Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.invasionBar.setFillPercent(this.region.invasionCounter / this.region.invasionCounterMax, \"Invasion Strength\");\r\n        this.invasionLabel = this.scene.add.bitmapText(this.x + 825, h + 2, \"courier16\", \"Lv \" + this.region.invasionStrength);\r\n        h += 25;\r\n\r\n        this.offlineLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Offline Time: \" + _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.time.getOfflineTimeString());\r\n        h += 25;\r\n        this.speed0xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 690, h, 30, 20, \"0x\")\r\n            .onClickHandler(() => { this._setTimeScale(0); });\r\n        this.speed1xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 725, h, 30, 20, \"1x\")\r\n            .onClickHandler(() => { this._setTimeScale(1); });\r\n        this.speed2xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 760, h, 30, 20, \"2x\")\r\n            .onClickHandler(() => { this._setTimeScale(2); });\r\n        this.speed5xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 795, h, 30, 20, \"5x\")\r\n            .onClickHandler(() => { this._setTimeScale(5); });\r\n        this.speed10xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 830, h, 30, 20, \"10x\")\r\n            .onClickHandler(() => { this._setTimeScale(5, 2); });\r\n        this.speed25xButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 865, h, 30, 20, \"25x\")\r\n            .onClickHandler(() => { this._setTimeScale(5, 5); });\r\n        this.speedTabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_9__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.speedTabGroup.addElement(this.speed0xButton);\r\n        this.speedTabGroup.addElement(this.speed1xButton);\r\n        this.speedTabGroup.addElement(this.speed2xButton);\r\n        this.speedTabGroup.addElement(this.speed5xButton);\r\n        this.speedTabGroup.addElement(this.speed10xButton);\r\n        this.speedTabGroup.addElement(this.speed25xButton);\r\n        switch (_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().time.timescale) {\r\n            case 0:\r\n                this.speedTabGroup._updateHighlights(0);\r\n                break;\r\n            case 1:\r\n                this.speedTabGroup._updateHighlights(1);\r\n                break;\r\n            case 2:\r\n                this.speedTabGroup._updateHighlights(2);\r\n                break;\r\n            case 5:\r\n                if (_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().time.fskip == 1) {\r\n                    this.speedTabGroup._updateHighlights(3);\r\n                } else if (_data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().time.fskip == 2) {\r\n                    this.speedTabGroup._updateHighlights(4);\r\n                } else {\r\n                    this.speedTabGroup._updateHighlights(5);\r\n                }\r\n                break;\r\n        }\r\n        h += 30;\r\n\r\n        this.autoExploreLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Auto Explore:\");\r\n        this.autoExploreButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 795, h, 40, 20,\r\n            _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore === true ? \"ON\" : \"OFF\")\r\n            .onClickHandler(() => { this._toggleAutoExplore() });\r\n        this.autoExploreButton.setTextColor(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoExplore === true ?\r\n            Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(175, 0, 140));\r\n        h += 30;\r\n        this.autoInvadeLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Auto Invade:\");\r\n        this.autoInvadeButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 795, h, 40, 20, \"OFF\")\r\n            .onClickHandler(() => { this._toggleAutoInvade() });\r\n        this.autoInvadeButton.setTextColor(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_1__[\"DynamicSettings\"].getInstance().autoInvade === true ?\r\n            Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(175, 0, 140));\r\n        this._updateAutoInvade();\r\n        h += 30;\r\n        this.autoUpgradeLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Auto Upgrade:\");\r\n        this.autoUpgradeButton = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 795, h, 40, 20,\r\n            this.region.autoUpgrade === true ? \"ON\" : \"OFF\")\r\n            .onClickHandler(() => { this._toggleAutoUpgrade() });\r\n        this.autoUpgradeButton.setTextColor(this.region.autoUpgrade === true ? Phaser.Display.Color.GetColor(255, 255, 255) :\r\n            Phaser.Display.Color.GetColor(175, 0, 140));\r\n        h += 30;\r\n        if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0) {\r\n            this.blueprintLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Blueprint:\");\r\n            h += 25;\r\n            this.noBPBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 660, h, 35, 20, \"OFF\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(-1) });\r\n            this.noBPBtn.setTextColor(Phaser.Display.Color.GetColor(175, 0, 140));\r\n            this.bp1Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 700, h, 35, 20, \"BP1\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(0) });\r\n            this.bp2Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 740, h, 35, 20, \"BP2\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(1) });\r\n            this.bp3Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 780, h, 35, 20, \"BP3\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(2) });\r\n            this.bp4Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 820, h, 35, 20, \"BP4\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(3) });\r\n            this.bp5Btn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_13__[\"TextButton\"](this.scene, this.x + 860, h, 35, 20, \"BP5\")\r\n                .onClickHandler(() => { this._changeBlueprintHandler(4) });\r\n            this.bpTabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_9__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n                Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n            this.bpTabGroup.addElement(this.noBPBtn);\r\n            this.bpTabGroup.addElement(this.bp1Btn);\r\n            this.bpTabGroup.addElement(this.bp2Btn);\r\n            this.bpTabGroup.addElement(this.bp3Btn);\r\n            this.bpTabGroup.addElement(this.bp4Btn);\r\n            this.bpTabGroup.addElement(this.bp5Btn);\r\n            this.bpTabGroup._updateHighlights(this.region.blueprint + 1);\r\n\r\n            this.detailsContainer.push(this.blueprintLabel, this.noBPBtn, this.bp1Btn, this.bp2Btn, this.bp3Btn, this.bp4Btn, this.bp5Btn);\r\n        }\r\n\r\n        this.autoExploreLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n        this.autoExploreButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n        this.autoInvadeLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n        this.autoInvadeButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n        this.autoUpgradeLabel.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.outcast.completions > 0);\r\n        this.autoUpgradeButton.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.outcast.completions > 0);\r\n\r\n        h = this.y + 450;\r\n        this.exploreLabel = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", \"Exploring:\");\r\n        this.exploreProgressBar = new _ui_ProgressBar__WEBPACK_IMPORTED_MODULE_11__[\"ProgressBar\"](this.scene, this.x + 765, h, 130, 20,\r\n            Phaser.Display.Color.GetColor(0, 0, 255), Phaser.Display.Color.GetColor(32, 32, 64));\r\n        this.exploreProgressBar.setFillPercent(0);\r\n        h += 30;\r\n\r\n        var txt = \"Daily Production:\\n\"\r\n        var resources = this.region._getResourcesPerDay();\r\n        for (var i = 0; i < resources.length; i++) {\r\n            if (resources[i] > 100) {\r\n                txt += \" \" + _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].numberString(Math.floor(resources[i])) + \"\\n\";\r\n            } else {\r\n                txt += \" \" + _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + (Math.floor(resources[i] * 100) / 100) + \"\\n\";\r\n            }\r\n        }\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true) {\r\n            txt += '\\nStar Shard Chance: ' + ((this.region.getStarShardChance() * 100) / 1).toString().substr(0, 4) + \"%\\n\" +\r\n                \"Star Shard Amount: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].numberString(this.region.starshardsPerTile);\r\n        }\r\n        this.regionStats = this.scene.add.bitmapText(this.x + 660, h, \"courier20\", txt);\r\n        this.regionStats.setVisible(this.region.townData.townExplored === true);\r\n\r\n        this.detailsContainer.push(this.invasionBar, this.invasionLabel, this.offlineLabel, this.speed0xButton, this.speed1xButton, this.speed2xButton,\r\n            this.speed5xButton, this.speed10xButton, this.speed25xButton, this.autoExploreLabel, this.autoExploreButton,\r\n            this.autoInvadeLabel, this.autoInvadeButton, this.autoUpgradeLabel, this.autoUpgradeButton, this.exploreLabel,\r\n            this.exploreProgressBar, this.regionStats);\r\n    }\r\n\r\n    _setTimeScale(value, fskip = 1) {\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.time.setTimeScale(value, fskip);\r\n    }\r\n\r\n    update(__time, delta) {\r\n        this.offlineLabel.setText(\"Offline Time: \" + _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.time.getOfflineTimeString());\r\n        this.invasionBar.setFillPercent(this.region.invasionCounter / this.region.invasionCounterMax, \"Invasion Strength\");\r\n        this.invasionLabel.setText(\"Lv \" + this.region.invasionStrength);\r\n        this.sightingVal = (this.sightingVal + delta) % 2000;\r\n        var lerp = Math.sin((this.sightingVal / 2000) * Math.PI * 2) * 0.5 + 0.5;\r\n        if (this.region.invasions.length > 0) {\r\n            for (var i = 0; i < this.region.invasions.length; i++) {\r\n                var s = this.region.invasions[i];\r\n                var clr = toPhaserColor(this.region.map[s[0]][s[1]].color);\r\n                this.tileElements[s[0]][s[1]].rect.fillColor = _utils_Common__WEBPACK_IMPORTED_MODULE_15__[\"Common\"].colorLerp(clr, Phaser.Display.Color.GetColor(255, 0, 255), lerp);\r\n            }\r\n        }\r\n\r\n        // console.log([this.hoveredTile, this.lastTileHotkeyed]);\r\n        if (this.upgradeKey.isDown && this.hoveredTile[0] !== -1 &&\r\n            (this.lastTileHotkeyed[0] != this.hoveredTile[0] || this.lastTileHotkeyed[1] != this.hoveredTile[1])) {\r\n            this._tileActionHandler(\"upgrade\", { tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]] });\r\n            this.lastTileHotkeyed = this.hoveredTile;\r\n        } else if (this.upgradeKey.isDown === false) {\r\n            this.lastTileHotkeyed = [-1, -1];\r\n        }\r\n        if (Phaser.Input.Keyboard.JustUp(this.exploreKey) && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"explore\", { tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]] });\r\n        } else if (this.houseKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('house')\r\n            });\r\n        } else if (this.roadKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('road')\r\n            });\r\n        } else if (this.productionKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName(_data_RegionRegistry__WEBPACK_IMPORTED_MODULE_5__[\"RegionRegistry\"].TILE_TYPES[this.region.map[this.hoveredTile[1]][this.hoveredTile[0]].regName].preferredBuilding)\r\n            });\r\n        } else if (this.woodKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('wood')\r\n            });\r\n        } else if (this.leatherKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('leather')\r\n            });\r\n        } else if (this.metalKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('metal')\r\n            });\r\n        } else if (this.fiberKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('fiber')\r\n            });\r\n        } else if (this.stoneKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('stone')\r\n            });\r\n        } else if (this.crystalKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('crystal')\r\n            });\r\n        } else if (this.marketKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('market')\r\n            });\r\n        } else if (this.tavernKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('tavern')\r\n            });\r\n        } else if (this.warehouseKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('warehouse')\r\n            });\r\n        } else if (this.alchemyKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('alchemy')\r\n            });\r\n        } else if (this.docksKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('docks')\r\n            });\r\n        } else if (this.dojoKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('dojo')\r\n            });\r\n        } else if (this.garrisonKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('garrison')\r\n            });\r\n        } else if (this.watchtowerKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"build\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]],\r\n                building: _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_0__[\"BuildingRegistry\"].getBuildingByName('watchtower')\r\n            });\r\n        } else if (this.destroyKey.isDown && this.hoveredTile[0] !== -1) {\r\n            this._tileActionHandler(\"destroy\", {\r\n                tile: this.region.map[this.hoveredTile[1]][this.hoveredTile[0]]\r\n            });\r\n        }\r\n\r\n        if (this.updateBuildings === true) {\r\n            this.updateBuildings = false;\r\n            for (var i = 0; i < this.region.roads.length; i++) {\r\n                var road = this.region.roads[i];\r\n                var texture = this._getBuildingImage(road[1], road[0]);\r\n                // this can happen if the town isn't discovered yet and they build a building, skip the town road for now.\r\n                if (this.tileElements[road[0]][road[1]].building !== undefined) {\r\n                    this.tileElements[road[0]][road[1]].building.setTexture(texture.sprite, texture.tile);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.activeTile !== undefined) {\r\n            const tileName = this.letters[this.activeTile.y] + \"\" + (this.activeTile.x + 1) + \" - \" + this.activeTile.name;\r\n            this.exploreProgressBar.setFillPercent(this.activeTile.amountExplored / this.activeTile.explorationNeeded, tileName)\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.detailsContainer.length; i++) {\r\n            this.detailsContainer[i].setVisible(visible);\r\n        }\r\n        if (visible === true) {\r\n            this.autoExploreLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n            this.autoExploreButton.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_4__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n            this.autoInvadeLabel.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.invasion.completions > 0);\r\n            this.autoInvadeButton.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.invasion.completions > 0);\r\n            this.autoUpgradeLabel.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.outcast.completions > 0);\r\n            this.autoUpgradeButton.setVisible(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_2__[\"MoonlightData\"].getInstance().challenges.outcast.completions > 0);\r\n        } else {\r\n            this.autoExploreLabel.setVisible(false);\r\n            this.autoExploreButton.setVisible(false);\r\n            this.autoInvadeLabel.setVisible(false);\r\n            this.autoInvadeButton.setVisible(false);\r\n            this.autoUpgradeLabel.setVisible(false);\r\n            this.autoUpgradeButton.setVisible(false);\r\n        }\r\n\r\n        for (var i = 0; i < this.tileElements.length; i++) {\r\n            for (var t = 0; t < this.tileElements[0].length; t++) {\r\n                this.tileElements[i][t].rect.setVisible(visible);\r\n                if (this.tileElements[i][t].building !== undefined) {\r\n                    this.tileElements[i][t].building.setVisible(visible);\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < this.guides.length; i++) {\r\n            this.guides[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/RegionView.js?");

/***/ }),

/***/ "./src/scenes/RitualView.js":
/*!**********************************!*\
  !*** ./src/scenes/RitualView.js ***!
  \**********************************/
/*! exports provided: RitualView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RitualView\", function() { return RitualView; });\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_RitualData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/RitualData */ \"./src/data/RitualData.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RitualView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.ritualElements = [];\r\n        this.sacLabels = [];\r\n        this.elements = [];\r\n    }\r\n\r\n    create() {\r\n        var backRect = this.scene.add.rectangle(this.x, this.y, 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this._refreshRituals();\r\n\r\n        var titleLabel = this.scene.add.bitmapText(this.x + 450, this.y + 30, \"courier20\",\r\n            \"CULT OF THE BETRAYER STAR\", 20, 1).setOrigin(0.5, 0);\r\n        titleLabel.setTint(Phaser.Display.Color.GetColor(133, 105, 255));\r\n        var desc = \"Spend Ritual Points to perform Rituals, corrupting the Mystic Gates and changing the \" +\r\n            \"next world. Ritual Points are gained by sacrificing large quantities of resources. \" +\r\n            \"All Ritual effects, including permanent bonuses, take effect on your next run. Works \" +\r\n            \"in challenges too!\";\r\n        var descLabel = this.scene.add.bitmapText(this.x + 450, this.y + 60, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].processText(desc, 60), 16, 1).setOrigin(0.5, 0);\r\n        descLabel.setTint(Phaser.Display.Color.GetColor(133, 105, 255));\r\n        var currentLabel = this.scene.add.bitmapText(this.x + 100, this.y + 52, \"courier20\",\r\n            \"CURRENT\", 20, 1).setOrigin(0.5, 0);\r\n        this.currentMoonLabel = this.scene.add.bitmapText(this.x + 100, this.y + 80, \"courier20\",\r\n            \"Moonlight: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().moonlightBonus * 100)) + \"%\", 20, 1)\r\n            .setOrigin(0.5, 0);\r\n        this.currentMoonLabel.setTint(Phaser.Display.Color.GetColor(206, 238, 240));\r\n        this.currentStarLabel = this.scene.add.bitmapText(this.x + 100, this.y + 100, \"courier20\",\r\n            \"Star Shards: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().starshardBonus * 100)) + \"%\", 20, 1)\r\n            .setOrigin(0.5, 0);\r\n        this.currentStarLabel.setTint(Phaser.Display.Color.GetColor(177, 100, 169));\r\n        var nextLabel = this.scene.add.bitmapText(this.x + 800, this.y + 60, \"courier20\",\r\n            \"NEXT WORLD\", 20, 1).setOrigin(0.5, 0);\r\n        this.nextMoonLabel = this.scene.add.bitmapText(this.x + 800, this.y + 80, \"courier20\",\r\n            \"Moonlight: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().nextMoonlightBonus * 100)) + \"%\", 20, 1)\r\n            .setOrigin(0.5, 0);\r\n        this.nextMoonLabel.setTint(Phaser.Display.Color.GetColor(206, 238, 240));\r\n        this.nextStarLabel = this.scene.add.bitmapText(this.x + 800, this.y + 100, \"courier20\",\r\n            \"Star Shards: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().nextStarshardBonus * 100)) + \"%\", 20, 1)\r\n            .setOrigin(0.5, 0);\r\n        this.nextStarLabel.setTint(Phaser.Display.Color.GetColor(177, 100, 169));\r\n\r\n        var empowerLabel = this.scene.add.bitmapText(this.x + 168, this.y + 168, \"courier20\",\r\n            \"Rituals of\\nEmpowerment\", 20, 1).setOrigin(0.5, 0);\r\n        var corruptionLabel = this.scene.add.bitmapText(this.x + 432, this.y + 168, \"courier20\",\r\n            \"Rituals of\\nCorruption\", 20, 1).setOrigin(0.5, 0);\r\n        var destructionLabel = this.scene.add.bitmapText(this.x + 696, this.y + 168, \"courier20\",\r\n            \"Rituals of\\nDestruction\", 20, 1).setOrigin(0.5, 0);\r\n        var exchangeLabel = this.scene.add.bitmapText(this.x + 696, this.y + 480, \"courier20\",\r\n            \"Rituals of\\nExchange\", 20, 1).setOrigin(0.5, 0);\r\n\r\n        var sacrificeRect = this.scene.add.rectangle(this.x + 290, this.y + 460, 300, 240, 0x000000).setOrigin(0);\r\n        sacrificeRect.isStroked = true;\r\n        sacrificeRect.strokeColor = Phaser.Display.Color.GetColor(180, 180, 180);\r\n        sacrificeRect.lineWidth = 2;\r\n\r\n        var sacTitle = this.scene.add.bitmapText(this.x + 440, this.y + 465, \"courier20\",\r\n            \"Tablet of Sacrifice\", 20, 1).setOrigin(0.5, 0);\r\n        sacTitle.setTint(Phaser.Display.Color.GetColor(220, 100, 60));\r\n        var h = 500;\r\n        var woodImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 32 }, \"Wood. Found in forests and wodes, duh.\");\r\n        var sacWoodBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(0); });\r\n        h += 25;\r\n        var leatherImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 33 }, \"Leather. The best leather comes from the plains and forests.\");\r\n        var sacLeatherBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(1); });\r\n        h += 25;\r\n        var metalImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 34 }, \"Metal. Hard to find resource thats available in large quantities in the mountains.\");\r\n        var sacMetalBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(2); });\r\n        h += 25;\r\n        var fiberImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 35 }, \"Fiber. Found in swamps and forests.\");\r\n        var sacFiberBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(3); });\r\n        h += 25;\r\n        var stoneImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 36 }, \"Stone. Can be found in abundance in the hills.\");\r\n        var sacStoneBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(4); });\r\n        h += 25;\r\n        var crystalImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 37 }, \"Crystal. Hard to find in large amounts, but can be found in the harder to reach areas.\");\r\n        var sacCrystalBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(5); });\r\n        h += 25;\r\n        var goldImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 38 }, \"Gold. How much cold, hard, cash you have.\");\r\n        var sacGoldBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(6); });\r\n        h += 25;\r\n        var moteImg = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 295, this.y + h + 2, 16, 16,\r\n            { sprite: \"icons\", tile: 39 }, \"Motes of Darkness. Fuse these onto weapons to improve their power.\");\r\n        var sacMotesBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](this.scene, this.x + 390, this.y + h, 40, 20, \"Sac\")\r\n            .onClickHandler(() => { this._sacResource(7); });\r\n\r\n        var ritPointIcon = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + 475, this.y + 510, 32, 32,\r\n            { sprite: \"icons2\", tile: 6 }, \"Ritual Points. Each Ritual costs a single point to activate, regardless of level.\");\r\n        this.ritualPointsLabel = this.scene.add.bitmapText(this.x + 515, this.y + 515, \"courier20\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints), 20, 1);\r\n        this.ritualPointsLabel.setTint(Phaser.Display.Color.GetColor(220, 100, 60));\r\n        desc = \"Sacrifice T8 resources, gold, and motes to earn Ritual Points.\";\r\n        var sacDescLabel = this.scene.add.bitmapText(this.x + 510, this.y + 550, \"courier16\",\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].processText(desc, 18), 16, 1).setOrigin(0.5, 0);\r\n        sacDescLabel.setTint(Phaser.Display.Color.GetColor(220, 100, 60));\r\n        this._refreshSacrificeLabels();\r\n\r\n        this.elements = [backRect, titleLabel, descLabel, currentLabel, this.currentMoonLabel, this.currentStarLabel,\r\n            nextLabel, this.nextMoonLabel, this.nextStarLabel, empowerLabel, corruptionLabel, destructionLabel,\r\n            exchangeLabel, sacWoodBtn, sacLeatherBtn, sacMetalBtn, sacFiberBtn, sacStoneBtn, sacCrystalBtn, sacGoldBtn,\r\n            sacMotesBtn, woodImg, leatherImg, metalImg, fiberImg, stoneImg, crystalImg, goldImg, moteImg, sacrificeRect,\r\n            sacTitle, ritPointIcon, this.ritualPointsLabel, sacDescLabel];\r\n    }\r\n\r\n    _canSacResource(id) {\r\n        switch (id) {\r\n            case 0:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][0] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[0];\r\n            case 1:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][1] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[1];\r\n            case 2:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][2] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[2];\r\n            case 3:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][3] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[3];\r\n            case 4:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][4] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[4];\r\n            case 5:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().resources[7][5] > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[5];\r\n            case 6:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().gold > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[6];\r\n            case 7:\r\n                return _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().motes > _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[7];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _sacResource(id) {\r\n        if (this._canSacResource(id) === false) {\r\n            return;\r\n        }\r\n        switch (id) {\r\n            case 0:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[0], 0, 0, 0, 0, 0], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 1:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([0, _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[1], 0, 0, 0, 0], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 2:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([0, 0, _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[2], 0, 0, 0], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 3:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([0, 0, 0, _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[3], 0, 0], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 4:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([0, 0, 0, 0, _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[4], 0], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 5:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().spendResource([0, 0, 0, 0, 0, _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[5]], 7);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 6:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addGold(-_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[6]);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n            case 7:\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addMote(-_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[7]);\r\n                _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().increaseSacCost(id);\r\n                break;\r\n        }\r\n        this._refreshSacrificeLabels();\r\n        this.ritualPointsLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints));\r\n    }\r\n\r\n    _levelUpRitual(ritual) {\r\n        if (_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints <= 0) {\r\n            return;\r\n        }\r\n        ritual.level += 1;\r\n        _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints -= 1;\r\n        _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().calculateModifiers();\r\n        this.ritualPointsLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints));\r\n        this._refreshBonuses();\r\n    }\r\n\r\n    _setupRitualElement(ritual) {\r\n        var txt = ritual.name + \" Lv\" + ritual.level + \"\\n\" + _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRitualTooltip(ritual) + \"\\n\\n\";\r\n        var btn = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](this.scene, this.x + ritual.pos[0], this.y + ritual.pos[1],\r\n            48, 48, ritual.texture, txt, [450, 150], 53);\r\n        btn.onClickHandler(() => {\r\n            this._levelUpRitual(ritual);\r\n            this._refreshRituals();\r\n        });\r\n        return btn;\r\n    }\r\n\r\n    _refreshRituals() {\r\n        for (var i = 0; i < this.ritualElements.length; i++) {\r\n            this.ritualElements[i].destroy();\r\n        }\r\n        this.ritualElements = [];\r\n        for (const prop in _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().rituals) {\r\n            this.ritualElements.push(this._setupRitualElement(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().rituals[prop]));\r\n        }\r\n    }\r\n\r\n    _refreshBonuses() {\r\n        this.currentMoonLabel.setText(\"Moonlight: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().moonlightBonus * 100)) + \"%\");\r\n        this.currentStarLabel.setText(\"Star Shards: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().starshardBonus * 100)) + \"%\");\r\n        this.nextMoonLabel.setText(\"Moonlight: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().nextMoonlightBonus * 100)) + \"%\");\r\n        this.nextStarLabel.setText(\"Star Shards: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(Math.floor(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().nextStarshardBonus * 100)) + \"%\");\r\n    }\r\n\r\n    _refreshSacrificeLabels() {\r\n        for (var i = 0; i < this.sacLabels.length; i++) {\r\n            this.sacLabels[i].destroy();\r\n        }\r\n        this.sacLabels = [];\r\n        for (var i = 0; i < _data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts.length; i++) {\r\n            this.sacLabels.push(this.scene.add.bitmapText(this.x + 320, this.y + 502 + i * 25, \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualCosts[i])));\r\n        }\r\n        this.ritualPointsLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_5__[\"Common\"].numberString(_data_RitualData__WEBPACK_IMPORTED_MODULE_1__[\"RitualData\"].getInstance().ritualPoints));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].setVisible(visible);\r\n        }\r\n        for (var i = 0; i < this.ritualElements.length; i++) {\r\n            this.ritualElements[i].setVisible(visible);\r\n        }\r\n        for (var i = 0; i < this.sacLabels.length; i++) {\r\n            this.sacLabels[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/RitualView.js?");

/***/ }),

/***/ "./src/scenes/SceneUIBase.js":
/*!***********************************!*\
  !*** ./src/scenes/SceneUIBase.js ***!
  \***********************************/
/*! exports provided: SceneUIBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SceneUIBase\", function() { return SceneUIBase; });\n\r\nclass SceneUIBase extends Phaser.Scene {\r\n\r\n    constructor(position = [0, 0], name = \"myScene\") {\r\n        super(name);\r\n        this.position = position;\r\n    }\r\n\r\n    relativeX(x = 0) {\r\n        return this.position[0] + x;\r\n    }\r\n    relativeY(y = 0) {\r\n        return this.position[1] + y;\r\n    }\r\n\r\n    enableScene() {\r\n\r\n    }\r\n\r\n    disableScene() {\r\n\r\n    }\r\n\r\n    registerEvent(name, callback) {\r\n        \r\n    }\r\n\r\n    preload() {\r\n    }\r\n\r\n\r\n    create() {\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/SceneUIBase.js?");

/***/ }),

/***/ "./src/scenes/StarshardView.js":
/*!*************************************!*\
  !*** ./src/scenes/StarshardView.js ***!
  \*************************************/
/*! exports provided: StarshardView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StarshardView\", function() { return StarshardView; });\n/* harmony import */ var _data_StarData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\nclass StarshardView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.canLevelPerks = false;\r\n        this.elements = [];\r\n\r\n        this.constellationArray = [[408, 240], [480, 264], [336, 264], [504, 336], [312, 336], [360, 408], [456, 408],\r\n        [144, 432], [96, 528], [192, 528],\r\n        [600, 216], [624, 96], [696, 120], [720, 192],\r\n        [408, 600], [336, 552], [480, 552],\r\n        [264, 168], [192, 216], [120, 168], [120, 96], [192, 24],\r\n        [720, 408], [672, 480], [768, 480]];\r\n    }\r\n\r\n    create() {\r\n        this.refreshView();\r\n    }\r\n\r\n    refreshView() {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].destroy();\r\n        }\r\n        this.elements = [];\r\n\r\n        var txt = this.scene.add.bitmapText(this.x + 550, this.y + 420, \"courier20\", \"STAR SHARDS\\n\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.round(_data_StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().starShards)), 20, 1).setOrigin(0.5);\r\n        txt.setTint(Phaser.Display.Color.GetColor(177, 100, 169));\r\n        this.elements.push(txt);\r\n\r\n        var starData = new _data_StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"]();\r\n        var idx = 0;\r\n        for (const prop in starData.perks) {\r\n            var x = this.x + this.constellationArray[idx][0] + 118;\r\n            var y = this.y + this.constellationArray[idx][1] + 56;\r\n            this.elements.push(this._setupPerkButton(starData.perks[prop], x, y));\r\n            idx++;\r\n        }\r\n    }\r\n\r\n    _havePerkRequirements(perk) {\r\n        for (var i = 0; i < perk.requires.length; i++) {\r\n            if (_data_StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().perks[perk.requires[i]].level === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    _levelUpPerk(perk) {\r\n        if (this.canLevelPerks === false) {\r\n            return;\r\n        }\r\n        _data_StarData__WEBPACK_IMPORTED_MODULE_0__[\"StarData\"].getInstance().levelUpPerk(perk);\r\n    }\r\n\r\n    _setupPerkButton(perk, x, y) {\r\n        var txt = \"\";\r\n        if (perk.maxLevel !== -1) {\r\n            txt = perk.name + \" Lv\" + perk.level + \"/\" + perk.maxLevel + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getStarPerkTooltip(perk) + \"\\n\\n\";\r\n        } else {\r\n            txt = perk.name + \" Lv\" + perk.level + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getStarPerkTooltip(perk) + \"\\n\\n\";\r\n        }\r\n        var cost = Math.floor((perk.cost[0] + perk.cost[1] * (perk.level)) * Math.pow(perk.cost[2], perk.level));\r\n        txt += \"Costs \" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(cost) + \" Star Shards\\n\";\r\n\r\n        var btn = new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](this.scene, x, y, 48, 48, perk.texture, txt, [450, 150], 53)\r\n            .onClickHandler(() => {\r\n                this._levelUpPerk(perk);\r\n                this.refreshView();\r\n            });\r\n        if (this._havePerkRequirements(perk) === false) {\r\n            btn.setTint(Phaser.Display.Color.GetColor(32, 32, 32));\r\n        }\r\n        return btn;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/StarshardView.js?");

/***/ }),

/***/ "./src/scenes/TalentScene.js":
/*!***********************************!*\
  !*** ./src/scenes/TalentScene.js ***!
  \***********************************/
/*! exports provided: TalentScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TalentScene\", function() { return TalentScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _ui_FloatingTooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _ui_ImageButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _ui_ClassSelectWindow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/ClassSelectWindow */ \"./src/ui/ClassSelectWindow.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TalentScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n        this.adventurerArray = [[264, 288], [312, 240], [360, 216], [408, 192], [456, 216], [504, 240], [552, 288],\r\n        [216, 240], [264, 192], [336, 144], [408, 120], [480, 144], [552, 192], [600, 240],\r\n        [168, 192], [240, 120], [312, 72], [408, 48], [504, 72], [576, 120], [648, 192],\r\n        [408, 312], [480, 384], [336, 384], [408, 456], [336, 312], [480, 312], [480, 456], [336, 456]];\r\n\r\n        this.wizardArray = [[264, 240], [264, 168], [336, 168], [408, 168], [480, 168], [552, 168],\r\n        [264, 96], [264, 24], [336, 96], [336, 24], [408, 96], [408, 24], [480, 96], [480, 24], [552, 96], [552, 24],\r\n        [336, 240], [408, 240], [480, 240], [552, 240], [192, 312], [192, 240], [192, 168], [192, 96], [624, 168],\r\n        [408, 312], [480, 384], [336, 384], [408, 456], [336, 312], [480, 312], [480, 456], [336, 456]];\r\n        this.classSelectWindow = undefined;\r\n    }\r\n\r\n    refresh() {\r\n        this.rebirth();\r\n    }\r\n\r\n    rebirth() {\r\n        if (this.classSelectWindow !== undefined) {\r\n            this.classSelectWindow.destroy();\r\n        }\r\n        if (this.player.classChosen === false) {\r\n            this.classSelectWindow = new _ui_ClassSelectWindow__WEBPACK_IMPORTED_MODULE_7__[\"ClassSelectWindow\"](this, this.relativeX(60), this.relativeY(10));\r\n            this.classSelectWindow.onSelectHandler((x) => { this._onSelectHandler(x); });\r\n        }\r\n        this.talentLabel.setText(\"Talent Points\\n\" + this.player.talentPoints);\r\n\r\n        for (var i = 0; i < this.talentButtons.length; i++) {\r\n            this.talentButtons[i].destroy();\r\n        }\r\n        this._disableTooltip();\r\n\r\n        this.talentButtons = [];\r\n        var talentArray = [];\r\n        switch (this.player.playerClass) {\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].CLASS_ADVENTURER:\r\n                talentArray = this.adventurerArray;\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].CLASS_BESERKER:\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_6__[\"Statics\"].CLASS_WIZARD:\r\n                talentArray = this.wizardArray;\r\n                break;\r\n        }\r\n        var idx = 0;\r\n        for (const prop in this.player.talents) {\r\n            var x = this.relativeX(talentArray[idx][0] + 18);\r\n            var y = this.relativeY(talentArray[idx][1] + 20);\r\n            this._setupTalentButton(prop, x, y, idx);\r\n            idx++;\r\n        }\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.floatingText = undefined;\r\n        this.player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"]();\r\n        this.talentLabel = this.add.bitmapText(this.relativeX(450), this.relativeY(25), \"courier20\",\r\n            \"Talent Points\\n\" + this.player.talentPoints, 20, 1).setOrigin(0.5);\r\n        this.talentButtons = [];\r\n\r\n        this.refresh();\r\n\r\n        this.player.registerEvent(\"onTalentChanged\", () => { this._onTalentChanged(); });\r\n    }\r\n\r\n    _onSelectHandler(selectedClass) {\r\n        this.player.selectClass(selectedClass);\r\n        this.classSelectWindow.destroy();\r\n        this.refresh();\r\n    }\r\n\r\n    _setupTalentButton(talentName, x, y, index) {\r\n        this.talentButtons.push(new _ui_ImageButton__WEBPACK_IMPORTED_MODULE_5__[\"ImageButton\"](this, x, y, 48, 48, this.player.talents[talentName].texture)\r\n            .onClickHandler(() => {\r\n                this._levelUpTalent(this.player.talents[talentName]);\r\n                this._disableTooltip();\r\n                this._setTooltip(talentName, x, y);\r\n                this.refresh();\r\n            })\r\n            .onPointerOverHandler(() => { this._setTooltip(talentName, x, y); })\r\n            .onPointerOutHandler(() => { this._disableTooltip(); }));\r\n        this._updateTalentButton(this.player.talents[talentName], index);\r\n    }\r\n\r\n    _updateTalentButton(talent, index) {\r\n        if (talent.level >= talent.maxLevel && talent.maxLevel !== -1) {\r\n            this.talentButtons[index].setBorderTint(Phaser.Display.Color.GetColor(0, 220, 0));\r\n        } else if (talent.level > 0) {\r\n            this.talentButtons[index].setBorderTint(Phaser.Display.Color.GetColor(212, 175, 55));\r\n        } else if (this._haveTalentRequirements(talent) === false) {\r\n            this.talentButtons[index].setTint(Phaser.Display.Color.GetColor(32, 32, 32));\r\n        } else {\r\n            this.talentButtons[index].clearTint();\r\n        }\r\n    }\r\n\r\n    _onTalentChanged() {\r\n        this.talentLabel.setText(\"Talent Points\\n\" + this.player.talentPoints);\r\n    }\r\n\r\n    _haveTalentRequirements(talent) {\r\n        for (var i = 0; i < talent.requires.length; i++) {\r\n            if (this.player.talents[talent.requires[i]].level === 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    _levelUpTalent(talent) {\r\n        if (this.player.talentPoints <= 0 || this._haveTalentRequirements(talent) === false) {\r\n            return;\r\n        }\r\n        this.player.levelTalent(talent);\r\n    }\r\n\r\n    _setTooltip(talentName, x, y) {\r\n        var talent = this.player.talents[talentName];\r\n        if (this.FloatingTooltip !== undefined) {\r\n            this._disableTooltip();\r\n        }\r\n        var txt = \"\";\r\n        if (talent.maxLevel !== -1) {\r\n            txt = talent.name + \" Lv\" + this.player.getTalentLevel(talentName) + \"/\" +\r\n                talent.maxLevel + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTalentTooltip(talent, this.player.getTalentLevel(talentName)) + \"\\n\\n\";\r\n        } else {\r\n            txt = talent.name + \" Lv\" + this.player.getTalentLevel(talentName) + \"\\n\" +\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTalentTooltip(talent, this.player.getTalentLevel(talentName)) + \"\\n\\n\";\r\n        }\r\n\r\n        if (talent.requires.length > 0) {\r\n            txt += \"Requires: \";\r\n            for (var i = 0; i < talent.requires.length; i++) {\r\n                txt += this.player.talents[talent.requires[i]].name + (i < talent.requires.length - 1 ? \", \" : \"\");\r\n            }\r\n        }\r\n        txt = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(txt, 53);\r\n        this.floatingText = new _ui_FloatingTooltip__WEBPACK_IMPORTED_MODULE_4__[\"FloatingTooltip\"](this, txt, x + (x + 450 > 1100 ? -450 : 0), y + (y > 300 ? -150 : 50), 450, 150, \"courier16\", 16);\r\n    }\r\n    _disableTooltip() {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n            this.floatingText = undefined;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/TalentScene.js?");

/***/ }),

/***/ "./src/scenes/TownScene.js":
/*!*********************************!*\
  !*** ./src/scenes/TownScene.js ***!
  \*********************************/
/*! exports provided: TownScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TownScene\", function() { return TownScene; });\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _ui_TechDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/TechDisplay */ \"./src/ui/TechDisplay.js\");\n/* harmony import */ var _data_TownData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/TownData */ \"./src/data/TownData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ui_DungeonDisplay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/DungeonDisplay */ \"./src/ui/DungeonDisplay.js\");\n/* harmony import */ var _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui/TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_DungeonManager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/DungeonManager */ \"./src/data/DungeonManager.js\");\n/* harmony import */ var _ui_DungeonBlockDisplay__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ui/DungeonBlockDisplay */ \"./src/ui/DungeonBlockDisplay.js\");\n/* harmony import */ var _data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../data/CreatureRegistry */ \"./src/data/CreatureRegistry.js\");\n/* harmony import */ var _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ui/HighlightElementGroup */ \"./src/ui/HighlightElementGroup.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TownScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_0__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.selectedTab = 0;\r\n        this.dungeonManager = new _data_DungeonManager__WEBPACK_IMPORTED_MODULE_13__[\"DungeonManager\"]();\r\n        this.dungeonManager.registerEvent(\"OnCreatureChanged\", (v, e) => { this._onCreatureChanged(v, e); });\r\n        this.dungeonManager.registerEvent(\"OnPlayerDeath\", () => { this._onPlayerDeath(); });\r\n        this.dungeonManager.registerEvent(\"OnRoomComplete\", (d) => { this._onRoomComplete(d); });\r\n    }\r\n\r\n    _handleDungeonClick(props) {\r\n        if (props.reward === undefined) {\r\n            this._startDungeon(props.dungeon);\r\n        } else {\r\n            props.dungeon.rewards = [props.dungeon.rewards[props.reward]];\r\n            var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getRegion(props.dungeon.regionLevel);\r\n            region.townData.chooseReward(props.dungeon.rewards[0]);\r\n            this._updateStatus();\r\n            this._refreshTechs();\r\n        }\r\n    }\r\n\r\n    _startDungeon(dungeon) {\r\n        var villagerBlock = _data_CreatureRegistry__WEBPACK_IMPORTED_MODULE_15__[\"CreatureRegistry\"].GetDungeonCreatureByName('villager', _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getVillagerPower(),\r\n            _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getVillagerHealth(), _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getArmySize());\r\n        this.dungeonManager.exploreDungeon(dungeon, villagerBlock);\r\n        this._setupActiveDungeonRooms(dungeon);\r\n        this._refreshTechs();\r\n    }\r\n\r\n    _onCreatureChanged(villager, enemy) {\r\n        this.dungeonBlockDisplays[0].initWithCreature(villager);\r\n        this.dungeonBlockDisplays[1].initWithCreature(enemy);\r\n    }\r\n\r\n    _onPlayerDeath() {\r\n        this.dungeonManager.endDungeon();\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().killSoldiers();\r\n        this._updateStatus();\r\n        this._refreshTechs();\r\n    }\r\n\r\n    _setupActiveDungeonRooms(dungeon) {\r\n        for (var i = 0; i < this.activeDungeonRooms.length; i++) {\r\n            this.activeDungeonRooms[i].destroy();\r\n        }\r\n        this.activeDungeonRooms = [];\r\n\r\n        var totalDist = (dungeon.maxRooms / 5) * 185;\r\n        var x = this.relativeX(570 - totalDist / 2);\r\n        for (var i = 0; i < dungeon.maxRooms; i++) {\r\n            var clr = i < dungeon.completedRooms ? Phaser.Display.Color.GetColor(130, 110, 200) : Phaser.Display.Color.GetColor(0, 0, 0);\r\n            var rect;\r\n            if (i % 5 === 4) {\r\n                var texture = i === dungeon.maxRooms - 1 ? { sprite: \"icons2\", tile: 1 } : { sprite: \"icons2\", tile: 0 };\r\n                var img = this.add.image(x + 4, this.relativeY(600) + 4, texture.sprite, texture.tile).setOrigin(0, 0).setDepth(99);\r\n                img.displayWidth = 32;\r\n                img.displayHeight = 32;\r\n                this.activeDungeonRooms.push(img);\r\n                rect = this.add.rectangle(x, this.relativeY(600), 40, 40, clr).setOrigin(0, 0);\r\n                x += 45;\r\n            } else {\r\n                rect = this.add.rectangle(x, this.relativeY(600) + 5, 30, 30, clr).setOrigin(0, 0);\r\n                x += 35;\r\n            }\r\n            rect.isStroked = true;\r\n            rect.lineWidth = 1;\r\n            rect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n            this.activeDungeonRooms.push(rect)\r\n        }\r\n\r\n        for (var i = 0; i < this.activeDungeonRooms.length; i++) {\r\n            this.activeDungeonRooms[i].setVisible(this.selectedTab === 2);\r\n        }\r\n    }\r\n\r\n    _onRoomComplete(dungeon) {\r\n        dungeon.completedRooms += 1;\r\n        if (dungeon.completedRooms === dungeon.maxRooms) {\r\n            this.dungeonManager.endDungeon();\r\n            _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().armySize = this.dungeonManager.villagerBlock.ArmySize();\r\n        } else if (dungeon.completedRooms % 5 === 0) {\r\n            var shade = dungeon.level * 250 * _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().getShadowBonus();\r\n            var motes = dungeon.tier * 10 * (1 + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().moonperks.heartofdarkness.level);\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().addShade(shade);\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().addMote(motes);\r\n        } else {\r\n            var res = [0, 0, 0, 0, 0, 0];\r\n            res[_utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].randint(0, 6)] = (dungeon.tier + 1) * 50;\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"].getInstance().addResource(res, Math.min(7, dungeon.regionLevel));\r\n        }\r\n        this._setupActiveDungeonRooms(dungeon);\r\n        this._refreshTechs();\r\n    }\r\n\r\n    refresh() {\r\n        this._updateStatus();\r\n    }\r\n\r\n    rebirth() {\r\n        this.selectedTab = 0;\r\n        this._updateStatus();\r\n        this._refreshTechs();\r\n        this.dungeonsBtn.setVisible(false);\r\n    }\r\n\r\n    changeRegion() {\r\n        this.selectedTab = 0;\r\n        this._updateStatus();\r\n        this._refreshTechs();\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.add.rectangle(this.relativeX(0), this.relativeY(0), 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n\r\n        this.townNameLabel = this.add.bitmapText(this.relativeX(10), this.relativeY(100), \"courier20\", \"Town\");\r\n        this.regionNameLabel = this.add.bitmapText(this.relativeX(10), this.relativeY(120), \"courier16\", \"Region \");\r\n        this.statsLabel = this.add.bitmapText(this.relativeX(15), this.relativeY(140), \"courier16\", \"\");\r\n        this.nightLabourBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(15), this.relativeY(140), 220, 20, \"Night Labour: OFF\")\r\n            .onClickHandler(() => { this._toggleNightLabour(); });\r\n        this.nightLabourBtn.setVisible(false);\r\n        this.townUpgradeBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(15), this.relativeY(140), 220, 20, \"Auto Upgrade: OFF\")\r\n            .onClickHandler(() => { this._toggleAutoUpgrade(); });\r\n        this.townUpgradeBtn.setVisible(false);\r\n\r\n        this.buildingBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(240), this.relativeY(10), 120, 20, \"Buildings\")\r\n            .onClickHandler(() => { this._selectTab(0); });\r\n        this.upgradesBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(370), this.relativeY(10), 120, 20, \"Research\")\r\n            .onClickHandler(() => { this._selectTab(1); });\r\n        this.dungeonsBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, this.relativeX(500), this.relativeY(10), 120, 20, \"Dungeons\")\r\n            .onClickHandler(() => { this._selectTab(2); });\r\n        this.dungeonsBtn.setVisible(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getCurrentRegion().townData.dungeons.length > 0);\r\n        this.tabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_16__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n            Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n        this.tabGroup.addElement(this.buildingBtn);\r\n        this.tabGroup.addElement(this.upgradesBtn);\r\n        this.tabGroup.addElement(this.dungeonsBtn);\r\n        this.tabGroup._updateHighlights(0);\r\n\r\n        this.regionSelectElements = [];\r\n\r\n        this.buildingDisplays = []\r\n\r\n        this.dungeonIcons = []\r\n        this.dungeonIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__[\"TooltipImage\"](this, this.relativeX(15), this.relativeY(50), 16, 16,\r\n            { sprite: \"icons\", tile: 24 }, \"Power. How much damage each villager can deal.\"));\r\n        this.dungeonIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__[\"TooltipImage\"](this, this.relativeX(15), this.relativeY(70), 16, 16,\r\n            { sprite: \"icons\", tile: 26 }, \"Health. How much damage each villager can take before dying.\"));\r\n        this.dungeonIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__[\"TooltipImage\"](this, this.relativeX(15), this.relativeY(90), 16, 16,\r\n            { sprite: \"icons\", tile: 60 }, \"Army Size. Each town gives 5 to your army size, increased by garrisons.\"));\r\n        this.dungeonIcons.push(new _ui_TooltipImage__WEBPACK_IMPORTED_MODULE_9__[\"TooltipImage\"](this, this.relativeX(15), this.relativeY(110), 16, 16,\r\n            { sprite: \"icons\", tile: 38 }, \"Tax Malus. Each soldier in your army added by garrisons increases your global tax malus. All tax income is reduced by this number.\"));\r\n        this.dungeonLabels = [];\r\n        for (var i = 0; i < this.dungeonIcons.length; i++) {\r\n            this.dungeonIcons[i].setVisible(false);\r\n        }\r\n        this.dungeonBlockDisplays = [];\r\n        this.dungeonBlockDisplays.push(new _ui_DungeonBlockDisplay__WEBPACK_IMPORTED_MODULE_14__[\"DungeonBlockDisplay\"](this, this.relativeX(260), this.relativeY(430)));\r\n        this.dungeonBlockDisplays.push(new _ui_DungeonBlockDisplay__WEBPACK_IMPORTED_MODULE_14__[\"DungeonBlockDisplay\"](this, this.relativeX(580), this.relativeY(430), true));\r\n        this.activeDungeonRooms = [];\r\n        this.dungeonsCompleteLabel = this.add.bitmapText(this.relativeX(550), this.relativeY(430), \"courier20\",\r\n            \"This land is now safe from the threat of the Dungeons.\\n\" +\r\n            \"Who knows who would have found that loot if you didn't send\\n\" +\r\n            \"wave after wave of villagers after it?\", 20, 1).setOrigin(0.5, 0);\r\n\r\n        this._updateStatus();\r\n        this._refreshTechs();\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().time.registerEvent(\"onDayEnd\", () => { this._endOfDay(); });\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().onRegionChanged(() => { this._updateStatus(); this._refreshTechs(); });\r\n    }\r\n    _setupRegionButton(idx, x, y) {\r\n        return new _ui_TextButton__WEBPACK_IMPORTED_MODULE_7__[\"TextButton\"](this, x, y, 27, 20, (idx + 1) + \"\").onClickHandler(() => {\r\n            _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().setCurrentRegion(idx);\r\n            this.scene.get(\"DarkWorld\").changeRegion();\r\n        });\r\n    }\r\n\r\n    _setupTechDisplay(x, y, tech, tier) {\r\n        return new _ui_TechDisplay__WEBPACK_IMPORTED_MODULE_4__[\"TechDisplay\"](this, x, y, tech, tier).registerClick(() => { this._handleTechUpgrade(tech); });\r\n    }\r\n\r\n    _setupDungeonDisplay(x, y, dungeon) {\r\n        return new _ui_DungeonDisplay__WEBPACK_IMPORTED_MODULE_8__[\"DungeonDisplay\"](this, x, y, dungeon, this.dungeonManager.combatActive === false)\r\n            .registerClick((props) => { this._handleDungeonClick(props); });\r\n    }\r\n\r\n    _handleTechUpgrade(tech) {\r\n        var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].instance.getCurrentRegion();\r\n        var gold = _data_TownData__WEBPACK_IMPORTED_MODULE_5__[\"TownData\"].getTechGoldCost(tech, region.townData.tier);\r\n        var resource = _data_TownData__WEBPACK_IMPORTED_MODULE_5__[\"TownData\"].getTechResourceCost(tech, region.townData.tier);\r\n        var resourceTier = Math.min(7, region.townData.resourceTier);\r\n        var player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"]();\r\n        if (player.gold >= gold && _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].canCraft(resource, player.resources[resourceTier]) === true &&\r\n            region.townData.friendshipLevel >= tech.level) {\r\n            // If we are spending friendship, we spend the current level of friendship needed. Level 0 requires no friendship,\r\n            // so don't calculate that here.\r\n            if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_10__[\"DynamicSettings\"].getInstance().spendFriendship === true && tech.level > 0) {\r\n                var friendshipCost = 25;\r\n                if (tech.level > 1) {\r\n                    friendshipCost = _data_TownData__WEBPACK_IMPORTED_MODULE_5__[\"TownData\"].calcFriendshipToLevel(tech.level) - _data_TownData__WEBPACK_IMPORTED_MODULE_5__[\"TownData\"].calcFriendshipToLevel(tech.level - 1);\r\n                }\r\n                region.townData.spendFriendship(friendshipCost);\r\n            }\r\n            player.addGold(-gold);\r\n            player.spendResource(resource, resourceTier);\r\n            region.townData.increaseTechLevel(tech);\r\n            this._updateStatus();\r\n            this._refreshTechs();\r\n        }\r\n    }\r\n\r\n    _toggleNightLabour() {\r\n        var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].instance.getCurrentRegion();\r\n        region.townData.toggleNightLabour();\r\n        if (region.townData.nightLabourActive === true) {\r\n            this.nightLabourBtn.setText(\"Night Labour: ON\");\r\n        } else {\r\n            this.nightLabourBtn.setText(\"Night Labour: OFF\");\r\n        }\r\n        this._updateStatus();\r\n    }\r\n\r\n    _toggleAutoUpgrade() {\r\n        var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].instance.getCurrentRegion();\r\n        region.townData.autoTownUpgrade = region.townData.autoTownUpgrade === true ? false : true;\r\n        if (region.townData.autoTownUpgrade === true) {\r\n            this.townUpgradeBtn.setText(\"Auto Upgrade: ON\");\r\n        } else {\r\n            this.townUpgradeBtn.setText(\"Auto Upgrade: OFF\");\r\n        }\r\n        this._updateStatus();\r\n    }\r\n\r\n    _selectTab(value) {\r\n        this.selectedTab = value;\r\n        this._refreshTechs();\r\n    }\r\n\r\n    _updateStatus() {\r\n        var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getCurrentRegion();\r\n        var player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_3__[\"PlayerData\"]();\r\n        var prodBonus = region.townData.getProductionMulti();\r\n\r\n        for (var i = 0; i < this.regionSelectElements.length; i++) {\r\n            this.regionSelectElements[i].destroy();\r\n        }\r\n        if (_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList.length > 1) {\r\n            this.regionSelectElements = [this.add.bitmapText(this.relativeX(10), this.relativeY(10), \"courier20\", \"Town:\")];\r\n            this.regionTabGroup = new _ui_HighlightElementGroup__WEBPACK_IMPORTED_MODULE_16__[\"HighlightElementGroup\"](Phaser.Display.Color.GetColor(255, 255, 0), Phaser.Display.Color.GetColor(0, 0, 0),\r\n                Phaser.Display.Color.GetColor(0, 0, 0), Phaser.Display.Color.GetColor(255, 255, 255));\r\n            for (var i = 0; i < _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList.length; i++) {\r\n                var x = this.relativeX(10 + (i % 8) * 27);\r\n                var y = this.relativeY(30 + Math.floor(i / 8) * 20);\r\n                var btn = this._setupRegionButton(i, x, y);\r\n                this.regionSelectElements.push(btn);\r\n                this.regionTabGroup.addElement(btn);\r\n            }\r\n            this.regionTabGroup._updateHighlights(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().currentRegion);\r\n        }\r\n\r\n        var nightLabourCost = 3.5 * region.townData.currentPopulation * _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().moonperks.nightlabour.level *\r\n            (region.townData.nightLabourActive === true ? 1 : 0);\r\n\r\n        var txt = \"Population: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(region.townData.currentPopulation)) +\r\n            \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.floor(region.townData.getMaxPopulation())) + \"\\n\" +\r\n            \"Tax Income: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(region.townData.getTownIncome() - nightLabourCost)) + \"g/week\\n\" +\r\n            \"T\" + region.townData.tier + \" Crafting Cost: \" + (Math.round(player.getCraftingCosts(region.townData.tier - 1) * 10000) / 100) + \"%\\n\" +\r\n            \"Economy: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(region.townData.getEconomyMulti() * 100)) + \"%\\n\" +\r\n            \"Production: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(prodBonus * 100)) + \"%\\n\" +\r\n            \"Bounty Gold: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(region.townData.bountyMulti * 100)) + \"%\\n\" +\r\n            \"Friendship: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.floor(region.townData.friendship)) +\r\n            \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(region.townData.friendshipToNext) + \"\\n\" +\r\n            \"Friendship\\nLevel: \" + region.townData.friendshipLevel + \" (+\" +\r\n            _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round((region.townData.getFriendshipBonus() - 1) * 100)) + \"% Shade)\\n\" +\r\n            \"Daily Production:\\n\";\r\n\r\n        var resources = region._getResourcesPerDay();\r\n        for (var i = 0; i < resources.length; i++) {\r\n            if (resources[i] > 100) {\r\n                txt += \" \" + _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.floor(resources[i])) + \"\\n\";\r\n            } else {\r\n                txt += \" \" + _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + (Math.floor(resources[i] * 100) / 100) + \"\\n\";\r\n            }\r\n        }\r\n        if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().moonperks.shadow3.level > 0) {\r\n            var shadow = region.townData.currentPopulation * 0.75 * _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().moonperks.shadow3.level *\r\n                _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().getShadowBonus() * region.townData.getProductionMulti();\r\n            txt += \"Shade: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(Math.round(shadow)) + \"\\n\";\r\n        }\r\n        if (region.alchemyDrain > 0) {\r\n            txt += \"  Alchemy Drain: \" + region.alchemyDrain + \"\\n\" +\r\n                \"  Alchemy Gain: \" + Math.round(region.alchemyGain * 100) / 100;\r\n        }\r\n\r\n        this.statsLabel.setText(txt);\r\n        this.regionNameLabel.setText(\"Region \" + (region.regionLevel + 1));\r\n        var h = this.statsLabel.getTextBounds().local.height + 160;\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_12__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true) {\r\n            for (var i = 0; i < this.dungeonLabels.length; i++) {\r\n                this.dungeonLabels[i].destroy();\r\n            }\r\n            for (var i = 0; i < this.dungeonIcons.length; i++) {\r\n                this.dungeonIcons[i].setVisible(true);\r\n            }\r\n            this.dungeonLabels = [];\r\n            this.dungeonIcons[0].setPosition(this.relativeX(10), this.relativeY(h));\r\n            this.dungeonLabels.push(this.add.bitmapText(this.relativeX(30), this.relativeY(h), \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getVillagerPower())));\r\n            h += 20;\r\n            this.dungeonIcons[1].setPosition(this.relativeX(10), this.relativeY(h));\r\n            this.dungeonLabels.push(this.add.bitmapText(this.relativeX(30), this.relativeY(h), \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getVillagerHealth())));\r\n            h += 20;\r\n            this.dungeonIcons[2].setPosition(this.relativeX(10), this.relativeY(h));\r\n            this.dungeonLabels.push(this.add.bitmapText(this.relativeX(30), this.relativeY(h), \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getArmySize()) + \"/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getArmySizeMax())));\r\n            h += 20;\r\n            var tax = 1 - _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getArmyTaxMulti();\r\n            this.dungeonIcons[3].setPosition(this.relativeX(10), this.relativeY(h));\r\n            this.dungeonLabels.push(this.add.bitmapText(this.relativeX(30), this.relativeY(h), \"courier16\",\r\n                (Math.round(tax * 1000) / 10) + \"%\"));\r\n            if (tax > 0) {\r\n                this.dungeonLabels[this.dungeonLabels.length - 1].setTint(Phaser.Display.Color.GetColor(255, 40, 40));\r\n            }\r\n            h += 30;\r\n        }\r\n\r\n        if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().moonperks.nightlabour.level > 0) {\r\n            this.nightLabourBtn.setPosition(this.relativeX(15), this.relativeY(h));\r\n            h += 30;\r\n            this.nightLabourBtn.setVisible(true);\r\n            if (region.townData.nightLabourActive === true) {\r\n                this.nightLabourBtn.setText(\"Night Labour: ON\");\r\n            } else {\r\n                this.nightLabourBtn.setText(\"Night Labour: OFF\");\r\n            }\r\n        }\r\n\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_12__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoTown === true) {\r\n            this.townUpgradeBtn.setPosition(this.relativeX(15), this.relativeY(h));\r\n            h += 30;\r\n            this.townUpgradeBtn.setVisible(true);\r\n            if (region.townData.autoTownUpgrade === true) {\r\n                this.townUpgradeBtn.setText(\"Auto Upgrade: ON\");\r\n            } else {\r\n                this.townUpgradeBtn.setText(\"Auto Upgrade: OFF\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _refreshTechs() {\r\n        var region = _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].instance.getCurrentRegion();\r\n        this.dungeonsBtn.setVisible(region.townData.dungeons.length > 0);\r\n        this.dungeonsCompleteLabel.setVisible(false);\r\n\r\n        for (var i = 0; i < this.buildingDisplays.length; i++) {\r\n            this.buildingDisplays[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.activeDungeonRooms.length; i++) {\r\n            this.activeDungeonRooms[i].setVisible(false);\r\n        }\r\n        for (var i = 0; i < this.dungeonBlockDisplays.length; i++) {\r\n            this.dungeonBlockDisplays[i].setVisible(false);\r\n        }\r\n        if (this.selectedTab === 0) {\r\n            var idx = 0;\r\n            for (const prop in region.townData.buildings) {\r\n                this.buildingDisplays.push(this._setupTechDisplay(this.relativeX(240), this.relativeY(50 + idx * 120),\r\n                    region.townData.buildings[prop], region.townData.tier));\r\n                idx += 1;\r\n            }\r\n        } else if (this.selectedTab === 1) {\r\n            var idx = 0;\r\n            for (const prop in region.townData.upgrades) {\r\n                this.buildingDisplays.push(this._setupTechDisplay(this.relativeX(240), this.relativeY(50 + idx * 120),\r\n                    region.townData.upgrades[prop], region.townData.tier));\r\n                idx += 1;\r\n            }\r\n        } else if (this.selectedTab === 2) {\r\n            for (var i = 0; i < region.townData.dungeons.length; i++) {\r\n                this.buildingDisplays.push(this._setupDungeonDisplay(this.relativeX(240), this.relativeY(50 + i * 120),\r\n                    region.townData.dungeons[i]));\r\n            }\r\n            for (var i = 0; i < this.activeDungeonRooms.length; i++) {\r\n                this.activeDungeonRooms[i].setVisible(this.dungeonManager.combatActive);\r\n            }\r\n            for (var i = 0; i < this.dungeonBlockDisplays.length; i++) {\r\n                this.dungeonBlockDisplays[i].setVisible(this.dungeonManager.combatActive);\r\n            }\r\n            this.dungeonsCompleteLabel.setVisible(this.dungeonManager.combatActive === false && region.townData.areDungeonsComplete() === true);\r\n        }\r\n    }\r\n\r\n    _endOfDay() {\r\n        this._updateStatus();\r\n        this._refreshTechs();\r\n    }\r\n\r\n\r\n    update(__time, __delta) {\r\n        for (var i = 0; i < _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().time.fskip; i++) {\r\n            this.dungeonManager.update(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().time.frameDelta);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/TownScene.js?");

/***/ }),

/***/ "./src/scenes/WorldScene.js":
/*!**********************************!*\
  !*** ./src/scenes/WorldScene.js ***!
  \**********************************/
/*! exports provided: WorldScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorldScene\", function() { return WorldScene; });\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ui/TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _RitualView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RitualView */ \"./src/scenes/RitualView.js\");\n/* harmony import */ var _SceneUIBase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SceneUIBase */ \"./src/scenes/SceneUIBase.js\");\n/* harmony import */ var _WorldView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WorldView */ \"./src/scenes/WorldView.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass WorldScene extends _SceneUIBase__WEBPACK_IMPORTED_MODULE_3__[\"SceneUIBase\"] {\r\n    constructor(position, name) {\r\n        super(position, name);\r\n\r\n        this.worldView = new _WorldView__WEBPACK_IMPORTED_MODULE_4__[\"WorldView\"](this, this.relativeX(0), this.relativeY(0));\r\n        this.ritualView = new _RitualView__WEBPACK_IMPORTED_MODULE_2__[\"RitualView\"](this, this.relativeX(0), this.relativeY(0));\r\n        this.activeView = 0;\r\n    }\r\n\r\n    refreshButtons() {\r\n        var vis = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_0__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals;\r\n        this.worldBtn.setVisible(vis);\r\n        this.ritualBtn.setVisible(vis);\r\n    }\r\n\r\n    refresh() {\r\n        if (this.activeView === 0) {\r\n            this.worldView._refreshRegions();\r\n        }\r\n    }\r\n\r\n    rebirth() {\r\n        this.ritualView._refreshRituals();\r\n        this.ritualView._refreshSacrificeLabels();\r\n        this.ritualView._refreshBonuses();\r\n        this.refreshButtons();\r\n        this._changeView(0);\r\n        this.worldView._onInvasionPowerChanged();\r\n    }\r\n\r\n    create() {\r\n        this.worldView.create();\r\n        this.ritualView.create();\r\n        this.ritualView.setVisible(false);\r\n\r\n        this.worldBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(20), this.relativeY(10), 100, 20, \"World Map\")\r\n            .onClickHandler(() => { this._changeView(0); });\r\n        this.ritualBtn = new _ui_TextButton__WEBPACK_IMPORTED_MODULE_1__[\"TextButton\"](this, this.relativeX(130), this.relativeY(10), 100, 20, \"Rituals\")\r\n            .onClickHandler(() => { this._changeView(1); });\r\n\r\n        this.refreshButtons();\r\n    }\r\n\r\n    _changeView(id) {\r\n        if (id === 0) {\r\n            this.worldView._refreshRegions();\r\n            this.worldView.setVisible(true);\r\n            this.ritualView.setVisible(false);\r\n        } else {\r\n            this.worldView.setVisible(false);\r\n            this.ritualView.setVisible(true);\r\n        }\r\n        this.activeView = id;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/WorldScene.js?");

/***/ }),

/***/ "./src/scenes/WorldView.js":
/*!*********************************!*\
  !*** ./src/scenes/WorldView.js ***!
  \*********************************/
/*! exports provided: WorldView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorldView\", function() { return WorldView; });\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _ui_NewRegionWindow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/NewRegionWindow */ \"./src/ui/NewRegionWindow.js\");\n/* harmony import */ var _ui_RegionButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/RegionButton */ \"./src/ui/RegionButton.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass WorldView {\r\n    constructor(scene, x, y) {\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.regionIcons = [];\r\n        this.regionPaths = [];\r\n        this.elements = [];\r\n\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().registerEvent('invasionPowerChanged', () => { this._onInvasionPowerChanged(); });\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().onWorldChanged(() => { this._refreshRegions(); });\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().registerEvent(\"onTalentChanged\", () => { this._onInvasionPowerChanged(); });\r\n    }\r\n\r\n    refresh() {\r\n        this._refreshRegions();\r\n    }\r\n\r\n    rebirth() {\r\n        this._refreshRegions();\r\n        this._onInvasionPowerChanged();\r\n    }\r\n\r\n    create() {\r\n        //background\r\n        this.backRect = this.scene.add.rectangle(this.x, this.y, 900, 700, 0x000000)\r\n            .setOrigin(0)\r\n            .setInteractive();\r\n        this.regionSelectWindow = undefined;\r\n\r\n        this.invasionPowerLabel = this.scene.add.bitmapText(this.x + 300, this.y + 30, \"courier20\",\r\n            \"Invasion Power\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.floor(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().invasionPower * 100)) + \"%\", 20, 1);\r\n        this.invasionPowerLabel.setTint(Phaser.Display.Color.GetColor(255, 128, 255));\r\n        this.invasionRewardLabel = this.scene.add.bitmapText(this.x + 600, this.y + 30, \"courier20\",\r\n            \"Invasion Reward\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.floor(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().invasionReward * 100)) + \"%\", 20, 1);\r\n        this.invasionRewardLabel.setTint(Phaser.Display.Color.GetColor(255, 0, 255));\r\n        this._refreshRegions();\r\n\r\n    }\r\n\r\n    _onInvasionPowerChanged() {\r\n        this.invasionPowerLabel.setText(\"Invasion Power\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.floor(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().getInvasionPower() * 100)) + \"%\");\r\n        this.invasionRewardLabel.setText(\"Invasion Reward\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.floor(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().invasionReward * 100)) + \"%\");\r\n    }\r\n\r\n    _selectNewRegion(idx) {\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().addRegion(idx);\r\n        this._refreshRegions();\r\n        this._closeRegionSelectWindow();\r\n        this._selectRegion(_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList.length - 1);\r\n    }\r\n\r\n    _showRegionSelectWindow() {\r\n        this._closeRegionSelectWindow();\r\n        this.regionSelectWindow = new _ui_NewRegionWindow__WEBPACK_IMPORTED_MODULE_2__[\"NewRegionWindow\"](this.scene, this.x + 100, this.y + 50, _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().nextRegions)\r\n            .onSelectHandler((x) => { this._selectNewRegion(x); })\r\n            .onCancelHandler(() => { this._closeRegionSelectWindow(); });\r\n    }\r\n    _closeRegionSelectWindow() {\r\n        if (this.regionSelectWindow !== undefined) {\r\n            this.regionSelectWindow.destroy();\r\n        }\r\n        this.regionSelectWindow = undefined;\r\n    }\r\n\r\n    _setupRegionTile(x, y, region, index) {\r\n        this.regionIcons.push(new _ui_RegionButton__WEBPACK_IMPORTED_MODULE_3__[\"RegionButton\"](this.scene, x, y, region)\r\n            .onClickHandler(() => { this._selectRegion(index); }));\r\n    }\r\n\r\n    _setupRegionSelect(x, y) {\r\n        this.regionIcons.push(new _ui_RegionButton__WEBPACK_IMPORTED_MODULE_3__[\"RegionButton\"](this.scene, x, y, undefined)\r\n            .onClickHandler(() => { this._showRegionSelectWindow(); }));\r\n    }\r\n\r\n    _refreshRegions() {\r\n        for (var i = 0; i < this.regionIcons.length; i++) {\r\n            this.regionIcons[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.regionPaths.length; i++) {\r\n            this.regionPaths[i].destroy();\r\n        }\r\n        this.regionIcons = [];\r\n        this.regionPaths = [];\r\n        var regionPositions = [];\r\n        for (var i = 0; i < _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList.length + (_data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().nextRegions.length > 0 ? 1 : 0); i++) {\r\n            var x = 120 + Math.floor(i / 4) * 128;\r\n            var goUp = Math.floor(i / 4) % 2 === 1;\r\n            var y = (goUp === false ? 150 + (i % 4) * 128 : 534 - (i % 4) * 128);\r\n            regionPositions.push([this.x + x, this.y + y]);\r\n        }\r\n\r\n        for (var i = 0; i < regionPositions.length - 1; i++) {\r\n            this.regionPaths.push(this.scene.add.line(0, 0, regionPositions[i][0], regionPositions[i][1],\r\n                regionPositions[i + 1][0], regionPositions[i + 1][1], Phaser.Display.Color.GetColor(255, 0, 0)).setOrigin(0).setLineWidth(4));\r\n        }\r\n        for (var i = 0; i < regionPositions.length; i++) {\r\n            if (i >= _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList.length) {\r\n                this._setupRegionSelect(regionPositions[i][0] - 48, regionPositions[i][1] - 48);\r\n            } else {\r\n                this._setupRegionTile(regionPositions[i][0] - 48, regionPositions[i][1] - 48, _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().regionList[i], i);\r\n            }\r\n        }\r\n\r\n        this.elements = this.elements.concat(this.regionIcons, this.regionPaths);\r\n        this.elements.push(this.backRect, this.invasionPowerLabel, this.invasionRewardLabel);\r\n    }\r\n\r\n    _selectRegion(index) {\r\n        _data_WorldData__WEBPACK_IMPORTED_MODULE_1__[\"WorldData\"].getInstance().setCurrentRegion(index);\r\n        this.scene.scene.get(\"DarkWorld\").changeRegion();\r\n        this.scene.scene.get(\"RegionScene\").changeRegion();\r\n        this.scene.scene.get(\"TownScene\").changeRegion();\r\n        this.scene.scene.bringToTop(\"RegionScene\");\r\n        this.scene.scene.bringToTop(\"DarKWorld\");\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].setVisible(visible);\r\n        }\r\n\r\n        if (visible === false) {\r\n            this._closeRegionSelectWindow();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/scenes/WorldView.js?");

/***/ }),

/***/ "./src/ui/ActiveChallengeDialog.js":
/*!*****************************************!*\
  !*** ./src/ui/ActiveChallengeDialog.js ***!
  \*****************************************/
/*! exports provided: ActiveChallengeDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveChallengeDialog\", function() { return ActiveChallengeDialog; });\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_WorldTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/WorldTime */ \"./src/data/WorldTime.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ActiveChallengeDialog {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 700, 500, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 4;\r\n\r\n        this.title = scene.add.bitmapText(x + 350, y + 5, \"courier20\", _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().challengeName).setOrigin(0.5, 0);\r\n\r\n        var runTime = _data_WorldData__WEBPACK_IMPORTED_MODULE_4__[\"WorldData\"].getInstance().time.time - _data_WorldData__WEBPACK_IMPORTED_MODULE_4__[\"WorldData\"].getInstance().timeAtRunStart;\r\n        var txt = _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getChallengeDescription(_data_MoonlightData__WEBPACK_IMPORTED_MODULE_5__[\"MoonlightData\"].getInstance().getChallengeFromName(_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_3__[\"DynamicSettings\"].getInstance().challengeName));\r\n        txt += \"\\nCurrent Run Time: \" + new _data_WorldTime__WEBPACK_IMPORTED_MODULE_2__[\"WorldTime\"](runTime).getTimespanText() + \"\\n\\n\" +\r\n            \"You may abandon this challenge, causing you to gate immediately. You will not get any Moonlight for this run if you abandon.\";\r\n        this.desc = scene.add.bitmapText(x + 10, y + 30, \"courier20\", _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].processText(txt, 70)).setOrigin(0);\r\n\r\n\r\n        this.abandonBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](scene, x + 225, y + 450, 120, 20, \"Abandon\");\r\n        this.cancelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](scene, x + 355, y + 450, 120, 20, \"Cancel\");\r\n    }\r\n\r\n    onAbandonHandler(callback) {\r\n        this.abandonBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n    onCancelHandler(callback) {\r\n        this.cancelBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.title.destroy();\r\n        this.abandonBtn.destroy();\r\n        this.cancelBtn.destroy();\r\n        this.desc.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ActiveChallengeDialog.js?");

/***/ }),

/***/ "./src/ui/ChallengeWindow.js":
/*!***********************************!*\
  !*** ./src/ui/ChallengeWindow.js ***!
  \***********************************/
/*! exports provided: ChallengeWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChallengeWindow\", function() { return ChallengeWindow; });\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n\r\n\r\n\r\n\r\n\r\nclass ChallengeWindow {\r\n    constructor(scene, x, y, runActive) {\r\n        this.backingRect = scene.add.rectangle(x, y, 800, 600, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 4;\r\n        this.runActive = runActive;\r\n\r\n        this.title = scene.add.bitmapText(x + 400, y + 5, \"courier20\", \"CHALLENGES\").setOrigin(0.5, 0);\r\n\r\n        this.challengeBtns = [];\r\n        var idx = 0;\r\n        for (const prop in _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].instance.challenges) {\r\n            this.challengeBtns.push(this._setupChallengeButton(scene, _data_MoonlightData__WEBPACK_IMPORTED_MODULE_1__[\"MoonlightData\"].instance.challenges[prop],\r\n                x + 10, y + 30 + (idx * 25)));\r\n            idx += 1;\r\n        }\r\n\r\n\r\n        this.challengeBox = scene.add.bitmapText(x + 220, y + 30, \"courier20\", \"\");\r\n\r\n        this.acceptBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x + 275, y + 550, 120, 20, \"Accept\");\r\n        this.acceptBtn.setEnable(false);\r\n        this.cancelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x + 405, y + 550, 120, 20, \"Cancel\");\r\n\r\n        this.selectedChallenge = undefined;\r\n    }\r\n\r\n    onAcceptHandler(callback) {\r\n        this.acceptBtn.onClickHandler(() => { callback(this.selectedChallenge); });\r\n        return this;\r\n    }\r\n    onCancelHandler(callback) {\r\n        this.cancelBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n\r\n    _setupChallengeButton(scene, challenge, x, y) {\r\n        var btn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x, y, 190, 20, challenge.unlocked ? challenge.name : \"Locked\")\r\n            .onClickHandler(() => { this._challengeClickHandler(challenge); });\r\n\r\n        btn.setEnable(challenge.unlocked);\r\n        return btn;\r\n    }\r\n\r\n    _challengeClickHandler(challenge) {\r\n        var txt = this.runActive === true ? \"\\n\\nAccepting Will Reset your current run, earning you no Moonlight.\" : \"\";\r\n        this.challengeBox.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(_data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_3__[\"TooltipRegistry\"].getChallengeDescription(challenge) + txt, 57));\r\n        this.selectedChallenge = challenge;\r\n        this.acceptBtn.setEnable(challenge.completions < challenge.maxCompletions);\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.title.destroy();\r\n        this.acceptBtn.destroy();\r\n        this.cancelBtn.destroy();\r\n        this.challengeBox.destroy();\r\n        for (var i = 0; i < this.challengeBtns.length; i++) {\r\n            this.challengeBtns[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ChallengeWindow.js?");

/***/ }),

/***/ "./src/ui/ClassSelectWindow.js":
/*!*************************************!*\
  !*** ./src/ui/ClassSelectWindow.js ***!
  \*************************************/
/*! exports provided: ClassSelectWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClassSelectWindow\", function() { return ClassSelectWindow; });\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass ClassSelectWindow {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 780, 600, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive().setDepth(998);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 4;\r\n        this.scene = scene;\r\n\r\n        this.title = scene.add.bitmapText(x + 390, y + 10, \"courier20\", \"CHOOSE YOUR CLASS\", 20, 1).setOrigin(0.5, 0).setDepth(999);\r\n        // this.title.setTint(Phaser.Display.Color.GetColor(96, 172, 177));\r\n\r\n        this.dividers = [];\r\n        this.dividers.push(scene.add.line(0, 0, x + 390, y + 60, x + 390, y + 540,\r\n            Phaser.Display.Color.GetColor(255, 255, 255)).setOrigin(0).setLineWidth(1).setDepth(999));\r\n\r\n        this.choiceBtns = [];\r\n        this.uiElements = [];\r\n\r\n        this._renderAdventurer(x + 0, y + 65);\r\n        this._renderWizard(x + 390, y + 65);\r\n    }\r\n\r\n    _renderAdventurer(x, y) {\r\n        this.uiElements.push(this.scene.add.bitmapText(x + 195, y, \"courier20\", \"Adventurer\").setOrigin(0.5, 0).setDepth(999));\r\n        var txt = \"- All around balanced class\\n\" +\r\n            \"- No weaknesses or strengths\";\r\n        this.uiElements.push(this.scene.add.bitmapText(x + 10, y + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(txt, 46)).setDepth(999));\r\n\r\n        this.choiceBtns.push(new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](this.scene, x + 135, y + 435, 120, 20, \"SELECT\", 999));\r\n    }\r\n    _renderWizard(x, y) {\r\n\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_0__[\"ProgressionStore\"].getInstance().persistentUnlocks.wizardClass === true) {\r\n\r\n            this.uiElements.push(this.scene.add.bitmapText(x + 195, y, \"courier20\", \"Wizard\").setOrigin(0.5, 0).setDepth(999));\r\n            var txt = \"- Spellcasting, Talent based class\\n\" +\r\n                \"- Weaker Strength, Agility, and Endurance\\n\" +\r\n                \"- Defense and Accuracy stats replaced with Ward and Power\\n\" +\r\n                \"- Power increases your Spell Power\\n\" +\r\n                \"- Starts combat with a Shield based on your Ward\\n\" +\r\n                \"- Learns spells that deal Magic damage based on your Spell Power\\n\" +\r\n                \"- Magic damage ignores 90% of armor, but deals half damage to shields\\n\" +\r\n                \"- Can't crit, instead Crit Chance multiplies Spell Power\";\r\n            this.uiElements.push(this.scene.add.bitmapText(x + 10, y + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(txt, 46)).setDepth(999));\r\n\r\n            this.choiceBtns.push(new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](this.scene, x + 135, y + 435, 120, 20, \"SELECT\", 999));\r\n        } else {\r\n            this.uiElements.push(this.scene.add.bitmapText(x + 195, y, \"courier20\", \"???\").setOrigin(0.5, 0).setDepth(999));\r\n            var txt = \"This class is a mystery to you. Get a whole bunch of talents in a single run to unlock.\";\r\n            var label = this.scene.add.bitmapText(x + 195, y + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(txt, 46)).setOrigin(0.5, 0).setDepth(999);\r\n            label.setTint(Phaser.Display.Color.GetColor(200, 200, 200));\r\n            this.uiElements.push(label);\r\n\r\n            var btn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](this.scene, x + 135, y + 435, 120, 20, \"SELECT\", 999);\r\n            btn.setEnable(false);\r\n            this.choiceBtns.push(btn);\r\n        }\r\n    }\r\n\r\n    onSelectHandler(callback) {\r\n        this.choiceBtns[0].onClickHandler(() => { callback(_data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].CLASS_ADVENTURER); });\r\n        this.choiceBtns[1].onClickHandler(() => { callback(_data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].CLASS_WIZARD); });\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.title.destroy();\r\n        for (var i = 0; i < this.dividers.length; i++) {\r\n            this.dividers[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.uiElements.length; i++) {\r\n            this.uiElements[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.choiceBtns.length; i++) {\r\n            this.choiceBtns[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ClassSelectWindow.js?");

/***/ }),

/***/ "./src/ui/CreatureDisplay.js":
/*!***********************************!*\
  !*** ./src/ui/CreatureDisplay.js ***!
  \***********************************/
/*! exports provided: CreatureDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreatureDisplay\", function() { return CreatureDisplay; });\n/* harmony import */ var _ProgressBar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProgressBar */ \"./src/ui/ProgressBar.js\");\n/* harmony import */ var _TooltipImage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TooltipImage */ \"./src/ui/TooltipImage.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass CreatureDisplay {\r\n    constructor(sceneContext, x, y) {\r\n        //total size is 200x170\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.sceneContext = sceneContext;\r\n\r\n        this.backingRect = sceneContext.add.rectangle(x, y, 250, 170, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n        this.backingRect.lineWidth = 2;\r\n        // to replace with image\r\n        this.imageRect = sceneContext.add.rectangle(x + 5, y + 5, 64, 64, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        this.imageRect.isStroked = true;\r\n        this.imageRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n        this.imageRect.lineWidth = 2;\r\n        this.image = sceneContext.add.image(x + 5, y + 5, \"enemyicons\", 63).setOrigin(0);\r\n        this.image.displayWidth = 64;\r\n        this.image.displayHeight = 64;\r\n\r\n        this.nameLabel = sceneContext.add.bitmapText(x + 75, y + 5, \"courier20\", \"\");\r\n        this.statIcons = [];\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 75, this.y + 25, 16, 16,\r\n            { sprite: \"icons\", tile: 24 }, \"Damage dealt with each attack.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 75, this.y + 45, 16, 16,\r\n            { sprite: \"icons\", tile: 26 }, \"How much damage is prevented.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 75, this.y + 65, 16, 16,\r\n            { sprite: \"icons\", tile: 27 }, \"How quickly this creature attacks.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 75, this.y + 85, 16, 16,\r\n            { sprite: \"icons\", tile: 28 }, \"How hard it is to hit this creature.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 75, this.y + 105, 16, 16,\r\n            { sprite: \"icons\", tile: 48 }, \"How resistant this creature is to critical hits.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 155, this.y + 45, 16, 16,\r\n            { sprite: \"icons\", tile: 29 }, \"How much health this creature regenerates per second.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 155, this.y + 65, 16, 16,\r\n            { sprite: \"icons\", tile: 31 }, \"How often this creature critically hits.\"));\r\n        this.statIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 155, this.y + 85, 16, 16,\r\n            { sprite: \"icons\", tile: 30 }, \"How powerful this creatures critical hits are.\"));\r\n        this.damageLabel = sceneContext.add.bitmapText(x + 95, y + 25, \"courier16\", \"\");\r\n        this.armorLabel = sceneContext.add.bitmapText(x + 95, y + 45, \"courier16\", \"\");\r\n        this.hitnameLabel = sceneContext.add.bitmapText(x + 95, y + 65, \"courier16\", \"\");\r\n        this.evasionLabel = sceneContext.add.bitmapText(x + 95, y + 85, \"courier16\", \"\");\r\n        this.critResLabel = sceneContext.add.bitmapText(x + 95, y + 105, \"courier16\", \"\");\r\n        this.regenLabel = sceneContext.add.bitmapText(x + 175, y + 45, \"courier16\", \"\");\r\n        this.critLabel = sceneContext.add.bitmapText(x + 175, y + 65, \"courier16\", \"\");\r\n        this.critPowLabel = sceneContext.add.bitmapText(x + 175, y + 85, \"courier16\", \"\");\r\n\r\n        this.healthBar = new _ProgressBar__WEBPACK_IMPORTED_MODULE_0__[\"ProgressBar\"](sceneContext, x + 5, y + 125, 240, 14,\r\n            Phaser.Display.Color.GetColor(170, 0, 0), Phaser.Display.Color.GetColor(32, 32, 32));\r\n        this.attackBar = new _ProgressBar__WEBPACK_IMPORTED_MODULE_0__[\"ProgressBar\"](sceneContext, x + 5, y + 145, 240, 14,\r\n            Phaser.Display.Color.GetColor(0, 140, 40), Phaser.Display.Color.GetColor(32, 32, 32));\r\n        this.traitButtons = [];\r\n    }\r\n\r\n    initWithCreature(creature) {\r\n        this.nameLabel.setText(creature.name);\r\n        this.damageLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.DamageMin())) + \"-\" + _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.DamageMax())));\r\n        this.armorLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.Armor())));\r\n        this.hitnameLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.Hit())));\r\n        this.evasionLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.Evasion())));\r\n        this.critResLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.Toughness())));\r\n        this.regenLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.HealthRegen())) + \"/s\");\r\n        this.critLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.CritChance() * 100)) + \"%\");\r\n        this.critPowLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.floor(creature.Aim())));\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n\r\n        var fillTxt = \"\";\r\n        if (creature.shieldValue > 0) {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.ceil(creature.currentHealth)) + \"+(\" + _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.ceil(creature.shieldValue)) + \")/\" +\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(creature.MaxHealth());\r\n            this.setShieldBar(creature.shieldValue / creature.MaxHealth());\r\n        } else {\r\n            fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(Math.ceil(creature.currentHealth)) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].numberString(creature.MaxHealth())\r\n        }\r\n        this.healthBar.setFillPercent(creature.currentHealth / creature.MaxHealth(), fillTxt);\r\n        this.attackBar.setFillPercent(creature.attackCooldown / creature.attackSpeed,\r\n            Math.floor(creature.attackCooldown / creature.attackSpeed * 100) + \"%\");\r\n        this.image.setTexture(creature.icon.sprite, creature.icon.tile);\r\n\r\n        for (var i = 0; i < this.traitButtons.length; i++) {\r\n            this.traitButtons[i].destroy();\r\n        }\r\n        this.traitButtons = [];\r\n        for (var i = 0; i < creature.traits.length; i++) {\r\n            var sprite = _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_3__[\"TooltipRegistry\"].getTraitImage(creature.traits[i]);\r\n            var ix = i % 3;\r\n            var iy = Math.floor(i / 3);\r\n            this.traitButtons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_1__[\"TooltipImage\"](this.sceneContext, this.x + 5 + (ix * 20), this.y + 75 + iy * 20,\r\n                16, 16, sprite, _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_3__[\"TooltipRegistry\"].getTraitTooltip(creature.traits[i])));\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.backingRect.setVisible(visible);\r\n        this.imageRect.setVisible(visible);\r\n        this.image.setVisible(visible);\r\n        this.nameLabel.setVisible(visible);\r\n        this.damageLabel.setVisible(visible);\r\n        this.armorLabel.setVisible(visible);\r\n        this.hitnameLabel.setVisible(visible);\r\n        this.evasionLabel.setVisible(visible);\r\n        this.critPowLabel.setVisible(visible);\r\n        this.regenLabel.setVisible(visible);\r\n        this.critLabel.setVisible(visible);\r\n        this.critResLabel.setVisible(visible);\r\n        this.healthBar.setVisible(visible);\r\n        this.attackBar.setVisible(visible);\r\n        for (var i = 0; i < this.traitButtons.length; i++) {\r\n            this.traitButtons[i].setVisible(visible);\r\n        }\r\n        for (var i = 0; i < this.statIcons.length; i++) {\r\n            this.statIcons[i].setVisible(visible);\r\n        }\r\n    }\r\n\r\n    setHealthBar(healthPercent, text = \"\") {\r\n        this.healthBar.setFillPercent(healthPercent, text);\r\n    }\r\n    setShieldBar(shieldPercent) {\r\n        this.healthBar.setSecondaryFillPercent(shieldPercent);\r\n    }\r\n\r\n    setAttackBar(attackPercent, text = \"\") {\r\n        this.attackBar.setFillPercent(attackPercent, text);\r\n    }\r\n\r\n    setInvader() {\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 200);\r\n    }\r\n\r\n    getCenterX() { return this.x + 125; }\r\n    getCenterY() { return this.y + 85; }\r\n}\n\n//# sourceURL=webpack:///./src/ui/CreatureDisplay.js?");

/***/ }),

/***/ "./src/ui/DungeonBlockDisplay.js":
/*!***************************************!*\
  !*** ./src/ui/DungeonBlockDisplay.js ***!
  \***************************************/
/*! exports provided: DungeonBlockDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DungeonBlockDisplay\", function() { return DungeonBlockDisplay; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _ProgressBar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ProgressBar */ \"./src/ui/ProgressBar.js\");\n/* harmony import */ var _TooltipImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TooltipImage */ \"./src/ui/TooltipImage.js\");\n\r\n\r\n\r\n\r\nclass DungeonBlockDisplay {\r\n    constructor(sceneContext, x, y, rightAligned = false) {\r\n        //total size is 300x180\r\n        this.x = x;\r\n        this.y = y;\r\n        this.sceneContext = sceneContext;\r\n\r\n        // this.backingRect = sceneContext.add.rectangle(x, y, 300, 180, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        // this.backingRect.isStroked = true;\r\n        // this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n        // this.backingRect.lineWidth = 2;\r\n\r\n        if (rightAligned === true) {\r\n            this.imageRect = sceneContext.add.rectangle(x + 231, y + 25, 64, 64, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n            this.imageRect.isStroked = true;\r\n            this.imageRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n            this.imageRect.lineWidth = 2;\r\n            this.image = sceneContext.add.image(x + 231, y + 25, \"enemyicons\", 63).setOrigin(0);\r\n            this.image.displayWidth = 64;\r\n            this.image.displayHeight = 64;\r\n\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 295, y + 5, \"courier20\", \"\").setOrigin(1, 0);\r\n            this.powerLabel = sceneContext.add.bitmapText(x + 205, y + 25, \"courier16\", \"\").setOrigin(1, 0);\r\n            this.healthLabel = sceneContext.add.bitmapText(x + 205, y + 45, \"courier16\", \"\").setOrigin(1, 0);\r\n            this.armyLabel = sceneContext.add.bitmapText(x + 205, y + 65, \"courier16\", \"\").setOrigin(1, 0);\r\n\r\n            this.icons = []\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 210, y + 25, 16, 16, { sprite: \"icons\", tile: 24 },\r\n                \"Power. How much damage each creature deals with their attack.\"));\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 210, y + 45, 16, 16, { sprite: \"icons\", tile: 26 },\r\n                \"Health. How much damage a creature can take before dying.\"));\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 210, y + 65, 16, 16, { sprite: \"icons\", tile: 60 },\r\n                \"Army Size. How many creatures are fighting in this group. Health and Power are multiplied by this value.\"));\r\n        } else {\r\n            this.imageRect = sceneContext.add.rectangle(x + 5, y + 25, 64, 64, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n            this.imageRect.isStroked = true;\r\n            this.imageRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 0);\r\n            this.imageRect.lineWidth = 2;\r\n            this.image = sceneContext.add.image(x + 5, y + 25, \"enemyicons\", 63).setOrigin(0);\r\n            this.image.displayWidth = 64;\r\n            this.image.displayHeight = 64;\r\n\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", \"\");\r\n            this.powerLabel = sceneContext.add.bitmapText(x + 95, y + 25, \"courier16\", \"\");\r\n            this.healthLabel = sceneContext.add.bitmapText(x + 95, y + 45, \"courier16\", \"\");\r\n            this.armyLabel = sceneContext.add.bitmapText(x + 95, y + 65, \"courier16\", \"\");\r\n\r\n            this.icons = []\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 75, y + 25, 16, 16, { sprite: \"icons\", tile: 24 },\r\n                \"Power. How much damage the army deals with their attack.\"));\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 75, y + 45, 16, 16, { sprite: \"icons\", tile: 26 },\r\n                \"Health. How much damage the army can take before dying.\"));\r\n            this.icons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](sceneContext, x + 75, y + 65, 16, 16, { sprite: \"icons\", tile: 60 },\r\n                \"Army Size. How many creatures are fighting in this group. Health and Power are multiplied by this value.\"));\r\n        }\r\n\r\n\r\n        this.healthBar = new _ProgressBar__WEBPACK_IMPORTED_MODULE_1__[\"ProgressBar\"](sceneContext, x + 5, y + 125, 290, 14,\r\n            Phaser.Display.Color.GetColor(170, 0, 0), Phaser.Display.Color.GetColor(32, 32, 32));\r\n    }\r\n    setArmyStats(power, health, armySize, armyDef) {\r\n        this.power = power * armyDef.powerScale;\r\n        this.health = health * armyDef.healthScale;\r\n        this.maxHealth = this.health * armySize;\r\n        this.currentHealth = this.maxHealth;\r\n        this.name = armyDef.name;\r\n        this.texture = armyDef.icon;\r\n    }\r\n\r\n    initWithCreature(army) {\r\n        this.nameLabel.setText(army.name);\r\n        this.powerLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(army.Power())));\r\n        this.healthLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.floor(army.MaxHealth())));\r\n        this.armyLabel.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(army.ArmySize()));\r\n\r\n        var fillTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(army.CurrentHealth()) + \"/\" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(army.maxHealth);\r\n        this.healthBar.setFillPercent(army.CurrentHealth() / army.maxHealth, fillTxt);\r\n        this.image.setTexture(army.texture.sprite, army.texture.tile);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        // this.backingRect.setVisible(visible);\r\n        this.imageRect.setVisible(visible);\r\n        this.image.setVisible(visible);\r\n        this.nameLabel.setVisible(visible);\r\n        this.powerLabel.setVisible(visible);\r\n        this.healthLabel.setVisible(visible);\r\n        this.armyLabel.setVisible(visible);\r\n        this.healthBar.setVisible(visible);\r\n        for (var i = 0; i < this.icons.length; i++) {\r\n            this.icons[i].setVisible(visible);\r\n        }\r\n    }\r\n\r\n    getCenterX() { return this.x + 125; }\r\n    getCenterY() { return this.y + 85; }\r\n}\n\n//# sourceURL=webpack:///./src/ui/DungeonBlockDisplay.js?");

/***/ }),

/***/ "./src/ui/DungeonDisplay.js":
/*!**********************************!*\
  !*** ./src/ui/DungeonDisplay.js ***!
  \**********************************/
/*! exports provided: DungeonDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DungeonDisplay\", function() { return DungeonDisplay; });\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _TooltipImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TooltipImage */ \"./src/ui/TooltipImage.js\");\n\r\n\r\n\r\n\r\n\r\nclass DungeonDisplay {\r\n    constructor(sceneContext, x, y, dungeon, canEnter = true) {\r\n        this.backingRect = sceneContext.add.rectangle(x + 1, y + 1, 650 - 2, 115 - 2, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.lineWidth = 1;\r\n        switch (dungeon.tier) {\r\n            case 0:\r\n                this.backingRect.strokeColor = Phaser.Display.Color.GetColor(100, 200, 80);\r\n                break;\r\n            case 1:\r\n                this.backingRect.strokeColor = Phaser.Display.Color.GetColor(50, 140, 190);\r\n                break;\r\n            case 2:\r\n                this.backingRect.strokeColor = Phaser.Display.Color.GetColor(100, 75, 200);\r\n                break;\r\n        }\r\n\r\n\r\n        if (dungeon.completedRooms < dungeon.maxRooms) {\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", dungeon.name + \" Lv\" + dungeon.level);\r\n            this.nameLabel.setTint(Phaser.Display.Color.GetColor(212, 175, 55));\r\n\r\n            this.diffLabel = sceneContext.add.bitmapText(x + 5, y + 25, \"courier16\", \"Difficulty: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].numberString(dungeon.difficulty));\r\n\r\n            if (canEnter === true) {\r\n                this.enterBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](sceneContext, x + 545, y + 90, 100, 20, \"Enter\").onClickHandler(() => { this._onClick({ dungeon: dungeon }); });\r\n            } else {\r\n                this.enterBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](sceneContext, x + 545, y + 90, 100, 20, \"Enter\");\r\n                this.enterBtn.setEnable(false);\r\n            }\r\n            this.elements = [this.backingRect, this.nameLabel, this.diffLabel, this.enterBtn];\r\n\r\n            var px = x + 20;\r\n            for (var i = 0; i < dungeon.maxRooms; i++) {\r\n                var clr = i < dungeon.completedRooms ? Phaser.Display.Color.GetColor(130, 110, 200) : Phaser.Display.Color.GetColor(0, 0, 0);\r\n                var rect;\r\n                if (i % 5 === 4) {\r\n                    var texture = i === dungeon.maxRooms - 1 ? { sprite: \"icons2\", tile: 1 } : { sprite: \"icons2\", tile: 0 };\r\n                    var img = sceneContext.add.image(px + 7, y + 57, texture.sprite, texture.tile).setOrigin(0, 0).setDepth(99);\r\n                    img.displayWidth = 16;\r\n                    img.displayHeight = 16;\r\n                    this.elements.push(img);\r\n                    rect = sceneContext.add.rectangle(px, y + 50, 30, 30, clr).setOrigin(0, 0);\r\n                    px += 35;\r\n                } else {\r\n                    rect = sceneContext.add.rectangle(px, y + 55, 20, 20, clr).setOrigin(0, 0);\r\n                    px += 25;\r\n                }\r\n                rect.isStroked = true;\r\n                rect.lineWidth = 1;\r\n                rect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n                this.elements.push(rect);\r\n            }\r\n        } else if (dungeon.rewards.length === 3) {\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", dungeon.name + \" Lv\" + dungeon.level);\r\n            this.nameLabel.setTint(Phaser.Display.Color.GetColor(212, 175, 55));\r\n\r\n            this.descLabel = sceneContext.add.bitmapText(x + 325, y + 30, \"courier16\", \"Choose Your Reward\").setOrigin(0.5, 0);\r\n\r\n            this.reward1Btn = new _TooltipImage__WEBPACK_IMPORTED_MODULE_3__[\"TooltipImage\"](sceneContext, x + 138, y + 56, 48, 48,\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardImage(dungeon.rewards[0]),\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardTooltip(dungeon.rewards[0]))\r\n                .onClickHandler(() => { this._onClick({ dungeon: dungeon, reward: 0 }); });\r\n            this.reward2Btn = new _TooltipImage__WEBPACK_IMPORTED_MODULE_3__[\"TooltipImage\"](sceneContext, x + 301, y + 56, 48, 48,\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardImage(dungeon.rewards[1]),\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardTooltip(dungeon.rewards[1]))\r\n                .onClickHandler(() => { this._onClick({ dungeon: dungeon, reward: 1 }); });\r\n            this.reward3Btn = new _TooltipImage__WEBPACK_IMPORTED_MODULE_3__[\"TooltipImage\"](sceneContext, x + 463, y + 56, 48, 48,\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardImage(dungeon.rewards[2]),\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardTooltip(dungeon.rewards[2]))\r\n                .onClickHandler(() => { this._onClick({ dungeon: dungeon, reward: 2 }); });\r\n\r\n            this.elements = [this.backingRect, this.nameLabel, this.descLabel, this.reward1Btn, this.reward2Btn, this.reward3Btn];\r\n        } else {\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", dungeon.name + \" Lv\" + dungeon.level);\r\n            this.nameLabel.setTint(Phaser.Display.Color.GetColor(212, 175, 55));\r\n\r\n            var texture = _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardImage(dungeon.rewards[0]);\r\n            this.image = sceneContext.add.image(x + 5, y + 35, texture.sprite, texture.tile).setOrigin(0);\r\n            this.image.displayWidth = 48;\r\n            this.image.displayHeight = 48;\r\n\r\n            this.descLabel = sceneContext.add.bitmapText(x + 65, y + 40, \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].processText(_data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getDungeonRewardTooltip(dungeon.rewards[0]), 70));\r\n            this.elements = [this.backingRect, this.nameLabel, this.image, this.descLabel];\r\n        }\r\n\r\n        this.onClickHandlers = [];\r\n    }\r\n\r\n    registerClick(callback) {\r\n        this.onClickHandlers.push(callback);\r\n        return this;\r\n    }\r\n\r\n    _onClick(props) {\r\n        for (var i = 0; i < this.onClickHandlers.length; i++) {\r\n            this.onClickHandlers[i](props);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/DungeonDisplay.js?");

/***/ }),

/***/ "./src/ui/ExtendedFloatingTooltip.js":
/*!*******************************************!*\
  !*** ./src/ui/ExtendedFloatingTooltip.js ***!
  \*******************************************/
/*! exports provided: ExtendedFloatingTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExtendedFloatingTooltip\", function() { return ExtendedFloatingTooltip; });\n\r\nclass ExtendedFloatingTooltip {\r\n    constructor(sceneContext, x, y, width, height) {\r\n        this.boundingBox = sceneContext.add.rectangle(x, y, width, height, 0x222222).setOrigin(0);\r\n        this.boundingBox.strokeColor = 0xbbbbbb;\r\n        this.boundingBox.isStroked = true;\r\n        this.boundingBox.lineWidth = 2;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.context = sceneContext;\r\n        this.textList = [];\r\n    }\r\n\r\n    addText(x, y, font, text, clr=undefined) {\r\n        var label = this.context.add.bitmapText(this.x + x, this.y + y, font, text);\r\n        if (clr !== undefined) {\r\n            label.setTint(clr);\r\n        }\r\n        this.textList.push(label);\r\n        return this;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.boundingBox.setVisible(visible);\r\n        for (var i = 0; i < this.textList.length; i++) {\r\n            this.textList[i].setVisible(visible);\r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        this.boundingBox.destroy();\r\n        for (var i = 0; i < this.textList.length; i++) {\r\n            this.textList[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ExtendedFloatingTooltip.js?");

/***/ }),

/***/ "./src/ui/FadingNumberLabel.js":
/*!*************************************!*\
  !*** ./src/ui/FadingNumberLabel.js ***!
  \*************************************/
/*! exports provided: FadingNumberLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FadingNumberLabel\", function() { return FadingNumberLabel; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\nclass FadingNumberLabel {\r\n    constructor(sceneContext, x, y, duration, clr, negativeClr, font, fontsize) {\r\n        this.textLabel = sceneContext.add.bitmapText(x, y, font, \"\", fontsize);\r\n        this.textLabel.setTint(clr);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.clr = clr;\r\n        this.negativeClr = negativeClr;\r\n        this.maxDuration = duration;\r\n        this.curDuration = 0;\r\n        this.activeClr = clr;\r\n    }\r\n\r\n    setValue(value) {\r\n        this.textLabel.setVisible(true);\r\n        this.textLabel.setText((value > 0 ? \"+\" : \"\") + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(value));\r\n        this.activeClr = value < 0 ? this.negativeClr : this.clr;\r\n        this.textLabel.setTint(this.activeClr);\r\n        this.curDuration = this.maxDuration;\r\n    }\r\n\r\n    setColor(clr) {\r\n        this.clr = clr;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.textLabel.setPosition(x, y);\r\n    }\r\n\r\n    destroy() {\r\n        this.textLabel.destroy();\r\n    }\r\n\r\n    update(delta) {\r\n        this.curDuration -= delta;\r\n        if (this.curDuration > 0) {\r\n            this.textLabel.setTint(_utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].colorLerp(Phaser.Display.Color.GetColor32(0, 0, 0, 0), this.activeClr, this.curDuration / this.maxDuration));\r\n        } else {\r\n            this.textLabel.setVisible(false);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/FadingNumberLabel.js?");

/***/ }),

/***/ "./src/ui/FloatingTooltip.js":
/*!***********************************!*\
  !*** ./src/ui/FloatingTooltip.js ***!
  \***********************************/
/*! exports provided: FloatingTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FloatingTooltip\", function() { return FloatingTooltip; });\n\r\nclass FloatingTooltip {\r\n    constructor(sceneContext, tooltipMessage, x, y, width, height, font = \"courier20\", fontSize = 20, depth=0) {\r\n        this.boundingBox = sceneContext.add.rectangle(x, y, width, height, 0x222222).setOrigin(0).setDepth(depth);\r\n        this.boundingBox.strokeColor = 0xbbbbbb;\r\n        this.boundingBox.isStroked = true;\r\n        this.boundingBox.lineWidth = 2;\r\n        this.text = sceneContext.add.bitmapText(x + width / 2, y + height / 2, font, tooltipMessage, fontSize, 1).setOrigin(0.5).setDepth(depth);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.boundingBox.setVisible(visible);\r\n        this.text.setVisible(visible);\r\n    }\r\n\r\n    destroy(){\r\n        this.boundingBox.destroy();\r\n        this.text.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/FloatingTooltip.js?");

/***/ }),

/***/ "./src/ui/GearCraftDisplay.js":
/*!************************************!*\
  !*** ./src/ui/GearCraftDisplay.js ***!
  \************************************/
/*! exports provided: GearCraftDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GearCraftDisplay\", function() { return GearCraftDisplay; });\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _ImageButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_GearData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data/GearData */ \"./src/data/GearData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GearCraftDisplay {\r\n    constructor(sceneContext, x, y, gear) {\r\n        //275x220\r\n        // for checking against crafting unlocks\r\n        var progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"]();\r\n        //keep reference of gear for callbacks\r\n        this.gear = gear;\r\n\r\n        this.backingRect = sceneContext.add.rectangle(x + 1, y + 1, 300 - 2, 210 - 2, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 1;\r\n\r\n        var name = gear.name + \" Lv\" + gear.level;\r\n        this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, name.length > 18 ? \"courier16\" : \"courier20\", name);\r\n\r\n        var types = [\"Weapon\", \"Armor\", \"Trinket\"]\r\n        var subtext = gear.tier === 0 ? \"Broken \" + types[gear.slotType] : \"Tier \" + gear.tier + \" \" + types[gear.slotType];\r\n        this.typeLabel = sceneContext.add.bitmapText(x + 5, y + 25, \"courier16\", subtext);\r\n        this.moteButton = undefined;\r\n        this.runeButton = undefined;\r\n        this.moteLabel = undefined;\r\n\r\n        if (gear.level > 0 && progression.unlocks.motes === true) {\r\n            if (gear.motesFused > 0) {\r\n                this.moteLabel = sceneContext.add.bitmapText(x + 258, y + 21, \"courier16\",\r\n                    \"+\" + Math.floor(gear.getMotePower() * 1000) / 10 + \"%\").setOrigin(1, 0.5);\r\n                this.moteLabel.setTint(Phaser.Display.Color.GetColor(200, 0, 200));\r\n            }\r\n            this.moteButton = new _ImageButton__WEBPACK_IMPORTED_MODULE_3__[\"ImageButton\"](sceneContext, x + 263, y + 5, 32, 32, { sprite: \"icons\", tile: 39 })\r\n                .onClickHandler(() => { this._onFuse(); });\r\n        }\r\n\r\n        if (gear.level > 0 && progression.unlocks.runes === true) {\r\n            this.runeButton = new _ImageButton__WEBPACK_IMPORTED_MODULE_3__[\"ImageButton\"](sceneContext, x + 263, y + 40, 32, 32, { sprite: \"runeicons\", tile: 0 })\r\n                .onClickHandler(() => { this._onRune(); });\r\n        }\r\n\r\n        this.statLabels = []\r\n        var txt = \"\";\r\n        var bonus = gear.getStatBonuses();\r\n        for (const prop in bonus) {\r\n            if (bonus[prop] !== 0) {\r\n                txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_4__[\"TooltipRegistry\"].getBonusText(prop, bonus[prop]) + \"\\n\";\r\n            }\r\n        }\r\n        this.statLabels.push(sceneContext.add.bitmapText(x + 5, y + 45, \"courier16\", txt));\r\n        if (progression.unlocks.resourceUI === true) {\r\n            var cost = _data_GearData__WEBPACK_IMPORTED_MODULE_6__[\"GearData\"].getInstance().getGearCost(gear);\r\n            var player = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_2__[\"PlayerData\"]();\r\n            var idx = 0;\r\n            for (var i = 0; i < cost[0].length; i++) {\r\n                if (cost[0][i] !== 0) {\r\n                    txt = _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_4__[\"TooltipRegistry\"].getCostText(i, Math.floor(cost[0][i]));\r\n                    var clr = player.resources[cost[1]][i] >= cost[0][i] ?\r\n                        Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(255, 80, 80);\r\n                    var label = sceneContext.add.bitmapText(x + 148, y + 45 + (17 * idx), \"courier16\", txt);\r\n                    label.setTint(clr);\r\n                    this.statLabels.push(label);\r\n                    idx++;\r\n                }\r\n            }\r\n            // this.statLabels.push(sceneContext.add.bitmapText(x + 148, y + 45, \"courier16\", txt));\r\n        }\r\n        this.equipBtn = undefined;\r\n        this.upgradeBtn = undefined;\r\n\r\n        if (gear.level === 0) {\r\n            this.upgradeBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](sceneContext, x + 79, y + 185, 142, 20, \"Forge\");\r\n            this.upgradeBtn.onClickHandler(() => { this._onUpgrade(); });\r\n        } else {\r\n            if (progression.unlocks.resourceUI === true) {\r\n                this.equipBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](sceneContext, x + 5, y + 185, 142, 20, \"Equip\");\r\n                this.equipBtn.onClickHandler(() => { this._onEquip(); });\r\n                this.upgradeBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](sceneContext, x + 153, y + 185, 142, 20, \"Upgrade\");\r\n                this.upgradeBtn.onClickHandler(() => { this._onUpgrade(); });\r\n            } else {\r\n                this.equipBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](sceneContext, x + 79, y + 185, 142, 20, \"Equip\");\r\n                this.equipBtn.onClickHandler(() => { this._onEquip(); });\r\n            }\r\n        }\r\n\r\n\r\n        this.onEquipHandlers = [];\r\n        this.onUpgradeHandlers = [];\r\n        this.onFuseHandlers = [];\r\n        this.onRuneHandlers = [];\r\n    }\r\n\r\n    registerEvents(event, callback) {\r\n        if (event === \"onEquip\") {\r\n            this.onEquipHandlers.push(callback);\r\n        } else if (event === \"onUpgrade\") {\r\n            this.onUpgradeHandlers.push(callback);\r\n        } else if (event === \"onFuse\") {\r\n            this.onFuseHandlers.push(callback);\r\n        } else if (event === \"onRune\") {\r\n            this.onRuneHandlers.push(callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _onEquip() {\r\n        for (var i = 0; i < this.onEquipHandlers.length; i++) {\r\n            this.onEquipHandlers[i](this.gear);\r\n        }\r\n    }\r\n    _onUpgrade() {\r\n        for (var i = 0; i < this.onUpgradeHandlers.length; i++) {\r\n            this.onUpgradeHandlers[i](this.gear);\r\n        }\r\n    }\r\n    _onFuse() {\r\n        for (var i = 0; i < this.onFuseHandlers.length; i++) {\r\n            this.onFuseHandlers[i](this.gear);\r\n        }\r\n    }\r\n    _onRune() {\r\n        for (var i = 0; i < this.onRuneHandlers.length; i++) {\r\n            this.onRuneHandlers[i](this.gear);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.nameLabel.destroy();\r\n        this.typeLabel.destroy();\r\n        for (var i = 0; i < this.statLabels.length; i++) {\r\n            this.statLabels[i].destroy();\r\n        }\r\n        if (this.equipBtn !== undefined) {\r\n            this.equipBtn.destroy();\r\n        }\r\n        if (this.upgradeBtn !== undefined) {\r\n            this.upgradeBtn.destroy();\r\n        }\r\n        if (this.moteLabel !== undefined) {\r\n            this.moteLabel.destroy();\r\n        }\r\n        if (this.moteButton !== undefined) {\r\n            this.moteButton.destroy();\r\n        }\r\n        if (this.runeButton !== undefined) {\r\n            this.runeButton.destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/GearCraftDisplay.js?");

/***/ }),

/***/ "./src/ui/GearDisplay.js":
/*!*******************************!*\
  !*** ./src/ui/GearDisplay.js ***!
  \*******************************/
/*! exports provided: GearDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GearDisplay\", function() { return GearDisplay; });\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n\r\n\r\nclass GearDisplay {\r\n    constructor(sceneContext, x, y, gear) {\r\n        //275x220\r\n        if (gear === undefined) {\r\n            this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", \"Nothing\");\r\n            this.typeLabel = sceneContext.add.bitmapText(x + 5, y + 25, \"courier16\", \"\");\r\n            this.statLabel = sceneContext.add.bitmapText(x + 5, y + 45, \"courier16\", \"\");\r\n        }\r\n        else {\r\n            var txt = gear.name + \" Lv\" + gear.level;\r\n            if (txt.length > 25) {\r\n                this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier16\", txt);\r\n            } else {\r\n                this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", txt);\r\n            }\r\n\r\n            var types = [\"Weapon\", \"Armor\", \"Trinket\"]\r\n            this.typeLabel = sceneContext.add.bitmapText(x + 5, y + 25, \"courier16\", \"Tier \" + gear.tier + \" \" + types[gear.slotType]);\r\n\r\n            var txt = \"\";\r\n            var bonus = gear.getStatBonuses();\r\n            for (const prop in bonus) {\r\n                txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getBonusText(prop, bonus[prop]) + \"\\n\";\r\n            }\r\n            this.statLabel = sceneContext.add.bitmapText(x + 5, y + 45, \"courier16\", txt);\r\n        }\r\n    }\r\n\r\n    getTextBounds() {\r\n        return 10 + 20 + this.statLabel.getTextBounds(true).local.height;\r\n    }\r\n\r\n    destroy() {\r\n        this.nameLabel.destroy();\r\n        this.typeLabel.destroy();\r\n        this.statLabel.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/GearDisplay.js?");

/***/ }),

/***/ "./src/ui/GearRuneWindow.js":
/*!**********************************!*\
  !*** ./src/ui/GearRuneWindow.js ***!
  \**********************************/
/*! exports provided: GearRuneWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GearRuneWindow\", function() { return GearRuneWindow; });\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/RuneRegistry */ \"./src/data/RuneRegistry.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _FloatingTooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _ImageButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GearRuneWindow {\r\n    constructor(sceneContext, x, y, gear) {\r\n        this.selectedRune = -1;\r\n        this.gear = gear;\r\n        this.scene = sceneContext;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.backRect = sceneContext.add.rectangle(x, y, 700, 500, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setInteractive()\r\n            .setOrigin(0, 0);\r\n        this.backRect.isStroked = true;\r\n        this.backRect.strokeColor = Phaser.Display.Color.GetColor(128, 128, 128);\r\n        this.backRect.lineWidth = 2;\r\n        this.backRect.setDepth(998);\r\n        this.separator = sceneContext.add.rectangle(x + 250, y, 2, 500,\r\n            Phaser.Display.Color.GetColor(128, 128, 128)).setOrigin(0, 0).setDepth(999);\r\n\r\n        this.socketTitle = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", \"SOCKETS\").setOrigin(0, 0).setDepth(999);\r\n        this.runeTitle = sceneContext.add.bitmapText(x + 260, y + 5, \"courier20\", \"RUNES\").setOrigin(0, 0).setDepth(999);\r\n        this.cancelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 575, this.y + 475, 120, 20, \"Cancel\", 999);\r\n        this.sortNameBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 350, this.y + 5, 35, 20, \"A-Z\", 999)\r\n            .onClickHandler(() => { this._sortRunes(0); });\r\n        this.sortLevelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, this.x + 390, this.y + 5, 35, 20, \"Lv\", 999)\r\n            .onClickHandler(() => { this._sortRunes(1); });\r\n\r\n        this.gearRuneImages = [];\r\n        this.runeBonuses = [];\r\n        this.runeInventory = [];\r\n\r\n        this.page = 0;\r\n        this.pageBtns = [];\r\n\r\n        this._setupViews();\r\n    }\r\n\r\n    _sortRunes(sortType) {\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().sortRunes(sortType);\r\n        this._setupViews();\r\n    }\r\n\r\n    _setupPageBtn(x, y, idx) {\r\n        var pageBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](this.scene, x, y, 30, 20, idx + \"\", 999);\r\n        pageBtn.onClickHandler(() => { this._switchPage(idx); });\r\n        return pageBtn;\r\n    }\r\n\r\n    _switchPage(page) {\r\n        if (this.page !== page) {\r\n            this.selectedRune = -1;\r\n        }\r\n        this.page = page;\r\n        var player = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance();\r\n\r\n        for (var i = 0; i < this.runeInventory.length; i++) {\r\n            this.runeInventory[i].destroy();\r\n        }\r\n        this.runeInventory = [];\r\n\r\n        var idx = 0;\r\n        for (var i = page * 64; i < Math.min(player.runes.length, page * 64 + 64); i++) {\r\n            var posX = this.x + 258 + (idx % 8) * 55;\r\n            var posY = this.y + 30 + Math.floor(idx / 8) * 55;\r\n            this.runeInventory.push(this._setupRuneInventory(this.scene, player.runes[i], posX, posY, i));\r\n            idx += 1;\r\n        }\r\n    }\r\n\r\n    _setupViews() {\r\n        for (var i = 0; i < this.gearRuneImages.length; i++) {\r\n            this.gearRuneImages[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.runeBonuses.length; i++) {\r\n            this.runeBonuses[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.pageBtns.length; i++) {\r\n            this.pageBtns[i].destroy();\r\n        }\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        this.pageBtns = [];\r\n        this.gearRuneImages = [];\r\n        this.runeBonuses = [];\r\n\r\n        var maxPage = 1 + Math.floor(_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes.length / 64);\r\n        for (var i = 0; i < maxPage; i++) {\r\n            this.pageBtns.push(this._setupPageBtn(this.x + 440 + i * 35, this.y + 5, i));\r\n        }\r\n        for (var i = 0; i < this.gear.runes.length; i++) {\r\n            var posX = this.x + 7 + 36 * i;\r\n            var posY = this.y + 27 + (i % 2) * 36;\r\n            this.gearRuneImages.push(this._setupRuneSocket(this.scene, this.gear.runes[i], posX, posY, i));\r\n        }\r\n\r\n        var t = this.y + 140;\r\n        for (var i = 0; i < this.gear.compiledRunes.length; i++) {\r\n            var text = this.scene.add.bitmapText(this.x + 15, t, \"courier20\",\r\n                this.gear.compiledRunes[i].word + \" Lv\" + this.gear.compiledRunes[i].level).setDepth(999);;\r\n            text.setTint(Phaser.Display.Color.GetColor(200, 0, 200));\r\n            this.runeBonuses.push(text);\r\n\r\n            var txt = \"\";\r\n            for (const prop in this.gear.compiledRunes[i].bonus) {\r\n                txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRuneBonusText(prop, this.gear.compiledRunes[i].bonus[prop]) + \"\\n\";\r\n            }\r\n            text = this.scene.add.bitmapText(this.x + 15, t + 20, \"courier16\", txt).setDepth(999);;\r\n            this.runeBonuses.push(text);\r\n\r\n            t += 20 + text.getTextBounds(true).local.height + 10;\r\n        }\r\n\r\n        this._switchPage(Math.min(maxPage, this.page));\r\n    }\r\n\r\n    _slotRune(idx) {\r\n        if (this.selectedRune !== -1) {\r\n            if (_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().isEquippedItem(this.gear)) {\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().unequip(this.gear.slotType);\r\n                this.gear.addRune(_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune], idx);\r\n                _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().equip(this.gear);\r\n            } else {\r\n                this.gear.addRune(_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune], idx);\r\n            }\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().removeRune(this.selectedRune);\r\n            this._setupViews();\r\n            this.selectedRune = -1;\r\n        }\r\n    }\r\n\r\n    _selectRune(idx) {\r\n        if (this.selectedRune !== -1) {\r\n            this.runeInventory[this.selectedRune % 64].setBorderTint(Phaser.Display.Color.GetColor(255, 255, 255));\r\n        }\r\n        this.selectedRune = idx;\r\n        this.runeInventory[this.selectedRune % 64].setBorderTint(Phaser.Display.Color.GetColor(0, 255, 0));\r\n    }\r\n\r\n    _setupRuneSocket(sceneContext, rune, x, y, idx) {\r\n        var bonus = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getBonusForRune(rune);\r\n        var txt = rune.word + \" Lv\" + rune.level + \"\\n\";\r\n        for (const prop in bonus) {\r\n            txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRuneBonusText(prop, bonus[prop]) + \"\\n\";\r\n        }\r\n        var runeBtn = new _ImageButton__WEBPACK_IMPORTED_MODULE_4__[\"ImageButton\"](sceneContext, x, y, 48, 48, _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(rune.word), 999);\r\n        runeBtn.onClickHandler(() => { this._slotRune(idx); });\r\n        if (rune.word != \"Empty\") {\r\n            runeBtn.onPointerOverHandler(() => { this._showTooltip(sceneContext, txt, x, y); })\r\n                .onPointerOutHandler(() => { this._removeTooltip() });\r\n        }\r\n        runeBtn.removeBackground();\r\n        return runeBtn;\r\n    }\r\n\r\n    _setupRuneInventory(sceneContext, rune, x, y, idx) {\r\n        var bonus = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getBonusForRune(rune);\r\n        var txt = rune.word + \" Lv\" + rune.level + \"\\n\";\r\n        for (const prop in bonus) {\r\n            txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRuneBonusText(prop, bonus[prop]) + \"\\n\";\r\n        }\r\n        var runeBtn = new _ImageButton__WEBPACK_IMPORTED_MODULE_4__[\"ImageButton\"](sceneContext, x, y, 48, 48, _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(rune.word), 999);\r\n        runeBtn.onClickHandler(() => { this._selectRune(idx); })\r\n            .onPointerOverHandler(() => { this._showTooltip(sceneContext, txt, x, y); })\r\n            .onPointerOutHandler(() => { this._removeTooltip() });\r\n        return runeBtn;\r\n    }\r\n\r\n    _showTooltip(scenContext, text, x, y) {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        var posX = x + (x + 200 > 1100 ? -152 : 0);\r\n        var posY = y + (y - 60 < 100 ? 50 : -62);\r\n        this.floatingText = new _FloatingTooltip__WEBPACK_IMPORTED_MODULE_3__[\"FloatingTooltip\"](scenContext, text, posX, posY, 200, 60, \"courier16\", 16, 1000);\r\n    }\r\n\r\n    _removeTooltip() {\r\n        this.floatingText.destroy();\r\n        this.floatingText = undefined;\r\n    }\r\n\r\n    onCancelHandler(callback) {\r\n        this.cancelBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n\r\n    update() {\r\n        //no op because I'm dumb\r\n    }\r\n\r\n    destroy() {\r\n        this.backRect.destroy();\r\n        this.separator.destroy();\r\n        this.socketTitle.destroy();\r\n        this.runeTitle.destroy();\r\n        this.cancelBtn.destroy();\r\n        this.sortNameBtn.destroy();\r\n        this.sortLevelBtn.destroy();\r\n        for (var i = 0; i < this.gearRuneImages.length; i++) {\r\n            this.gearRuneImages[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.runeBonuses.length; i++) {\r\n            this.runeBonuses[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.runeInventory.length; i++) {\r\n            this.runeInventory[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.pageBtns.length; i++) {\r\n            this.pageBtns[i].destroy();\r\n        }\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/GearRuneWindow.js?");

/***/ }),

/***/ "./src/ui/GuideWindow.js":
/*!*******************************!*\
  !*** ./src/ui/GuideWindow.js ***!
  \*******************************/
/*! exports provided: GuideWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuideWindow\", function() { return GuideWindow; });\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\nclass GuideWindow {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 750, 650, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 2;\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.titleLabel = scene.add.bitmapText(x + 375, y + 10, \"courier20\", \"Darkworld's Book of What to Do\").setOrigin(0.5, 0);\r\n        var by = y + 40;\r\n        this.hotkeyBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Hotkeys\").onClickHandler(() => { this._setGuide(-1); });\r\n        by += 22;\r\n        this.gearBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.gearTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Gear\").onClickHandler(() => { this._setGuide(0); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.exploreBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.exploreTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Region\").onClickHandler(() => { this._setGuide(1); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.combatBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.combatTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Combat\").onClickHandler(() => { this._setGuide(2); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.townBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.townTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Town\").onClickHandler(() => { this._setGuide(3); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.talentsBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.talentsTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Talents\").onClickHandler(() => { this._setGuide(4); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.worldBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.worldTab === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"World\").onClickHandler(() => { this._setGuide(5); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.infuseBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.infuseUI === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Shade\").onClickHandler(() => { this._setGuide(6); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.resourceBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.resourceUI === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Resources\").onClickHandler(() => { this._setGuide(7); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.craftingBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.craftingUI === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Crafting\").onClickHandler(() => { this._setGuide(8); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.buildingsBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.buildings === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Buildings\").onClickHandler(() => { this._setGuide(9); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.blueprintsBtn = _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0 ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Blueprints\").onClickHandler(() => { this._setGuide(18); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.moteBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.motes === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Motes\").onClickHandler(() => { this._setGuide(10); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.runeBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.runes === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Runes\").onClickHandler(() => { this._setGuide(11); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.rune2Btn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().unlocks.runes === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Rune Map\").onClickHandler(() => { this._setGuide(17); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.automationBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Automation\").onClickHandler(() => { this._setGuide(13); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.challengeBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.challenges === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Challenges\").onClickHandler(() => { this._setGuide(12); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.dungeonBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Dungeons\").onClickHandler(() => { this._setGuide(14); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.starshardBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Star Shards\").onClickHandler(() => { this._setGuide(15); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        by += 22;\r\n        this.ritualBtn = _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.rituals === true ?\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Rituals\").onClickHandler(() => { this._setGuide(16); }) :\r\n            new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 5, by, 120, 20, \"???\");\r\n        this.btns = [this.hotkeyBtn, this.gearBtn, this.exploreBtn, this.combatBtn, this.townBtn, this.talentsBtn, this.worldBtn, this.infuseBtn,\r\n        this.resourceBtn, this.craftingBtn, this.buildingsBtn, this.moteBtn, this.runeBtn, this.challengeBtn, this.automationBtn,\r\n        this.dungeonBtn, this.starshardBtn, this.ritualBtn, this.blueprintsBtn, this.rune2Btn];\r\n        this.guideTexts = [];\r\n        this.closeButton = new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 630, y + 620, 110, 20, \"Back\");\r\n    }\r\n\r\n    _setGuide(num) {\r\n        for (var i = 0; i < this.guideTexts.length; i++) {\r\n            this.guideTexts[i].destroy();\r\n        }\r\n        this.guideTexts = [];\r\n        switch (num) {\r\n            case -1:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Hotkeys\"));\r\n                var helptxt = \"Why do I have to click so many times? What kind of idle game is this where it takes 3 clicks to build \" +\r\n                    \"a building that you need HUNDREDS of? Well say no more. Have some sweet sweet hotkeys to rest your delicate wrists. \" +\r\n                    \"But seriously, please use the hotkeys, clicking that much can't be good for you. While hovering over a tile in the \" +\r\n                    \"Region tab, press:\\n\\n\" +\r\n                    \"* 'R' to build a road\\n\" +\r\n                    \"* 'H' to build a house\\n\" +\r\n                    \"* 'M' to build a market\\n\" +\r\n                    \"* 'T' to build a tavern\\n\" +\r\n                    \"* 'W' to build a warehouse\\n\" +\r\n                    \"* 'A' to build a alchemy lab\\n\" +\r\n                    \"* 'J' to build a dojo\\n\" +\r\n                    \"* 'C' to build a watch tower\\n\" +\r\n                    \"* 'G' to build a garrison\\n\" +\r\n                    \"* 'D' to destroy a building\\n\" +\r\n                    \"* 'P' to build a production building matching the tile (eg: Mountains build mines)\\n\" +\r\n                    \"* '1' - '6' to build a specific production building (Wood -> Leather - > Metal -> Fiber - > Stone -> Crystal)\\n\" +\r\n                    \"* 'U' to upgrade a building\\n\" +\r\n                    \"* 'E' to explore a tile\\n\" +\r\n                    \"* 'S' to shatter a rune (Rune upgrade window only)\\n\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 0:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Gear\"));\r\n                var helptxt = \"This one's pretty simple, you can equip any gear you find here. You can only have 3 items equipped \" +\r\n                    \"at a time: a weapon, armor, and a trinket. No, you can't wear boots AND a necklace, that would be STUPID.\\n\\n\" +\r\n                    \"You can do more in this tab, but that's for other sections when you unlock them.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 1:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Region\"));\r\n                var helptxt = \"A huge world to explore. Region's are usually 11x13 tile grids. Each tile has a biome that determines \" +\r\n                    \"which monsters you'll fight, how long it takes to fully explore, and what kind of resources you can find there. \" +\r\n                    \"Clicking on tiles you've revealed brings up a dialog with sweet deets and the explore button. \" +\r\n                    \"Press the explore button to explore, duh. Here's some other poorly explained mechanics:\\n\\n\" +\r\n                    \"* A tile's difficulty influences how much time it takes to explore.\\n\" +\r\n                    \"* Yields are partly determined by the neighboring tiles. For example, a mountain surrounded by plains gives less metal \" +\r\n                    \"than a mountain surrounded by mountains.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 250, \"courier20\", \"Invasions\"));\r\n                var helptxt = \"After exploring a few tiles the monsters are going to want to take back the land. Every so often the \" +\r\n                    \"monsters will start an invasion. Invaded tiles flash purple and disables any building present. The invasion will \" +\r\n                    \"occasionally spread to nearby tiles, disabling those buildings as well. Every day the invasion builds in strength \" +\r\n                    \"based on the number of tiles invaded. Once the Invasion Strength bar fills its level increases, increasing the level \" +\r\n                    \"of invasion monsters and increasing the number of fights needed to clear a tile. Building Watch Towers prevents \" +\r\n                    \"invasions from spreading, but doesn't prevent invasions from spawning. After clearing all invaded tiles Invasion \" +\r\n                    \"Strength is reset to 0 and the invasion ends.\\n\\n\" +\r\n                    \"* Invaders drop Motes of Darkness, a rare resource needed to enhance gear.\\n\" +\r\n                    \"* Remove invasions by fighting off the invaders. Killing all invaders reduces the Invasion Strength bar.\\n\" +\r\n                    \"* Invasions spread slower the larger the invasion.\"\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 280, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 2:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Combat\"));\r\n                var helptxt = \"Where you fight monsters and explore tiles. Fights happen automatically; enemies will attack you and you'll \" +\r\n                    \"randomly target an enemy. After defeating all the enemies you'll gain some resources and shade. There's a 2.5 second \" +\r\n                    \"window between fights where you explore the tile and heal your wounds.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 160, \"courier20\", \"Criticals and Glancing Hits\"));\r\n                var helptxt = \"This is where things get a little complicated. With an infinitely scaling game having a core stat cap out at \" +\r\n                    \"100% doesn't make sense. Each time your Crit Chance rises above 50% it's divided by 2 while multiplying your Crit Damage by the \" +\r\n                    \"same amount. The key point here is 'divided', to get back up to 50% Crit Chance it's going to take twice as much crit as before. \" +\r\n                    \"The next time you reach 50% it's divided AGAIN by 2, also multiplying your Crit Damage. So the multi grows to 2, then 4, 8, 16, etc.\\n\\n\" +\r\n                    \"What is your Crit Damage anyways? That's where Aim and Toughness comes in. Your Crit Damage against any enemy is equal to:\\n\\n\" +\r\n                    \"1 + ((-0.5 + SQRT(Aim) / SQRT(Toughness)) * 0.5 * Crit Chance Multi)\\n\\n\" +\r\n                    \"All this means is having more Aim than the monsters Toughness increases Crit Damage, while having less decreases Crit Damage. \" +\r\n                    \"Glancing Hits follow a similar, simpler formula:\\n\\n\" +\r\n                    \"                           Aim / Toughness\\n\\n\" +\r\n                    \"The damage you deal with a Glancing Hit is the formula above, while the chance of a Glancing Hit is that formula divided by 2. \" +\r\n                    \"For example, if you had a 10% chance of a Glancing Hit you would deal 20% less damage.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 195, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 3:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Town\"));\r\n                var helptxt = \"You've found a whole town of other people. Here you can see a whole bunch of stats for nerds, \" +\r\n                    \"like how many people live here, your economy/production bonuses, to how much you earn in taxes. You can upgrade \" +\r\n                    \"buildings or research things like banking to improve the town, all at your expense!\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 160, \"courier20\", \"Economy and Production\"));\r\n                var helptxt = \"How much money you earn in taxes \" +\r\n                    \"and your money cap depends on how many villagers live in your town, for some reason. Increasing the economy increases \" +\r\n                    \"those numbers, and increasing production obviously increases how many resources you produce.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 190, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 260, \"courier20\", \"Friendship\"));\r\n                var helptxt = \"Finally you have this \" +\r\n                    \"thing called Friendship. You earn friendship by defeating monsters, and if you collect enough friendship you'll earn \" +\r\n                    \"more shade. How? Through the power of friendship! Oh, also the villagers won't let you improve things past your \" +\r\n                    \"friendship level no matter how much you pay them.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 290, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 4:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Talents\"));\r\n                var helptxt = \"Only the coolest of heros get these super cool and interesting talents. Talents are passive benefits \" +\r\n                    \"that you can unlock by spending talent points. You can buy talent points with shade but the cost quickly increases, \" +\r\n                    \"so you better choose carefully. Or don't, they probably don't make a huge difference.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 5:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"World\"));\r\n                var helptxt = \"Who knew there was more than just one region? Me. I did. After fully exploring the topmost tile of a \" +\r\n                    \"region you unlock the next region in the world tab. You'll have a few choices of which region to explore next, \" +\r\n                    \"covering a variety of sweet environments, like desert, or mountains. There's no take backsies, once you \" +\r\n                    \"choose a region thats it, although you can always go back and visit previous regions. Since you've probably \" +\r\n                    \"found a Mystic Gate already here's some tips:\\n\\n\" +\r\n                    \"* Each region has a Mystic Gate that gives you Moonlight based on your total stats/talents.\\n\" +\r\n                    \"* Each gate gives 50% MORE Moonlight than the previous gate. Eg: Region 2 gives 150%, region 3 gives 225%, 337%, etc.\\n\" +\r\n                    \"* If you explore far enough you might unlock something neat.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 6:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Shade\"));\r\n                var helptxt = \"It's like experience, but edgier! Defeating monsters gives you shade, with stronger monsters giving \" +\r\n                    \"you more shade. Shade can really only be used for 2 things, so don't go saving it thinking there's going \" +\r\n                    \"to be some sort of shade shop with a dongle of slaying, because there's not. You can infuse shade to earn \" +\r\n                    \"2 Stat Points, with the cost increasing by 50 each time. You can also get Talent Points starting at 400 shade \" +\r\n                    \"bucks.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 7:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Resources\"));\r\n                var helptxt = \"Pretty much all the cool things are made out of resources. You have 6 of them to collect: Wood, \" +\r\n                    \"Leather, Metal, Fiber, Stone, and Crystal. You collect some after defeating monsters and they can be used to buy \" +\r\n                    \"all kinds of things, like town upgrades, gear, or buildings. Each region has it's own super cool tier of resources \" +\r\n                    \"and won't use any of that junk you found in the region before.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 8:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Crafting\"));\r\n                var helptxt = \"Once you have enough resources you can spend it on getting better gear. You can spend resources \" +\r\n                    \"crafting new gear or leveling up gear you already have. Each level increases the gear's stats and costs. Cost \" +\r\n                    \"per level increase with every level, while stats per level increases every 5th level. You can probably make some \" +\r\n                    \"better gear once you find some better resources.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 9:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Building\"));\r\n                var helptxt = \"Finally you can force those villagers to do some work, as long as you cover 100% of the costs. \" +\r\n                    \"Buildings let you exploit the natural land around you for profit. Once you've unlocked buildings you can \" +\r\n                    \"click on a tile to see a list of buildings you can build there, such as:\\n\\n\" +\r\n                    \"Roads: Can only be built next to docks, the town, or other roads. Pretty much every building uses roads so \" +\r\n                    \"make sure you can build them.\\n\\n\" +\r\n                    \"Houses: Built next to roads, increase the max population in the city.\\n\\n\" +\r\n                    \"Production: Buildings like Lumber Mills and Quarries. These give you resources every day based on the yields \" +\r\n                    \"of a tile. They also have a super complicated efficiency value. Nearby roads increase efficiency or reduce it to \" +\r\n                    \"0% if no road is close enough. Neighbouring buildings also reduce efficiency, with production buildings giving a \" +\r\n                    \"big hit to efficiency while houses don't impact it much.\\n\\n\" +\r\n                    \"Economy: Taverns, Docks, and Markets all improve a towns gold income, meaning you earn more AND increase your gold cap. \" +\r\n                    \"Docks also act as roads, letting you expand across water.\\n\\n\" +\r\n                    \"Other: The rest, like Watch Towers and Alchemy Labs, that have a variety of effects and don't fit in the other sections.\\n\\n\" +\r\n                    \"Buildings can be upgraded with insane amounts of resources and gold to increase their effects. Finally there's \" +\r\n                    \"defense, which is how quickly invasions build on that tile.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 10:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Motes of Darkness\"));\r\n                var helptxt = \"These super useful stones can be found from the monsters you defeat in invasions. You know, those glowing \" +\r\n                    \"purple tiles that you totally don't ingore? Motes can be slapped into gear to give it a whopping 0.25% bonus to \" +\r\n                    \"its stats! It's so good that it even has diminishing returns after 20%.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 11:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Runes\"));\r\n                var helptxt = \"Glowing rocks you can slap into your gear. You have a chance to find a rune after fully exploring a tile. \" +\r\n                    \"Each region only has a handful of runes to find, and you can't do any funny business like letting monsters invade \" +\r\n                    \"a tile you found a rune in for infinite runes. Runes have a level (based on the region they were found) and can \" +\r\n                    \"be leveled up with motes. You can also reroll a rune to try and get a better one by spending motes. Runes are \" +\r\n                    \"basically a motes sink.\\n\\nHigher tier items have more slots for runes, allowing you to cram even more glowing rocks \" +\r\n                    \"into them. You may even be able to make rune words by putting them in the right order.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 12:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Challenges\"));\r\n                var helptxt = \"The Moon Lord thinks you're okay and so has allowed you to undertake challenges. You can start \" +\r\n                    \"a challenge at any time, but you won't get any moonlight unless you start one after passing through a \" +\r\n                    \"Mystic Gate. Challenges change the game, removing features and generally making things a pain. If you complete \" +\r\n                    \"a challenge you can get some powerful rewards along with a handful of Challenge Points. Challenge Points are \" +\r\n                    \"pretty much just another stat multiplier to encourage you to do the annoying/boring ones.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 13:\r\n                var py = 45;\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Automation\"));\r\n                var helptxt = \"Why play the game when it can do all the work and play it for you? You'll unlock more automation as \" +\r\n                    \"you play the game.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                py += 60;\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Auto Explore\"));\r\n                helptxt = \"With auto explore on, every time you fully explore a tile it will jump to the next available tile. If you die \" +\r\n                    \"it continues after healing to full.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                py += 80;\r\n                if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoGear === true) {\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Auto Upgrade Gear\"));\r\n                    helptxt = \"At the end of every week this will try to upgrade your equipped gear one level.\";\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                    py += 60;\r\n                }\r\n                if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challenges.invasion.completions > 0) {\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Auto Invade\"));\r\n                    helptxt = \"With this on Auto Explore will clear up any invasions first before exploring new tiles. Fighting Invasions \" +\r\n                        \"with this on gives 25% motes until you finish all Invasion challenges.\";\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                    py += 80;\r\n                }\r\n                if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoTown === true) {\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Auto Upgrade Town\"));\r\n                    helptxt = \"At the end of every week this will try to upgrade town buildings (not research) one level.\";\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                    py += 60;\r\n                }\r\n                if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challenges.outcast.completions > 0) {\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py, \"courier20\", \"Auto Upgrade Buildings\"));\r\n                    helptxt = \"Finally, some building automation. This is toggled on each region and will attempt to upgrade a handful of \" +\r\n                        \"buildings each day, assuming you can afford it. Each day, it will upgrade one production building, house, road, market, \" +\r\n                        \"tavern, and warehouse. Why those? Because I already have lists for those and I'm too lazy to code something else.\";\r\n                    this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + py + 25, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                    py += 100;\r\n                }\r\n                break;\r\n            case 14:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Dungeons\"));\r\n                var helptxt = \"Don't know what to do with your villagers? Throw them into these meat grinders \" +\r\n                    \"full of loot! You can find 3 dungeons in each region by exploring tiles, each giving different loot and rewards. \" +\r\n                    \"Dungeons can only be completed by sending in your armies to combat the hordes of monsters that infest them. Don't have an army? \" +\r\n                    \"You do now! Each town, regardless of population, can supply up to 5 villagers to fight for you. You can build Garrisons to \" +\r\n                    \"increase this limit, however each soldier above the cap reduces your tax income across all regions. Building Dojos increases your \" +\r\n                    \"soldiers strength at the end of each week.\\n\\n\" +\r\n                    \"Your army has 3 stats: Power, Health, and Army Size. Power is how much damage each soldier deals with attacks, Health is how much \" +\r\n                    \"damage they can take, and Army Size is how large of an army you can sustain. If your army takes more damage than a soldiers health, \" +\r\n                    \"that soldier dies and your army size decreases, lowering your total damage. If all your soldiers die you will need to wait for \" +\r\n                    \"towns to replenish your soldiers. Each Town and Garrison trains 1 soldier each week.\\n\\n\" +\r\n                    \"Each dungeon room, except for the elites and bosses, take 5 fights to clear and give rewards once complete. The small \" +\r\n                    \"rooms give a bunch of a random resource, mini bosses give shade and motes, and bosses give you 3 options to choose from. \" +\r\n                    \"Each boss has a different pool of rewards:\\n\\n\" +\r\n                    \"Tier 1: Resources, Shade, Motes, Runes, Gear Levels, Gold.\\n\" +\r\n                    \"Tier 2: Resource production boost to all regions for a given type, Econ/Production boost to this region.\\n\" +\r\n                    \"Tier 3: % Stat increases, % Moonlight earned this run, Free Talents, Permanent Villager Power/Health (persists through rebirths).\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 15:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Star Shards\"));\r\n                var helptxt = \"Once you've beaten the void at Region 10 you unlock Star Shards and the Constellation perks. \" +\r\n                    \"These perks give even stronger bonuses than the Moonlight perks, and as such Star Shards are very hard to \" +\r\n                    \"come by, at least for now anyways.\\n\\n\" +\r\n                    \"To earn starshards you need to clear a 'Starlight' tile. Each tile has a random chance to be a Starlight tile, \" +\r\n                    \"following this formula:\\n\\n                        0.025% * Region Level\\n\\n\" +\r\n                    \"A Starlight tile glows pink and has it's enemies replaced with stars. As the chance for a Starlight tile is \" +\r\n                    \"based on Region level, you find more star shards the higher region you go. When the chance reaches 10% the \" +\r\n                    \"chance is cut in half and Starlight tiles drop double the number of shards.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 16:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Rituals\"));\r\n                var helptxt = \"Now that you defeated the Cult of the Betrayer Star you have access to all their crazy Rituals. \" +\r\n                    \"Rituals change the difficulty of the next rebirth, allowing you to make it easier or harder along with \" +\r\n                    \"changing how much moonlight or star shards you earn.\\n\\nRituals require Ritual Points, which are \" +\r\n                    \"earned by sacrificing huge sums of T8 resources, gold, or motes of darkness. Each time you sacrifice a \" +\r\n                    \"resource the cost for that resource increases dramatically. Rituals a broken down into 4 categories:\\n\\n\" +\r\n                    \"-Rituals of Empowerment: These give PERMANENT boosts to a given stat, increasing it by a flat amount. \" +\r\n                    \"Each point gives more than the last.\\n\\n\" +\r\n                    \"-Rituals of Corruption: These rituals increase various stats in exchange for decreasing your moonlight or \" +\r\n                    \"star shards earned.\\n\\n\" +\r\n                    \"-Rituals of Destruction: These rituals increase the difficulty in exchange for increasing your moonlight or \" +\r\n                    \"star shards earned.\\n\\n\" +\r\n                    \"-Rituals of Exchange: Increases moonlight or star shards earned in exchange for decreasing the other one.\\n\\n\" +\r\n                    \"Rituals are multiplicative with each other. For example if you have two rituals that give a 25% bonus to moonlight, \" +\r\n                    \"it's calculated as 1.25 x 1.25 = 1.56x increase to moonlight. All rituals (except Empowerment) last for the next \" +\r\n                    \"rebirth. They work in challenges too!\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n            case 17:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Rune Transmutation Map\"));\r\n                var helptxt = \"What does it all mean, basil?\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                this.guideTexts.push(this.scene.add.image(this.x + 430, this.y + 335, \"runemap\", 0).setOrigin(0.5))\r\n                break;\r\n            case 18:\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Blueprints\"));\r\n                var helptxt = \"You can finally tell the villagers to build their own damn buildings. There's a new 'Blueprint' \" +\r\n                    \"button in the region tab. From there you can choose any of your blueprint slots and create a blueprint for your \" +\r\n                    \"villagers to follow. You can place any building anywhere in the blueprint, but the villagers will only build it \" +\r\n                    \"if it's valid. They won't build unconnected roads, for example. Oh yeah, the mine icon is used as a placeholder \" +\r\n                    \"for all production buildings. When you place a mine the villagers will try to build the highest yield production \" +\r\n                    \"building on that tile.\\n\\n\" +\r\n                    \"On the region screen you can choose a blueprint to follow. At the end of each week the villagers will try to \" +\r\n                    \"build as many buildings as they can, although they're pretty stupid so that usually ends up being only a handful \" +\r\n                    \"of buildings. They'll get there eventually.\";\r\n                this.guideTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 70, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(helptxt, 72)));\r\n                break;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.titleLabel.destroy();\r\n        this.closeButton.destroy();\r\n        for (var i = 0; i < this.btns.length; i++) {\r\n            this.btns[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.guideTexts.length; i++) {\r\n            this.guideTexts[i].destroy();\r\n        }\r\n    }\r\n\r\n    onCloseHandler(callback) {\r\n        this.closeButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/GuideWindow.js?");

/***/ }),

/***/ "./src/ui/HighlightElementGroup.js":
/*!*****************************************!*\
  !*** ./src/ui/HighlightElementGroup.js ***!
  \*****************************************/
/*! exports provided: HighlightElementGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HighlightElementGroup\", function() { return HighlightElementGroup; });\nclass HighlightElementGroup {\r\n    constructor(highlightClr, baseClr, highTextClr, baseTextClr) {\r\n        this.highlightClr = highlightClr;\r\n        this.baseClr = baseClr;\r\n        this.highTextClr = highTextClr;\r\n        this.baseTextClr = baseTextClr;\r\n\r\n        this.elements = [];\r\n    }\r\n\r\n    addElement(element) {\r\n        this.elements.push(element);\r\n        var idx = this.elements.length - 1;\r\n        element.onClickHandler(() => { this._updateHighlights(idx); });\r\n    }\r\n\r\n    _updateHighlights(idx) {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].setBackgroundColor(this.baseClr);\r\n            this.elements[i].setTextColor(this.baseTextClr);\r\n        }\r\n        this.elements[idx].setBackgroundColor(this.highlightClr);\r\n        this.elements[idx].setTextColor(this.highTextClr);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/HighlightElementGroup.js?");

/***/ }),

/***/ "./src/ui/ImageButton.js":
/*!*******************************!*\
  !*** ./src/ui/ImageButton.js ***!
  \*******************************/
/*! exports provided: ImageButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageButton\", function() { return ImageButton; });\nclass ImageButton {\r\n    constructor(sceneContext, x, y, width, height, texture, depth = 0) {\r\n        this.backgroundRect = sceneContext.add.rectangle(x, y, width, height, 0x000000).setOrigin(0, 0).setDepth(depth);\r\n        this.backgroundRect.isStroked = true;\r\n        this.backgroundRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backgroundRect.lineWidth = 1;\r\n        this.img = sceneContext.add.image(x + width / 2, y + height / 2, texture.sprite, texture.tile).setOrigin(0.5).setDepth(depth);\r\n        this.img.displayWidth = width;\r\n        this.img.displayHeight = height;\r\n        this.enabled = true;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.backgroundRect.setPosition(x, y);\r\n        this.img.setPosition(x + this.width / 2, y + this.height / 2);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.backgroundRect.setVisible(visible);\r\n        this.img.setVisible(visible);\r\n    }\r\n\r\n    setTexture(texture) {\r\n        this.img.setTexture(texture.sprite, texture.tile);\r\n    }\r\n\r\n    setEnable(enabled) {\r\n        this.enabled = enabled;\r\n    }\r\n\r\n    setTint(clr) {\r\n        this.img.setTint(clr);\r\n    }\r\n    clearTint() {\r\n        this.img.clearTint();\r\n    }\r\n\r\n    setBorderTint(clr) {\r\n        this.backgroundRect.strokeColor = clr;\r\n    }\r\n\r\n    removeBackground() {\r\n        this.backgroundRect.alpha = 0.01;\r\n    }\r\n\r\n    _onClick(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n    _onPointerUp(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n    _onPointerOut(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n    _onPointerOver(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    onClickHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerdown\", () => { this._onClick(callback) });\r\n        return this;\r\n    }\r\n    onPointerOutHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerout\", () => { this._onPointerOut(callback) });\r\n        return this;\r\n    }\r\n    onPointerUpHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerup\", () => { this._onPointerUp(callback) });\r\n        return this;\r\n    }\r\n    onPointerOverHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerover\", () => { this._onPointerOver(callback) });\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backgroundRect.destroy();\r\n        this.img.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ImageButton.js?");

/***/ }),

/***/ "./src/ui/LoreLabel.js":
/*!*****************************!*\
  !*** ./src/ui/LoreLabel.js ***!
  \*****************************/
/*! exports provided: LoreLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LoreLabel\", function() { return LoreLabel; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\nclass LoreLabel {\r\n    constructor(sceneContext, x, y, text, textWidth, font, fontsize) {\r\n        var processedText = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].processText(text, textWidth);\r\n        this.textLabel = sceneContext.add.bitmapText(x, y, font, processedText, fontsize);\r\n\r\n        this.height = this.textLabel.getTextBounds(true).local.height + 5;\r\n        this.separator = sceneContext.add.rectangle(x + 10, y + this.height, x + (textWidth * fontsize) - 20, 4,\r\n            Phaser.Display.Color.GetColor(64, 64, 64)).setOrigin(0, 0);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    getHeight() { return this.y + this.height + 10; }\r\n    getPosX() { return this.x; }\r\n    getPosY() { return this.y; }\r\n\r\n    setPosition(x, y) {\r\n        this.textLabel.setPosition(x, y);\r\n        this.separator.setPosition(x, y + this.height);\r\n    }\r\n\r\n    destroy() {\r\n        this.textLabel.destroy();\r\n        this.separator.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/LoreLabel.js?");

/***/ }),

/***/ "./src/ui/MyrahTileDialog.js":
/*!***********************************!*\
  !*** ./src/ui/MyrahTileDialog.js ***!
  \***********************************/
/*! exports provided: MyrahTileDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MyrahTileDialog\", function() { return MyrahTileDialog; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\nclass MyrahTileDialog {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 400, 270, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(177, 100, 169);\r\n        this.backingRect.lineWidth = 2;\r\n\r\n        this.titleLabel = scene.add.bitmapText(x + 200, y + 10, \"courier20\", \"Starlight Palace\").setOrigin(0.5, 0);\r\n        this.titleLabel.setTint(Phaser.Display.Color.GetColor(177, 100, 169));\r\n\r\n        var desc = \"You've made it to the only structure you can see in this vast void, a palace made from the light of thousands \" +\r\n        \"of stars. You get the feeling that everything you've done in this world has lead to this moment. Who knows what's inside? \" +\r\n        \"Maybe you should grab a meal, do some stretches, and inject a few million shade into your veins before entering.\";\r\n        desc = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].processText(desc, 48);\r\n        this.descLabel = scene.add.bitmapText(x + 200, y + 50, \"courier16\", desc, 16, 1).setOrigin(0.5, 0);\r\n\r\n        this.enterButton = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](scene, x + 30, y + 240, 155, 20, \"Enter\");\r\n        this.leaveButton = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](scene, x + 215, y + 240, 155, 20, \"Leave\");\r\n    }\r\n\r\n    onRebirthHandler(callback) {\r\n        this.enterButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n    onLeaveHandler(callback) {\r\n        this.leaveButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.titleLabel.destroy();\r\n        this.descLabel.destroy();\r\n        this.enterButton.destroy();\r\n        this.leaveButton.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/MyrahTileDialog.js?");

/***/ }),

/***/ "./src/ui/NewRegionWindow.js":
/*!***********************************!*\
  !*** ./src/ui/NewRegionWindow.js ***!
  \***********************************/
/*! exports provided: NewRegionWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NewRegionWindow\", function() { return NewRegionWindow; });\n/* harmony import */ var _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _TooltipImage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TooltipImage */ \"./src/ui/TooltipImage.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass NewRegionWindow {\r\n    constructor(scene, x, y, regions) {\r\n        this.backingRect = scene.add.rectangle(x, y, 600, 400, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 4;\r\n\r\n        this.title = scene.add.bitmapText(x + 300, y + 10, \"courier16\", \"THE MIST OPENS TO REVEAL A PATH.\\n\" +\r\n            \"THE PATH IS WINDING, WHO KNOWS WHAT LIES BEYOND?\", 16, 1).setOrigin(0.5, 0);\r\n        this.title.setTint(Phaser.Display.Color.GetColor(96, 172, 177));\r\n\r\n        this.dividers = [];\r\n        this.dividers.push(scene.add.line(0, 0, x + 200, y + 60, x + 200, y + 340,\r\n            Phaser.Display.Color.GetColor(255, 255, 255)).setOrigin(0).setLineWidth(1));\r\n        this.dividers.push(scene.add.line(0, 0, x + 400, y + 60, x + 400, y + 340,\r\n            Phaser.Display.Color.GetColor(255, 255, 255)).setOrigin(0).setLineWidth(1));\r\n\r\n        this.choiceBtns = [];\r\n        this.uiElements = [];\r\n\r\n        for (var i = 0; i < regions.length; i++) {\r\n            this.uiElements.push(scene.add.bitmapText(x + 100 + (i * 200), y + 65, \"courier20\",\r\n                _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_0__[\"RegionRegistry\"].REGION_TYPES[regions[i].type].name).setOrigin(0.5, 0));\r\n            var texture = _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getRegionImage(regions[i].type);\r\n            var img = scene.add.image(x + 100 + (i * 200), y + 85, texture.sprite, texture.tile).setOrigin(0.5, 0);\r\n            img.displayWidth = 48;\r\n            img.displayHeight = 48;\r\n            this.uiElements.push(img);\r\n            var traitStart = 100 - regions[i].traits.length * 10;\r\n            for (var t = 0; t < regions[i].traits.length; t++) {\r\n                this.uiElements.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_4__[\"TooltipImage\"](scene, x + traitStart + (i * 200) + (t * 20), y + 137, 16, 16,\r\n                    _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTraitImage(regions[i].traits[t]), _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTraitTooltip(regions[i].traits[t])));\r\n            }\r\n            this.uiElements.push(scene.add.bitmapText(x + 5 + (i * 200), y + 155, \"courier16\",\r\n                _utils_Common__WEBPACK_IMPORTED_MODULE_2__[\"Common\"].processText(_data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getRegionTooltip(regions[i].type), 23)));\r\n\r\n            this.choiceBtns.push(new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 40 + (i * 200), y + 300, 120, 20, \"TRAVEL\"));\r\n        }\r\n\r\n        this.cancelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_3__[\"TextButton\"](scene, x + 240, y + 365, 120, 20, \"STEP AWAY\");\r\n    }\r\n\r\n    onSelectHandler(callback) {\r\n        this.choiceBtns[0].onClickHandler(() => { callback(0); });\r\n        this.choiceBtns[1].onClickHandler(() => { callback(1); });\r\n        this.choiceBtns[2].onClickHandler(() => { callback(2); });\r\n        return this;\r\n    }\r\n    onCancelHandler(callback) {\r\n        this.cancelBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.title.destroy();\r\n        this.cancelBtn.destroy();\r\n        for (var i = 0; i < this.dividers.length; i++) {\r\n            this.dividers[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.uiElements.length; i++) {\r\n            this.uiElements[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.choiceBtns.length; i++) {\r\n            this.choiceBtns[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/NewRegionWindow.js?");

/***/ }),

/***/ "./src/ui/OptionsDialog.js":
/*!*********************************!*\
  !*** ./src/ui/OptionsDialog.js ***!
  \*********************************/
/*! exports provided: OptionsDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OptionsDialog\", function() { return OptionsDialog; });\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass OptionsDialog {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 400, 500, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 2;\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.titleLabel = scene.add.bitmapText(x + 200, y + 10, \"courier20\", \"Import/Export Save\").setOrigin(0.5, 0);\r\n        var txt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(\"Copies your save information to/from the clipboard so you can backup your save or send \" +\r\n            \"it to another computer.\", 46);\r\n        this.descLabel = scene.add.bitmapText(x + 15, y + 40, \"courier16\", txt, 16, 1);\r\n\r\n        this.manualSaveLabel = scene.add.bitmapText(x + 10, y + 150, \"courier20\", \"Manual Save\");\r\n        txt = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(\"Click to manually save your game.\", 42);\r\n        this.mSaveDescLabel = scene.add.bitmapText(x + 10, y + 180, \"courier16\", txt);\r\n\r\n        this.exportButton = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 63, y + 100, 110, 20, \"Export\")\r\n            .onClickHandler(() => { this._export(); });\r\n        this.importButton = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 236, y + 100, 110, 20, \"Import\")\r\n            .onClickHandler(() => { this._import(); });\r\n        this.saveButton = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 280, y + 180, 110, 20, \"Save\")\r\n            .onClickHandler(() => { this._save(); });\r\n\r\n        this.optLabel = scene.add.bitmapText(x + 10, y + 220, \"courier20\", \"Options\");\r\n        this.combatLabel = scene.add.bitmapText(x + 10, y + 245, \"courier16\", \"Show Combat Tab on Explore\");\r\n        txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().openCombatOnExplore ? \"True\" : \"False\";\r\n        this.combatBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 260, y + 245, 110, 20, txt)\r\n            .onClickHandler(() => { this._toggleCombatOnExplore(); });\r\n        this.exploreLabel = scene.add.bitmapText(x + 10, y + 270, \"courier16\", \"Auto Explore Mode\");\r\n        var txt = \"\";\r\n        switch (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreOptions) {\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_WEAKEST:\r\n                txt = \"Weakest\";\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_HOLD:\r\n                txt = \"Hold\";\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_STRONGEST:\r\n                txt = \"Strongest\";\r\n                break;\r\n        }\r\n        this.exploreBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 260, y + 270, 110, 20, txt)\r\n            .onClickHandler(() => { this._toggleAutoExploreMode(); });\r\n        this.exploreLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n        this.exploreBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore);\r\n\r\n        this.defaultTownLabel = scene.add.bitmapText(x + 10, y + 295, \"courier16\", \"Default Auto Town Upgrade\");\r\n        txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault ? \"True\" : \"False\";\r\n        this.defaultTownBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 260, y + 295, 110, 20, txt)\r\n            .onClickHandler(() => { this._toggleDefaultTown(); });\r\n        this.defaultTownLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoTown);\r\n        this.defaultTownBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoTown);\r\n\r\n        this.regionExploreLabel = scene.add.bitmapText(x + 10, y + 320, \"courier16\", \"Auto Explore's new Regions\");\r\n        txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreRegions ? \"True\" : \"False\";\r\n        this.regionExploreBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 260, y + 320, 110, 20, txt)\r\n            .onClickHandler(() => { this._toggleRegionExplore(); });\r\n        this.regionExploreLabel.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore2);\r\n        this.regionExploreBtn.setVisible(_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_1__[\"ProgressionStore\"].getInstance().persistentUnlocks.autoExplore2);\r\n\r\n        this.closeButton = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](scene, x + 280, y + 470, 110, 20, \"Back\");\r\n\r\n        this.elements = [this.titleLabel, this.descLabel, this.manualSaveLabel, this.mSaveDescLabel, this.exportButton,\r\n        this.importButton, this.saveButton, this.optLabel, this.combatLabel, this.combatBtn, this.exploreLabel,\r\n        this.exploreBtn, this.defaultTownLabel, this.defaultTownBtn, this.regionExploreLabel, this.regionExploreBtn,\r\n        this.closeButton, this.backingRect];\r\n    }\r\n\r\n    _toggleCombatOnExplore() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().openCombatOnExplore = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().openCombatOnExplore === true ? false : true;\r\n        var txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().openCombatOnExplore ? \"True\" : \"False\";\r\n        this.combatBtn.setText(txt);\r\n    }\r\n\r\n    _toggleDefaultTown() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault === true ? false : true;\r\n        var txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoTownUpgradeDefault ? \"True\" : \"False\";\r\n        this.defaultTownBtn.setText(txt);\r\n    }\r\n\r\n    _toggleRegionExplore() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreRegions = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreRegions === true ? false : true;\r\n        var txt = _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreRegions ? \"True\" : \"False\";\r\n        this.regionExploreBtn.setText(txt);\r\n    }\r\n\r\n    _toggleAutoExploreMode() {\r\n        _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreOptions = (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreOptions + 1) % 3;\r\n        var txt = \"\";\r\n        switch (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_0__[\"DynamicSettings\"].getInstance().autoExploreOptions) {\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_WEAKEST:\r\n                txt = \"Weakest\";\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_HOLD:\r\n                txt = \"Hold\";\r\n                break;\r\n            case _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].AUTOEXPLORE_STRONGEST:\r\n                txt = \"Strongest\";\r\n                break;\r\n        }\r\n        this.exploreBtn.setText(txt);\r\n    }\r\n\r\n    _save() {\r\n        this.scene.scene.get(\"DarkWorld\").save();\r\n        this.saveButton.setText(\"Saved!\")\r\n    }\r\n\r\n    _export() {\r\n        this.scene.scene.get(\"DarkWorld\").copyToClipboard();\r\n        this.exportButton.setText(\"Copied!\")\r\n    }\r\n    _import() {\r\n        this.scene.scene.get(\"DarkWorld\").copyFromClipboard();\r\n        this.importButton.setText(\"Loaded!\")\r\n    }\r\n\r\n    destroy() {\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n\r\n    onCloseHandler(callback) {\r\n        this.closeButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/OptionsDialog.js?");

/***/ }),

/***/ "./src/ui/ProgressBar.js":
/*!*******************************!*\
  !*** ./src/ui/ProgressBar.js ***!
  \*******************************/
/*! exports provided: ProgressBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProgressBar\", function() { return ProgressBar; });\nclass ProgressBar {\r\n    constructor(sceneContext, x, y, width, height, barColor, barBackgroundColor, text) {\r\n        this.backgroundRect = sceneContext.add.rectangle(x, y, width, height, barBackgroundColor).setOrigin(0, 0);\r\n        this.fillRect = sceneContext.add.rectangle(x + 1, y + 1, width - 2, height - 2, barColor).setOrigin(0, 0);\r\n        this.fillRect2 = sceneContext.add.rectangle(x + 1, y + 1, width - 2, height - 2, Phaser.Display.Color.GetColor(100, 75, 200)).setOrigin(0, 0);\r\n        this.fillRect2.displayWidth = 0;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.progressText = sceneContext.add.bitmapText(x + width / 2, y + height / 2, \"courier16\", text).setOrigin(0.5, 0.5);\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.backgroundRect.setPosition(x, y);\r\n        this.fillRect.setPosition(x + 1, y + 1);\r\n        this.fillRect2.setPosition(x + 1, y + 1);\r\n        this.progressText.setPosition(x + this.width / 2, y + this.height / 2);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.backgroundRect.setVisible(visible);\r\n        this.fillRect.setVisible(visible);\r\n        this.fillRect2.setVisible(visible);\r\n        this.progressText.setVisible(visible);\r\n    }\r\n\r\n    setTextColor(clr) {\r\n        this.progressText.setTint(clr);\r\n    }\r\n\r\n    setFillPercent(percent, text = \"\") {\r\n        percent = Math.max(0, Math.min(1, percent));\r\n        this.fillRect.displayWidth = Math.floor(percent * (this.width - 2));\r\n        this.progressText.setText(text);\r\n    }\r\n\r\n    setSecondaryFillPercent(percent) {\r\n        percent = Math.max(0, Math.min(1, percent));\r\n        this.fillRect2.displayWidth = Math.floor(percent * (this.width - 2));\r\n    }\r\n\r\n    destroy() {\r\n        this.backgroundRect.destroy();\r\n        this.fillRect.destroy();\r\n        this.fillRect2.destroy();\r\n        this.progressText.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/ProgressBar.js?");

/***/ }),

/***/ "./src/ui/RebirthDialog.js":
/*!*********************************!*\
  !*** ./src/ui/RebirthDialog.js ***!
  \*********************************/
/*! exports provided: RebirthDialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RebirthDialog\", function() { return RebirthDialog; });\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass RebirthDialog {\r\n    constructor(scene, x, y, regionLevel) {\r\n        this.backingRect = scene.add.rectangle(x, y, 400, 320, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 0, 200);\r\n        this.backingRect.lineWidth = 2;\r\n\r\n        this.titleLabel = scene.add.bitmapText(x + 200, y + 10, \"courier20\", \"Mystic Gate\").setOrigin(0.5, 0);\r\n        this.titleLabel.setTint(Phaser.Display.Color.GetColor(200, 0, 200));\r\n\r\n        var desc = \"You approach the mysterious, ancient gate. The air buzzes with energy as you peer into the pale \" +\r\n            \"blue portal. All those shadow beasts, guarding this place.. what's so important about this?\";\r\n        desc = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].processText(desc, 48);\r\n        this.descLabel = scene.add.bitmapText(x + 200, y + 30, \"courier16\", desc, 16, 1).setOrigin(0.5, 0);\r\n\r\n        var descColor = Phaser.Display.Color.GetColor(96, 172, 177);\r\n        switch (regionLevel) {\r\n            case 0:\r\n                desc = \"\\\"THE MOON CALLS TO ALL IN THESE LANDS THAT WOULD HEAR IT. BE REBORN IN MOONLIGHT.\\\"\";\r\n                break;\r\n            case 1:\r\n                desc = \"\\\"THE CHILD RETURNS, TRAVELLING THE HORIZON. MY BOUNTY FLURISHES WITH EACH STEP.\\\"\";\r\n                break;\r\n            case 2:\r\n                desc = \"\\\"I SPEAK, YET DO NOT HEAR. MYRAH KEEPS ALL IN SHADOW. THE STARLESS NIGHT RETURNS.\\\"\";\r\n                break;\r\n            case 3:\r\n                desc = \"\\\"MOONLIGHT STRENGTHENS YOU, BUT I OFFER MORE. FACE MY CHALLENGES, FOR THERE ARE GREATER DANGERS.\\\"\";\r\n                break;\r\n            case 4:\r\n                desc = \"\\\"DO YOU WAVER, CHILD OF MOONLIGHT? YOUR STRENGTH GROWS, BUT FAR HAS MYRAH HID... TURNING ALL AGAINST US.\\\"\";\r\n                break;\r\n            case 5:\r\n                desc = \"\\\"...\\\"\";\r\n                break;\r\n            case 6:\r\n                desc = \"\\\"YOU TRAVEL FAR. MYRAH TRIES TO HIDE MY VOICE. COME, MY CHALLENGES WILL PREPARE YOU FOR THE COMING NIGHT.\\\"\"\r\n                break;\r\n            case 7:\r\n                desc = \"\\\"WE WILL NOT RETURN, SLAVE OF MOONLIGHT. THE STARS WILL NOT COME TO YOU. LEAVE NOW.\\\"\";\r\n                descColor = Phaser.Display.Color.GetColor(177, 100, 169);\r\n                break;\r\n            case 8:\r\n                desc = \"\\\"DO NOT LISTEN. THEIR LIES ARE AS NUMEROUS AS THE STARS IN THE SKY. WE SHALL PURGE THEM BOTH.\\\"\";\r\n                break;\r\n            case 9:\r\n                desc = \"\\\"THE VOID, I FEEL IT NEAR. ARE YOU PREPARED, CHILD, FOR THE END?\\\"\"\r\n                break;\r\n            case 10:\r\n                desc = \"\\\"DO YOU STILL HUNT US, SLAVE OF MOONLIGHT? THE BETRAYER STAR WATCHES.\\\"\";\r\n                descColor = Phaser.Display.Color.GetColor(177, 100, 169);\r\n                break;\r\n            default:\r\n                desc = \"\\\"...\\\"\";\r\n                break;\r\n        }\r\n        desc = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].processText(desc, 48);\r\n        this.desc2Label = scene.add.bitmapText(x + 200, y + 107, \"courier16\", desc, 16, 1).setOrigin(0.5, 0);\r\n        this.desc2Label.setTint(descColor);\r\n\r\n        desc = \"You hear a voice calling to you. Do you enter into the unknown, or continue your journey?\";\r\n        desc = _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].processText(desc, 48);\r\n        this.desc3Label = scene.add.bitmapText(x + 200, y + 150, \"courier16\", desc, 16, 1).setOrigin(0.5, 0);\r\n\r\n\r\n        var playerData = new _data_PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"]();\r\n        var costTxt = \"MOONLIGHT\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(Math.round(playerData.earnableMoonlight(regionLevel + 1)));\r\n        this.moonlightLabel = scene.add.bitmapText(x + 200, y + 190, \"courier20\", costTxt, 20, 1).setOrigin(0.5, 0);\r\n        this.moonlightLabel.setTint(Phaser.Display.Color.GetColor(206, 238, 240));\r\n\r\n        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.starshards === true) {\r\n            var costTxt = \"STAR SHARDS\\n\" + _utils_Common__WEBPACK_IMPORTED_MODULE_0__[\"Common\"].numberString(_data_WorldData__WEBPACK_IMPORTED_MODULE_4__[\"WorldData\"].getInstance().starshardsEarned);\r\n            this.starshardLabel = scene.add.bitmapText(x + 200, y + 240, \"courier20\", costTxt, 20, 1).setOrigin(0.5, 0);\r\n            this.starshardLabel.setTint(Phaser.Display.Color.GetColor(177, 100, 169));\r\n        }\r\n\r\n        this.rebirthButton = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](scene, x + 30, y + 290, 155, 20, \"Enter\");\r\n        this.leaveButton = new _TextButton__WEBPACK_IMPORTED_MODULE_2__[\"TextButton\"](scene, x + 215, y + 290, 155, 20, \"Leave\");\r\n    }\r\n\r\n    onRebirthHandler(callback) {\r\n        this.rebirthButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n    onLeaveHandler(callback) {\r\n        this.leaveButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.titleLabel.destroy();\r\n        this.descLabel.destroy();\r\n        this.desc2Label.destroy();\r\n        this.desc3Label.destroy();\r\n        this.moonlightLabel.destroy();\r\n        if (this.starshardLabel !== undefined) {\r\n            this.starshardLabel.destroy();\r\n        }\r\n        this.rebirthButton.destroy();\r\n        this.leaveButton.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/RebirthDialog.js?");

/***/ }),

/***/ "./src/ui/RegionButton.js":
/*!********************************!*\
  !*** ./src/ui/RegionButton.js ***!
  \********************************/
/*! exports provided: RegionButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionButton\", function() { return RegionButton; });\n/* harmony import */ var _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/RegionRegistry */ \"./src/data/RegionRegistry.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _TooltipImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TooltipImage */ \"./src/ui/TooltipImage.js\");\n\r\n\r\n\r\n\r\nclass RegionButton {\r\n    constructor(scene, x, y, region) {\r\n        this.backingRect = scene.add.rectangle(x, y, 96, 96, Phaser.Display.Color.GetColor(64, 64, 64))\r\n            .setOrigin(0, 0);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 1;\r\n        this.traitIcons = [];\r\n\r\n        if (region === undefined) {\r\n            this.title = scene.add.bitmapText(x + 48, y + 5, \"courier16\", \"???\").setOrigin(0.5, 0);\r\n            this.regionImg = new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](scene, x + 24, y + 24, 48, 48, _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getRegionImage('unknown'),\r\n                \"The road between lands, who know's where this will lead?\");\r\n        } else {\r\n            this.title = scene.add.bitmapText(x + 48, y + 5, \"courier16\", _data_RegionRegistry__WEBPACK_IMPORTED_MODULE_0__[\"RegionRegistry\"].REGION_TYPES[region.type].name).setOrigin(0.5, 0);\r\n            this.regionImg = new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](scene, x + 24, y + 24, 48, 48, _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getRegionImage(region.type),\r\n                _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getRegionTooltip(region.type));\r\n\r\n            for (var i = 0; i < region.traits.length; i++) {\r\n                this.traitIcons.push(new _TooltipImage__WEBPACK_IMPORTED_MODULE_2__[\"TooltipImage\"](scene, x + 2 + (i * 20), y + 75, 16, 16,\r\n                    _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTraitImage(region.traits[i]), _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_1__[\"TooltipRegistry\"].getTraitTooltip(region.traits[i])));\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickHandler(callback) {\r\n        this.backingRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerdown\", () => { callback(); });\r\n        this.regionImg.onClickHandler(callback);\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.title.destroy();\r\n        this.regionImg.destroy();\r\n        for (var i = 0; i < this.traitIcons.length; i++) {\r\n            this.traitIcons[i].destroy();\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.backingRect.setVisible(visible);\r\n        this.title.setVisible(visible);\r\n        this.regionImg.setVisible(visible);\r\n        for (var i = 0; i < this.traitIcons.length; i++) {\r\n            this.traitIcons[i].setVisible(visible);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/RegionButton.js?");

/***/ }),

/***/ "./src/ui/RuneUpgradeWindow.js":
/*!*************************************!*\
  !*** ./src/ui/RuneUpgradeWindow.js ***!
  \*************************************/
/*! exports provided: RuneUpgradeWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RuneUpgradeWindow\", function() { return RuneUpgradeWindow; });\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/RuneRegistry */ \"./src/data/RuneRegistry.js\");\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _FloatingTooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _ImageButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RuneUpgradeWindow {\r\n    constructor(sceneContext, x, y) {\r\n        this.selectedRune = -1;\r\n        this.scene = sceneContext;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.hoveredElement = -1;\r\n        this.backRect = sceneContext.add.rectangle(x, y, 700, 550, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setInteractive()\r\n            .setOrigin(0, 0).setDepth(999);\r\n        this.backRect.isStroked = true;\r\n        this.backRect.strokeColor = Phaser.Display.Color.GetColor(128, 128, 128);\r\n        this.backRect.lineWidth = 2;\r\n        this.separator = sceneContext.add.rectangle(x + 250, y, 2, 550,\r\n            Phaser.Display.Color.GetColor(128, 128, 128)).setOrigin(0, 0).setDepth(999);\r\n\r\n        this.upgradeTitle = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", \"UPGRADE\").setOrigin(0, 0).setDepth(999);\r\n        this.runeTitle = sceneContext.add.bitmapText(x + 260, y + 5, \"courier20\", \"RUNES\").setOrigin(0, 0).setDepth(999);\r\n        this.sortNameBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, this.x + 350, this.y + 5, 35, 20, \"A-Z\", 999)\r\n            .onClickHandler(() => { this._sortRunes(0); });\r\n        this.sortLevelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, this.x + 390, this.y + 5, 35, 20, \"Lv\", 999)\r\n            .onClickHandler(() => { this._sortRunes(1); });\r\n\r\n        this.runeInventory = [];\r\n        this.upgradeRune = this.scene.add.image(x + 125, y + 50, \"runeicons\", 0).setOrigin(0.5).setDepth(999);\r\n        this.upgradeRune.displayWidth = 48;\r\n        this.upgradeRune.displayHeight = 48;\r\n        this.runeText = [];\r\n\r\n        this.upgradeBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, this.x + 20, this.y + 315, 120, 20, \"Upgrade\", 999);\r\n        this.upgradeBtn.onClickHandler(() => { this._upgradeRune(); });\r\n        this.shatterBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, this.x + 20, this.y + 515, 120, 20, \"Shatter\", 999);\r\n        this.shatterBtn.onClickHandler(() => { this._shatterRune(); });\r\n        this.transmute1Btn = new _ImageButton__WEBPACK_IMPORTED_MODULE_5__[\"ImageButton\"](this.scene, this.x + 30, this.y + 385, 48, 48,\r\n            _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(\"Tyr\"), 999);\r\n        this.transmute1Btn.onClickHandler(() => { this._transmuteRune(0); });\r\n        this.transmute2Btn = new _ImageButton__WEBPACK_IMPORTED_MODULE_5__[\"ImageButton\"](this.scene, this.x + 100, this.y + 385, 48, 48,\r\n            _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(\"Empty\"), 999);\r\n        this.transmute2Btn.onClickHandler(() => { this._transmuteRune(1); });\r\n        this.transmute3Btn = new _ImageButton__WEBPACK_IMPORTED_MODULE_5__[\"ImageButton\"](this.scene, this.x + 170, this.y + 385, 48, 48,\r\n            _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(\"Empty\"), 999);\r\n        this.transmute3Btn.onClickHandler(() => { this._transmuteRune(2); });\r\n        this.upgradeTxt = this.scene.add.bitmapText(this.x + 125, this.y + 275, \"courier16\",\r\n            \"Empower this rune with\\nMotes of Darkness\").setOrigin(0.5, 0).setDepth(999);\r\n        this.upgradeTxt.setCenterAlign();\r\n        this.rerollTxt = this.scene.add.bitmapText(this.x + 125, this.y + 345, \"courier16\",\r\n            \"Use Motes to Reforge this\\nRune into a different Rune.\").setOrigin(0.5, 0).setDepth(999);\r\n        this.rerollTxt.setCenterAlign();\r\n        this.shatterTxt = this.scene.add.bitmapText(this.x + 125, this.y + 470, \"courier16\",\r\n            \"Shatter this rune for\\nMotes of Darkness.\").setOrigin(0.5, 0).setDepth(999);\r\n        this.shatterTxt.setCenterAlign();\r\n        this.upgradeCost = this.scene.add.bitmapText(this.x + 205, this.y + 316, \"courier16\", \"\").setOrigin(1, 0).setDepth(999);\r\n        this.rerollCost = this.scene.add.bitmapText(this.x + 130, this.y + 441, \"courier16\", \"\").setOrigin(1, 0).setDepth(999);\r\n        this.shatterCost = this.scene.add.bitmapText(this.x + 205, this.y + 516, \"courier16\", \"\").setOrigin(1, 0).setDepth(999);\r\n        this.upgradeIcon = this.scene.add.image(x + 220, y + 325, \"icons\", 39).setDepth(999);\r\n        this.upgradeIcon.displayWidth = 20;\r\n        this.upgradeIcon.displayHeight = 20;\r\n        this.rerollIcon = this.scene.add.image(x + 145, y + 450, \"icons\", 39).setDepth(999);\r\n        this.rerollIcon.displayWidth = 20;\r\n        this.rerollIcon.displayHeight = 20;\r\n        this.shatterIcon = this.scene.add.image(x + 220, y + 525, \"icons\", 39).setDepth(999);\r\n        this.shatterIcon.displayWidth = 20;\r\n        this.shatterIcon.displayHeight = 20;\r\n        this.upgradeUI = [\r\n            this.upgradeTxt, this.upgradeBtn, this.rerollTxt,\r\n            this.upgradeCost, this.rerollCost, this.upgradeIcon, this.rerollIcon,\r\n            this.shatterTxt, this.shatterBtn, this.shatterCost, this.shatterIcon,\r\n            this.transmute1Btn, this.transmute2Btn, this.transmute3Btn\r\n        ];\r\n\r\n        this.cancelBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, this.x + 575, this.y + 525, 120, 20, \"Cancel\", 999);\r\n\r\n        this.shatterKey = this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S);\r\n\r\n        this.page = 0;\r\n        this.pageBtns = [];\r\n\r\n        this._setupViews();\r\n        for (var i = 0; i < this.upgradeUI.length; i++) {\r\n            this.upgradeUI[i].setVisible(false);\r\n        }\r\n    }\r\n\r\n    _sortRunes(sortType) {\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().sortRunes(sortType);\r\n        this._switchPage(0);\r\n    }\r\n\r\n    _setupPageBtn(x, y, idx) {\r\n        var pageBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_6__[\"TextButton\"](this.scene, x, y, 30, 20, idx + \"\", 999);\r\n        pageBtn.onClickHandler(() => { this._switchPage(idx); });\r\n        return pageBtn;\r\n    }\r\n\r\n    _switchPage(page) {\r\n        if (this.page !== page) {\r\n            this.selectedRune = -1;\r\n        }\r\n        this.page = page;\r\n        var player = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance();\r\n\r\n        for (var i = 0; i < this.runeInventory.length; i++) {\r\n            this.runeInventory[i].destroy();\r\n        }\r\n        this.runeInventory = [];\r\n\r\n        var idx = 0;\r\n        for (var i = page * 64; i < Math.min(player.runes.length, page * 64 + 64); i++) {\r\n            var posX = this.x + 258 + (idx % 8) * 55;\r\n            var posY = this.y + 30 + Math.floor(idx / 8) * 55;\r\n            this.runeInventory.push(this._setupRuneInventory(this.scene, player.runes[i], posX, posY, i));\r\n            idx += 1;\r\n        }\r\n        if (this.selectedRune !== -1) {\r\n            this._selectRune(this.selectedRune);\r\n        } else {\r\n            for (var i = 0; i < this.runeText.length; i++) {\r\n                this.runeText[i].destroy();\r\n            }\r\n            this.runeText = [];\r\n            this.upgradeRune.destroy();\r\n            this.upgradeRune = this.scene.add.image(this.x + 125, this.y + 50, \"runeicons\", 0).setOrigin(0.5);\r\n            this.upgradeRune.displayWidth = 48;\r\n            this.upgradeRune.displayHeight = 48;\r\n        }\r\n    }\r\n\r\n    _setupViews() {\r\n        for (var i = 0; i < this.pageBtns.length; i++) {\r\n            this.pageBtns[i].destroy();\r\n        }\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        this.pageBtns = [];\r\n        var maxPage = 1 + Math.floor(_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes.length / 64);\r\n        for (var i = 0; i < maxPage; i++) {\r\n            this.pageBtns.push(this._setupPageBtn(this.x + 440 + i * 35, this.y + 5, i));\r\n        }\r\n        this._switchPage(Math.min(maxPage, this.page));\r\n    }\r\n\r\n    _selectRune(idx) {\r\n        for (var i = 0; i < this.runeText.length; i++) {\r\n            this.runeText[i].destroy();\r\n        }\r\n        this.runeText = [];\r\n\r\n        if (this.selectedRune !== -1) {\r\n            this.runeInventory[this.selectedRune % 64].setBorderTint(Phaser.Display.Color.GetColor(255, 255, 255));\r\n        }\r\n        this.selectedRune = idx;\r\n        this.runeInventory[this.selectedRune % 64].setBorderTint(Phaser.Display.Color.GetColor(0, 255, 0));\r\n\r\n        var rune = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune];\r\n        var runeTexture = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(rune.word);\r\n        this.upgradeRune.destroy();\r\n        this.upgradeRune = this.scene.add.image(this.x + 125, this.y + 50, runeTexture.sprite, runeTexture.tile).setOrigin(0.5).setDepth(999);\r\n        this.upgradeRune.displayWidth = 48;\r\n        this.upgradeRune.displayHeight = 48;\r\n        var bonus = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getBonusForRune(rune);\r\n        this.runeText.push(this.scene.add.bitmapText(this.x + 15, this.y + 100, \"courier20\", rune.word + \" Lv\" + rune.level).setDepth(999));\r\n        this.runeText[this.runeText.length - 1].setTint(Phaser.Display.Color.GetColor(200, 0, 200));\r\n        var txt = rune.word + \" Lv\" + rune.level + \"\\n\";\r\n        for (const prop in bonus) {\r\n            txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRuneBonusText(prop, bonus[prop]) + \"\\n\";\r\n        }\r\n        this.runeText.push(this.scene.add.bitmapText(this.x + 20, this.y + 120, \"courier16\", txt).setDepth(999));\r\n\r\n        var transmutes = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTransmutes(rune.word);\r\n        this.transmute1Btn.setTexture(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(transmutes[0]));\r\n        this.transmute2Btn.setTexture(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(transmutes[1]));\r\n        this.transmute3Btn.setTexture(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(transmutes[2]));\r\n\r\n        var cost = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getUpgradeCost(rune);\r\n        this.upgradeCost.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(cost));\r\n        this.rerollCost.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(Math.floor(cost / 2)));\r\n        this.shatterCost.setText(_utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getSellCost(rune)));\r\n\r\n        for (var i = 0; i < this.upgradeUI.length; i++) {\r\n            this.upgradeUI[i].setVisible(true);\r\n        }\r\n    }\r\n\r\n    _upgradeRune() {\r\n        var rune = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune];\r\n        var cost = Math.floor(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getUpgradeCost(rune));\r\n        if (_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().motes >= cost) {\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addMote(-cost);\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune].level += 1;\r\n            this._selectRune(this.selectedRune);\r\n        }\r\n    }\r\n    _transmuteRune(index) {\r\n        var rune = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune];\r\n        var cost = Math.floor(_data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getUpgradeCost(rune) / 2);\r\n        if (_data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().motes >= cost) {\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addMote(-cost);\r\n            var newRune = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getTransmutedRune(rune, index);\r\n            _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune] = newRune;\r\n            this._switchPage(this.page);\r\n        }\r\n    }\r\n    _shatterRune() {\r\n        var rune = _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().runes[this.selectedRune];\r\n        var cost = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getSellCost(rune);\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().removeRune(this.selectedRune);\r\n        _data_PlayerData__WEBPACK_IMPORTED_MODULE_0__[\"PlayerData\"].getInstance().addMote(cost);\r\n        this.selectedRune = -1;\r\n        this._setupViews();\r\n        for (var i = 0; i < this.upgradeUI.length; i++) {\r\n            this.upgradeUI[i].setVisible(false);\r\n        }\r\n    }\r\n\r\n    _setupRuneInventory(sceneContext, rune, x, y, idx) {\r\n        var bonus = _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getBonusForRune(rune);\r\n        var txt = rune.word + \" Lv\" + rune.level + \"\\n\";\r\n        for (const prop in bonus) {\r\n            txt += _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_2__[\"TooltipRegistry\"].getRuneBonusText(prop, bonus[prop]) + \"\\n\";\r\n        }\r\n        var runeBtn = new _ImageButton__WEBPACK_IMPORTED_MODULE_5__[\"ImageButton\"](sceneContext, x, y, 48, 48, _data_RuneRegistry__WEBPACK_IMPORTED_MODULE_1__[\"RuneRegistry\"].getRuneTexture(rune.word), 999);\r\n        runeBtn.onClickHandler(() => { this._selectRune(idx); })\r\n            .onPointerOverHandler(() => { this.hoveredElement = idx; this._showTooltip(sceneContext, txt, x, y); })\r\n            .onPointerOutHandler(() => { this.hoveredElement = -1; this._removeTooltip() });\r\n        return runeBtn;\r\n    }\r\n\r\n    _showTooltip(scenContext, text, x, y) {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        var posX = x + (x + 200 > 1100 ? -152 : 0);\r\n        var posY = y + (y - 60 < 100 ? 50 : -62);\r\n        this.floatingText = new _FloatingTooltip__WEBPACK_IMPORTED_MODULE_4__[\"FloatingTooltip\"](scenContext, text, posX, posY, 200, 60, \"courier16\", 16, 1000);\r\n    }\r\n\r\n    _removeTooltip() {\r\n        this.floatingText.destroy();\r\n        this.floatingText = undefined;\r\n    }\r\n\r\n    onCancelHandler(callback) {\r\n        this.cancelBtn.onClickHandler(() => { callback(); });\r\n        return this;\r\n    }\r\n\r\n    update() {\r\n        if (Phaser.Input.Keyboard.JustUp(this.shatterKey) && this.hoveredElement !== -1) {\r\n            this.selectedRune = this.hoveredElement;\r\n            this._shatterRune();\r\n            this.hoveredElement = -1;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backRect.destroy();\r\n        this.separator.destroy();\r\n        this.upgradeTitle.destroy();\r\n        this.runeTitle.destroy();\r\n        this.cancelBtn.destroy();\r\n        this.upgradeRune.destroy();\r\n        this.sortNameBtn.destroy();\r\n        this.sortLevelBtn.destroy();\r\n        for (var i = 0; i < this.runeInventory.length; i++) {\r\n            this.runeInventory[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.pageBtns.length; i++) {\r\n            this.pageBtns[i].destroy();\r\n        }\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        for (var i = 0; i < this.runeText.length; i++) {\r\n            this.runeText[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.upgradeUI.length; i++) {\r\n            this.upgradeUI[i].destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/RuneUpgradeWindow.js?");

/***/ }),

/***/ "./src/ui/SpriteAnimation.js":
/*!***********************************!*\
  !*** ./src/ui/SpriteAnimation.js ***!
  \***********************************/
/*! exports provided: SpriteAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpriteAnimation\", function() { return SpriteAnimation; });\nclass SpriteAnimation {\r\n    constructor(sceneContext, x, y, sprite, animInfo, onAnimComplete) {\r\n        this.animInfo = animInfo;\r\n        this.frameIdx = 0;\r\n        this.duration = 0;\r\n        this.onCompleteCallback = onAnimComplete;\r\n\r\n        this.spriteObj = sceneContext.add.image(x, y, sprite, animInfo[0].frameId);\r\n        this.spriteObj.displayWidth = 128;\r\n        this.spriteObj.displayHeight = 128;\r\n    }\r\n\r\n    update(delta) {\r\n        this.duration += delta;\r\n        if (this.duration > this.animInfo[this.frameIdx].duration) {\r\n            this.duration -= this.animInfo[this.frameIdx].duration;\r\n            this.frameIdx++;\r\n\r\n            if (this.frameIdx >= this.animInfo.length) {\r\n                this.frameIdx = this.frameIdx % this.animInfo.length;\r\n                if (this.onCompleteCallback !== undefined) {\r\n                    this.onCompleteCallback();\r\n                }\r\n            }\r\n            this.spriteObj.setFrame(this.animInfo[this.frameIdx].frameId);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.spriteObj.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/SpriteAnimation.js?");

/***/ }),

/***/ "./src/ui/StatsWindow.js":
/*!*******************************!*\
  !*** ./src/ui/StatsWindow.js ***!
  \*******************************/
/*! exports provided: StatsWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StatsWindow\", function() { return StatsWindow; });\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_RitualData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/RitualData */ \"./src/data/RitualData.js\");\n/* harmony import */ var _data_StarData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/StarData */ \"./src/data/StarData.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass StatsWindow {\r\n    constructor(scene, x, y) {\r\n        this.backingRect = scene.add.rectangle(x, y, 750, 650, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setOrigin(0, 0).setInteractive();\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backingRect.lineWidth = 2;\r\n        this.scene = scene;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.titleLabel = scene.add.bitmapText(x + 375, y + 10, \"courier20\", \"Stats And Stuff\").setOrigin(0.5, 0);\r\n        var by = y + 40;\r\n        this.coreBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](scene, x + 5, by, 120, 20, \"Core Stats\").onClickHandler(() => { this._showStats(0); });\r\n        by += 22;\r\n        // this.exploreBtn = ProgressionStore.getInstance().unlocks.exploreTab --- true ?\r\n        //     new TextButton(scene, x + 5, by, 120, 20, \"Region\").onClickHandler(() => { this._setGuide(1); }) :\r\n        //     new TextButton(scene, x + 5, by, 120, 20, \"???\");\r\n        // by += 22;\r\n        // this.combatBtn = ProgressionStore.getInstance().unlocks.combatTab --- true ?\r\n        //     new TextButton(scene, x + 5, by, 120, 20, \"Combat\").onClickHandler(() => { this._setGuide(2); }) :\r\n        //     new TextButton(scene, x + 5, by, 120, 20, \"???\");\r\n        // by += 22;\r\n        this.btns = [this.coreBtn];\r\n        this.statTexts = [];\r\n        this.closeButton = new _TextButton__WEBPACK_IMPORTED_MODULE_5__[\"TextButton\"](scene, x + 630, y + 620, 110, 20, \"Back\");\r\n\r\n        this._showStats(0);\r\n    }\r\n\r\n    static statStrings(base, bonus, moonMulti, runeMulti, dungeonMulti, ritualMulti) {\r\n        return \"Base: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(base)) + \"\\n\" +\r\n            \"Gear: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(bonus)) + \"\\n\" +\r\n            \"Moonlight: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(moonMulti * 100)) + \"%\\n\" +\r\n            \"Runes: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(runeMulti * 100)) + \"%\\n\" +\r\n            \"Dungeons: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(dungeonMulti * 100)) + \"%\\n\" +\r\n            \"Rituals: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].numberString(Math.round(ritualMulti * 100)) + \"%\\n\";\r\n    }\r\n\r\n    _showStats(index) {\r\n        for (var i = 0; i < this.statTexts.length; i++) {\r\n            this.statTexts[i].destroy();\r\n        }\r\n        this.statTexts = [];\r\n        switch (index) {\r\n            case 0:\r\n                var p = _data_PlayerData__WEBPACK_IMPORTED_MODULE_1__[\"PlayerData\"].getInstance();\r\n                var s = p.statBlock;\r\n                this.statTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 45, \"courier20\", \"Core Stats\"));\r\n                var txt = \"---Strength---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.strength + p.runeBonuses.strFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.str.level * 10),\r\n                        s.statBonuses.strength,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.str.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.strPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.strength,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05)) + \"\\n\" +\r\n                    \"---Dexterity---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.dexterity + p.runeBonuses.dexFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.dex.level * 10),\r\n                        s.statBonuses.dexterity,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.dex.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.dexPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.dexterity,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05)) + \"\\n\" +\r\n                    \"---Agility---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.agility + p.runeBonuses.agiFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.agi.level * 10),\r\n                        s.statBonuses.agility,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.agi.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.agiPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.agility,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playeroffense * 0.05)) + \"\\n\" +\r\n                    \"---Endurance---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.endurance + p.runeBonuses.endFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.end.level * 10),\r\n                        s.statBonuses.endurance,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.end.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.endPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.endurance,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05)) + \"\\n\";\r\n                this.statTexts.push(this.scene.add.bitmapText(this.x + 150, this.y + 75, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].processText(txt, 72)));\r\n                txt = \"---Recovery---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.recovery + p.runeBonuses.recFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.rec.level * 10),\r\n                        s.statBonuses.recovery,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.rec.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.recPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.recovery,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05)) + \"\\n\" +\r\n                    \"---Defense---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.defense + p.runeBonuses.defFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.def.level * 10),\r\n                        s.statBonuses.defense,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.def.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.defPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.defense,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playerdefense * 0.05)) + \"\\n\" +\r\n                    \"---Accuracy---\\n\" +\r\n                    StatsWindow.statStrings((s.stats.accuracy + p.runeBonuses.accFlat) * (1 + _data_StarData__WEBPACK_IMPORTED_MODULE_3__[\"StarData\"].getInstance().perks.acc.level * 10),\r\n                        s.statBonuses.accuracy,\r\n                        (1 + (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().moonperks.acc.level + _data_MoonlightData__WEBPACK_IMPORTED_MODULE_0__[\"MoonlightData\"].getInstance().challengePoints * 2) * 0.005),\r\n                        (1 + p.runeBonuses.accPercent + p.runeBonuses.allPercent),\r\n                        p.dungeonBonus.accuracy,\r\n                        (1 + _data_RitualData__WEBPACK_IMPORTED_MODULE_2__[\"RitualData\"].getInstance().activePerks.playercrits * 0.15)) + \"\\n\";\r\n                this.statTexts.push(this.scene.add.bitmapText(this.x + 460, this.y + 75, \"courier16\", _utils_Common__WEBPACK_IMPORTED_MODULE_4__[\"Common\"].processText(txt, 72)));\r\n\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.titleLabel.destroy();\r\n        this.closeButton.destroy();\r\n        for (var i = 0; i < this.btns.length; i++) {\r\n            this.btns[i].destroy();\r\n        }\r\n        for (var i = 0; i < this.statTexts.length; i++) {\r\n            this.statTexts[i].destroy();\r\n        }\r\n    }\r\n\r\n    onCloseHandler(callback) {\r\n        this.closeButton.onClickHandler(callback);\r\n        return this;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/StatsWindow.js?");

/***/ }),

/***/ "./src/ui/TechDisplay.js":
/*!*******************************!*\
  !*** ./src/ui/TechDisplay.js ***!
  \*******************************/
/*! exports provided: TechDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TechDisplay\", function() { return TechDisplay; });\n/* harmony import */ var _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/TooltipRegistry */ \"./src/data/TooltipRegistry.js\");\n/* harmony import */ var _data_TownData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/TownData */ \"./src/data/TownData.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass TechDisplay {\r\n    constructor(sceneContext, x, y, tech, townTier) {\r\n        //keep reference for callbacks\r\n        this.tech = tech;\r\n        this.townTier = townTier;\r\n\r\n        this.backingRect = sceneContext.add.rectangle(x + 1, y + 1, 650 - 2, 115 - 2, Phaser.Display.Color.GetColor(0, 0, 0)).setOrigin(0, 0);\r\n        this.backingRect.isStroked = true;\r\n        this.backingRect.strokeColor = Phaser.Display.Color.GetColor(200, 112, 65);\r\n        this.backingRect.lineWidth = 1;\r\n\r\n        this.nameLabel = sceneContext.add.bitmapText(x + 5, y + 5, \"courier20\", tech.name + \" Lv\" + tech.level);\r\n        this.nameLabel.setTint(Phaser.Display.Color.GetColor(212, 175, 55));\r\n\r\n        var descText = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(_data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getTechTooltip(tech, townTier), 77);\r\n        this.descLabel = sceneContext.add.bitmapText(x + 5, y + 25, \"courier16\", descText);\r\n\r\n        var costText = \"Cost: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].numberString(_data_TownData__WEBPACK_IMPORTED_MODULE_1__[\"TownData\"].getTechGoldCost(tech, townTier)) + \" Gold\";\r\n        var resourceCosts = _data_TownData__WEBPACK_IMPORTED_MODULE_1__[\"TownData\"].getTechResourceCost(tech, townTier);\r\n        for (var i = 0; i < resourceCosts.length; i++) {\r\n            if (resourceCosts[i] > 0) {\r\n                costText += \", \" + _data_TooltipRegistry__WEBPACK_IMPORTED_MODULE_0__[\"TooltipRegistry\"].getCostText(i, resourceCosts[i]);\r\n            }\r\n        }\r\n        costText += \", Friend Level \" + tech.level;\r\n        costText = _utils_Common__WEBPACK_IMPORTED_MODULE_3__[\"Common\"].processText(costText, 67);\r\n        this.costLabel = sceneContext.add.bitmapText(x + 5, y + 80, \"courier16\", costText);\r\n\r\n        if (tech.maxLevel !== -1 && tech.level >= tech.maxLevel) {\r\n            this.buyBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](sceneContext, x + 545, y + 90, 100, 20, \"Maxed\")\r\n                .onClickHandler(() => { this._onClick(); });\r\n            this.buyBtn.setEnable(false);\r\n        } else {\r\n            this.buyBtn = new _TextButton__WEBPACK_IMPORTED_MODULE_4__[\"TextButton\"](sceneContext, x + 545, y + 90, 100, 20, \"Upgrade\")\r\n                .onClickHandler(() => { this._onClick(); });\r\n        }\r\n\r\n        this.onClickHandlers = [];\r\n    }\r\n\r\n    registerClick(callback) {\r\n        this.onClickHandlers.push(callback);\r\n        return this;\r\n    }\r\n\r\n    _onClick() {\r\n        for (var i = 0; i < this.onClickHandlers.length; i++) {\r\n            this.onClickHandlers[i]();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backingRect.destroy();\r\n        this.nameLabel.destroy();\r\n        this.descLabel.destroy();\r\n        this.costLabel.destroy();\r\n        this.buyBtn.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/TechDisplay.js?");

/***/ }),

/***/ "./src/ui/TextButton.js":
/*!******************************!*\
  !*** ./src/ui/TextButton.js ***!
  \******************************/
/*! exports provided: TextButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextButton\", function() { return TextButton; });\nclass TextButton {\r\n    constructor(sceneContext, x, y, width, height, text, depth = 0) {\r\n        this.backgroundRect = sceneContext.add.rectangle(x, y, width, height, 0x000000).setOrigin(0, 0).setDepth(depth);\r\n        this.backgroundRect.isStroked = true;\r\n        this.backgroundRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backgroundRect.lineWidth = 1;\r\n        this.rawText = text;\r\n        this.text = sceneContext.add.bitmapText(x + width / 2, y + height / 2 - 1, \"courier20\", text).setOrigin(0.5).setDepth(depth);\r\n        this.enabled = true;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.isNotifying = false;\r\n        this.textClr = 0xffffff;\r\n        this.clickHandlers = [];\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerdown\", () => { this._onClick() });\r\n    }\r\n\r\n    setNotification() {\r\n        this.isNotifying = true;\r\n        this.text.setText(\"!\" + this.rawText + \"!\");\r\n        this.text.setTint(Phaser.Display.Color.GetColor(255, 255, 0));\r\n        return this;\r\n    }\r\n\r\n    setBorderTint(clr) {\r\n        this.backgroundRect.strokeColor = clr;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.backgroundRect.setPosition(x, y);\r\n        this.text.setPosition(x + this.width / 2, y + this.height / 2);\r\n        return this;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.backgroundRect.setVisible(visible);\r\n        this.text.setVisible(visible);\r\n        this.text.setTint(visible === true ? this.textClr : 0x999999);\r\n        return this;\r\n    }\r\n\r\n    setEnable(enabled) {\r\n        this.enabled = enabled;\r\n        this.text.setTint(enabled === true ? this.textClr : 0x999999);\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        this.text.setText(text);\r\n        return this;\r\n    }\r\n    setTextColor(clr) {\r\n        this.text.setTint(clr);\r\n        this.textClr = clr;\r\n        return this;\r\n    }\r\n    setBackgroundColor(clr) {\r\n        this.backgroundRect.fillColor = clr;\r\n    }\r\n\r\n    _onClick() {\r\n        if (this.isNotifying === true) {\r\n            this.isNotifying = false;\r\n            this.text.setText(this.rawText);\r\n            this.text.setTint(this.textClr);\r\n        }\r\n        if (this.enabled === true) {\r\n            for (var i = 0; i < this.clickHandlers.length; i++) {\r\n                this.clickHandlers[i]();\r\n            }\r\n        }\r\n    }\r\n    _onPointerUp(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n    _onPointerOut(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n    _onPointerOver(callback) {\r\n        if (this.enabled === true) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    onClickHandler(callback) {\r\n        this.clickHandlers.push(callback);\r\n        return this;\r\n    }\r\n    onPointerOutHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerout\", () => { this._onPointerOut(callback) });\r\n        return this;\r\n    }\r\n    onPointerUpHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerup\", () => { this._onPointerUp(callback) });\r\n        return this;\r\n    }\r\n    onPointerOverHandler(callback) {\r\n        this.backgroundRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerover\", () => { this._onPointerOver(callback) });\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.backgroundRect.destroy();\r\n        this.text.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/TextButton.js?");

/***/ }),

/***/ "./src/ui/TileSelectWindow.js":
/*!************************************!*\
  !*** ./src/ui/TileSelectWindow.js ***!
  \************************************/
/*! exports provided: TileSelectWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TileSelectWindow\", function() { return TileSelectWindow; });\n/* harmony import */ var _TextButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextButton */ \"./src/ui/TextButton.js\");\n/* harmony import */ var _ImageButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ImageButton */ \"./src/ui/ImageButton.js\");\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n/* harmony import */ var _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/ProgressionStore */ \"./src/data/ProgressionStore.js\");\n/* harmony import */ var _ExtendedFloatingTooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ExtendedFloatingTooltip */ \"./src/ui/ExtendedFloatingTooltip.js\");\n/* harmony import */ var _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data/BuildingRegistry */ \"./src/data/BuildingRegistry.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n/* harmony import */ var _data_WorldData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/WorldData */ \"./src/data/WorldData.js\");\n/* harmony import */ var _data_Building__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/Building */ \"./src/data/Building.js\");\n/* harmony import */ var _FloatingTooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _data_DynamicSettings__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/DynamicSettings */ \"./src/data/DynamicSettings.js\");\n/* harmony import */ var _data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data/MoonlightData */ \"./src/data/MoonlightData.js\");\n/* harmony import */ var _data_PlayerData__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data/PlayerData */ \"./src/data/PlayerData.js\");\n/* harmony import */ var _data_StarData__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../data/StarData */ \"./src/data/StarData.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass TileSelectWindow {\r\n    constructor(scene, x, y, tile) {\r\n        var progression = new _data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"]();\r\n        var region = new _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"]().getCurrentRegion();\r\n\r\n        this.backRect = scene.add.rectangle(x, y, 520, 220, Phaser.Display.Color.GetColor(0, 0, 0))\r\n            .setInteractive()\r\n            .setOrigin(0, 0);\r\n        this.backRect.isStroked = true;\r\n        this.backRect.strokeColor = Phaser.Display.Color.GetColor(128, 128, 128);\r\n        this.backRect.lineWidth = 2;\r\n\r\n        this.titleLabel = scene.add.bitmapText(x + 5, y + 5, \"courier20\", tile.name);\r\n        var txt = \"\";\r\n        if (tile.difficulty < 1) {\r\n            txt += \"Difficulty: Weak\\n\";\r\n        } else {\r\n            txt += \"Difficulty: \" + tile.difficulty + '\\n';\r\n        }\r\n        if (tile.explored === false) {\r\n            txt += \"Explored: \" + Math.floor(tile.amountExplored / tile.explorationNeeded * 100) + '%\\n';\r\n        } else {\r\n            txt += \"Explored\\n\" +\r\n                \"Defense: \" + Math.floor(tile.defense) + \"\\n\";\r\n        }\r\n        var yieldSum = tile.yields.reduce((a, b) => { return a + b; });\r\n        if (tile.explored === true && yieldSum > 0) {\r\n            txt += \"Yields:\\n\"\r\n            for (var i = 0; i < tile.yields.length; i++) {\r\n                if (tile.yields[i] > 0) {\r\n                    txt += \" \" + _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].RESOURCE_NAMES[i] + \": \" +\r\n                        (Math.floor(tile.yields[i] * 100) / 100) + \"\\n\";\r\n                }\r\n            }\r\n        }\r\n        this.infoLabel = scene.add.bitmapText(x + 10, y + 25, \"courier16\", txt);\r\n\r\n        this.buildingLabel = undefined;\r\n        this.floatingText = undefined;\r\n        this.buildingDesc = undefined;\r\n        this.buildingCostLabels = [];\r\n        this.upgradeButton = undefined;\r\n        this.destroyButton = undefined;\r\n        this.buildingButtons = [];\r\n\r\n        if (progression.unlocks.buildings === true && tile.explored === true) {\r\n            if (tile.building === undefined) {\r\n                this.buildingLabel = scene.add.bitmapText(x + 180, y + 5, \"courier20\", \"Buildings:\");\r\n                var bld = [];\r\n                if (yieldSum !== 0 && tile.roadBuildable === true) {\r\n                    bld.push(\"road\");\r\n                    if (region.townData.getMarketLevel() > 0) {\r\n                        bld.push(\"market\");\r\n                    }\r\n                }\r\n                if (_data_DynamicSettings__WEBPACK_IMPORTED_MODULE_10__[\"DynamicSettings\"].getInstance().buildingsAllowed === true) {\r\n                    if (tile.yields[0] > 0) {\r\n                        bld.push(\"wood\");\r\n                    }\r\n                    if (tile.yields[1] > 0) {\r\n                        bld.push(\"leather\");\r\n                    }\r\n                    if (tile.yields[2] > 0) {\r\n                        bld.push(\"metal\");\r\n                    }\r\n                    if (tile.yields[3] > 0) {\r\n                        bld.push(\"fiber\");\r\n                    }\r\n                    if (tile.yields[4] > 0) {\r\n                        bld.push(\"stone\");\r\n                    }\r\n                    if (tile.yields[5] > 0) {\r\n                        bld.push(\"crystal\");\r\n                    }\r\n                }\r\n                if (tile.dockBuildable === true) {\r\n                    bld.push(\"docks\");\r\n                }\r\n                if (yieldSum > 0) {\r\n                    if (tile.houseBuildable) {\r\n                        bld.push(\"house\");\r\n                        if (region.townData.alchemyEnabled === true) {\r\n                            bld.push(\"alchemy\");\r\n                        }\r\n                        if (_data_MoonlightData__WEBPACK_IMPORTED_MODULE_11__[\"MoonlightData\"].getInstance().challenges.buildings.completions > 0) {\r\n                            bld.push(\"warehouse\");\r\n                        }\r\n                        if (_data_ProgressionStore__WEBPACK_IMPORTED_MODULE_3__[\"ProgressionStore\"].getInstance().persistentUnlocks.dungeons === true) {\r\n                            bld.push('dojo');\r\n                            bld.push('garrison');\r\n                        }\r\n                    }\r\n                    if (region.townData.getTavernLevel() > 0) {\r\n                        bld.push(\"tavern\");\r\n                    }\r\n                    bld.push(\"watchtower\");\r\n                }\r\n                for (var i = 0; i < bld.length; i++) {\r\n                    var a = x + 180 + (i % 9) * 34;\r\n                    var b = y + 30 + Math.floor(i / 9) * 34;\r\n                    var building = _data_BuildingRegistry__WEBPACK_IMPORTED_MODULE_5__[\"BuildingRegistry\"].getBuildingByName(bld[i]);\r\n                    this.buildingButtons.push(this._makeBuildingBtn(scene, a, b, tile, building));\r\n                }\r\n            } else {\r\n                this.buildingLabel = scene.add.bitmapText(x + 150, y + 5, \"courier20\", tile.building.name);\r\n                var desc = _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].processText(_data_Building__WEBPACK_IMPORTED_MODULE_8__[\"Building\"].getTooltip(tile, tile.building.name, tile.building.tier), 27);\r\n                this.buildingDesc = scene.add.bitmapText(x + 150, y + 25, \"courier16\", desc);\r\n                if (this._canUpgrade(tile.building)) {\r\n                    this.buildingCostLabels.push(scene.add.bitmapText(x + 395, y + 25, \"courier16\", \"Upgrade:\"));\r\n                    var costY = y + 42;\r\n                    for (var i = 0; i < tile.building.resourceCosts.length; i++) {\r\n                        if (tile.building.resourceCosts[i] > 0) {\r\n                            var clr = _data_PlayerData__WEBPACK_IMPORTED_MODULE_12__[\"PlayerData\"].getInstance().resources[region.resourceTier][i] >= tile.building.resourceCosts[i] ?\r\n                                Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(255, 80, 80);\r\n                            var label = scene.add.bitmapText(x + 395, costY, \"courier16\",\r\n                                _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(tile.building.resourceCosts[i]));\r\n                            label.setTint(clr);\r\n                            this.buildingCostLabels.push(label);\r\n                            costY += 17;\r\n                        }\r\n                    }\r\n                    var label = scene.add.bitmapText(x + 395, costY, \"courier16\", \"Gold: \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(tile.building.goldCost));\r\n                    var clr = _data_PlayerData__WEBPACK_IMPORTED_MODULE_12__[\"PlayerData\"].getInstance().gold >= tile.building.goldCost ?\r\n                        Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(255, 80, 80);\r\n                    label.setTint(clr);\r\n                    this.buildingCostLabels.push(label);\r\n\r\n                    this.upgradeButton = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x + 185, y + 195, 140, 20, \"Upgrade\")\r\n                        .onClickHandler(() => { this._onAction(\"upgrade\", { tile: tile }); });\r\n                }\r\n                this.destroyButton = new _ImageButton__WEBPACK_IMPORTED_MODULE_1__[\"ImageButton\"](scene, x + 130, y + 5, 16, 16, { sprite: \"icons\", tile: 23 })\r\n                    .onClickHandler(() => { this._onAction(\"destroy\", { tile: tile }); })\r\n                    .onPointerOverHandler(() => {\r\n                        var txt = \"Remove the building from this tile. Costs \" + (tile.building.tier * _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].DESTROY_BUILDING_COST) + \"g.\";\r\n                        var px = x + 130;\r\n                        var py = y + 5;\r\n                        this.floatingText = new _FloatingTooltip__WEBPACK_IMPORTED_MODULE_9__[\"FloatingTooltip\"](scene, _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].processText(txt, 25),\r\n                            px + 16, py - 60, 220, 60, \"courier16\", 16);\r\n                    })\r\n                    .onPointerOutHandler(() => { this._clearTooltip(); });\r\n            }\r\n        }\r\n\r\n        this.exploreButton = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x + 40, y + 195, 140, 20, \"Explore\")\r\n            .onClickHandler(() => { this._onAction(\"explore\", { tile: tile }); });\r\n        this.cancelButton = new _TextButton__WEBPACK_IMPORTED_MODULE_0__[\"TextButton\"](scene, x + 330, y + 195, 140, 20, \"Cancel\")\r\n            .onClickHandler(() => { this._onAction(\"cancel\"); });\r\n\r\n        this.onActionHandlers = [];\r\n    }\r\n\r\n    _canUpgrade(bld) {\r\n        if (bld.name === \"Market\") {\r\n            return bld.tier < _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.getCurrentRegion().townData.getMarketLevel();\r\n        } else if (bld.name === \"Tavern\") {\r\n            return bld.tier < _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].instance.getCurrentRegion().townData.getTavernLevel();\r\n        } else {\r\n            return bld.tier < 3 + _data_StarData__WEBPACK_IMPORTED_MODULE_13__[\"StarData\"].getInstance().perks.construction.level;\r\n        }\r\n    }\r\n\r\n    _makeBuildingBtn(scene, x, y, tile, building) {\r\n        return new _ImageButton__WEBPACK_IMPORTED_MODULE_1__[\"ImageButton\"](scene, x, y, 32, 32, building.texture)\r\n            .onClickHandler(() => { this._onAction(\"build\", { tile: tile, building: building }); })\r\n            .onPointerOverHandler(() => {\r\n                if (this.floatingText !== undefined) {\r\n                    this.floatingText.destroy();\r\n                }\r\n                var regionTier = _data_WorldData__WEBPACK_IMPORTED_MODULE_7__[\"WorldData\"].getInstance().getCurrentRegion().resourceTier;\r\n                var descTxt = _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].processText(_data_Building__WEBPACK_IMPORTED_MODULE_8__[\"Building\"].getTooltip(tile, building.name, building.tier, true), 24);\r\n                this.floatingText = new _ExtendedFloatingTooltip__WEBPACK_IMPORTED_MODULE_4__[\"ExtendedFloatingTooltip\"](scene, x + (x + 350 > 1100 ? -350 : 0), y - 150, 350, 150)\r\n                    .addText(5, 5, \"courier20\", building.name)\r\n                    .addText(230, 5, \"courier20\", \"Costs:\")\r\n                    .addText(10, 25, \"courier16\", descTxt);\r\n\r\n                var costY = 25;\r\n                for (var i = 0; i < building.resourceCosts.length; i++) {\r\n                    if (building.resourceCosts[i] > 0) {\r\n                        var clr = _data_PlayerData__WEBPACK_IMPORTED_MODULE_12__[\"PlayerData\"].getInstance().resources[regionTier][i] >= building.resourceCosts[i] ?\r\n                            Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(255, 80, 80);\r\n                        this.floatingText.addText(235, costY, \"courier16\",\r\n                            _data_Statics__WEBPACK_IMPORTED_MODULE_2__[\"Statics\"].RESOURCE_NAMES[i] + \": \" + _utils_Common__WEBPACK_IMPORTED_MODULE_6__[\"Common\"].numberString(building.resourceCosts[i]), clr);\r\n                        costY += 17;\r\n                    }\r\n                }\r\n                var clr = _data_PlayerData__WEBPACK_IMPORTED_MODULE_12__[\"PlayerData\"].getInstance().gold >= building.goldCost ?\r\n                    Phaser.Display.Color.GetColor(255, 255, 255) : Phaser.Display.Color.GetColor(255, 80, 80);\r\n                this.floatingText.addText(235, costY, \"courier16\", \"Gold: \" + building.goldCost, clr);\r\n            })\r\n            .onPointerOutHandler(() => { this._clearTooltip(); });\r\n    }\r\n\r\n    _clearTooltip() {\r\n        this.floatingText.destroy();\r\n        this.floatingText = undefined;\r\n    }\r\n\r\n    addOnActionHandler(callback) {\r\n        this.onActionHandlers.push(callback);\r\n    }\r\n\r\n    _onAction(action, blob = {}) {\r\n        for (var i = 0; i < this.onActionHandlers.length; i++) {\r\n            this.onActionHandlers[i](action, blob);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.backRect.destroy();\r\n        this.titleLabel.destroy();\r\n        this.infoLabel.destroy();\r\n        this.exploreButton.destroy();\r\n        this.cancelButton.destroy();\r\n\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        if (this.buildingLabel !== undefined) {\r\n            this.buildingLabel.destroy();\r\n        }\r\n        for (var i = 0; i < this.buildingButtons.length; i++) {\r\n            this.buildingButtons[i].destroy();\r\n        }\r\n        if (this.buildingDesc !== undefined) {\r\n            this.buildingDesc.destroy();\r\n        }\r\n        for (var i = 0; i < this.buildingCostLabels.length; i++) {\r\n            this.buildingCostLabels[i].destroy();\r\n        }\r\n        if (this.upgradeButton !== undefined) {\r\n            this.upgradeButton.destroy();\r\n        }\r\n        if (this.destroyButton !== undefined) {\r\n            this.destroyButton.destroy();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/TileSelectWindow.js?");

/***/ }),

/***/ "./src/ui/TooltipImage.js":
/*!********************************!*\
  !*** ./src/ui/TooltipImage.js ***!
  \********************************/
/*! exports provided: TooltipImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TooltipImage\", function() { return TooltipImage; });\n/* harmony import */ var _FloatingTooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FloatingTooltip */ \"./src/ui/FloatingTooltip.js\");\n/* harmony import */ var _utils_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Common */ \"./src/utils/Common.js\");\n\r\n\r\n\r\nclass TooltipImage {\r\n    constructor(scene, x, y, width, height, texture, tooltip, tooltipSize = [350, 100], textWidth = 40) {\r\n        this.backRect = scene.add.rectangle(x, y, width, height, 0x000000).setOrigin(0, 0);\r\n        this.backRect.isStroked = true;\r\n        this.backRect.strokeColor = Phaser.Display.Color.GetColor(255, 255, 255);\r\n        this.backRect.lineWidth = 1;\r\n        this.img = scene.add.image(x + width / 2, y + height / 2, texture.sprite, texture.tile).setOrigin(0.5);\r\n        this.img.displayWidth = width;\r\n        this.img.displayHeight = height;\r\n        this.scene = scene;\r\n        this.floatingText = undefined;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.tooltipSize = tooltipSize;\r\n        this.textWidth = textWidth;\r\n        this.tooltip = _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].processText(tooltip, this.textWidth);\r\n        this.clickCallback = undefined;\r\n\r\n        this.backRect.setInteractive({ useHandCursor: true })\r\n            .on(\"pointerdown\", () => { if (this.clickCallback !== undefined) { this.clickCallback(); } })\r\n            .on(\"pointerover\", () => { this._showTooltip(); })\r\n            .on(\"pointerout\", () => { this._removeTooltip(); });\r\n    }\r\n\r\n    onClickHandler(callback) {\r\n        this.clickCallback = callback;\r\n        return this;\r\n    }\r\n\r\n    setImage(img) {\r\n        this.img.setTexture(img.sprite, img.tile);\r\n    }\r\n\r\n    setTint(clr) {\r\n        this.img.setTint(clr);\r\n    }\r\n    clearTint() {\r\n        this.img.clearTint();\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.backRect.setPosition(x, y);\r\n        this.img.setPosition(x + this.width / 2, y + this.height / 2);\r\n    }\r\n\r\n    setTooltip(tooltip) {\r\n        this.tooltip = _utils_Common__WEBPACK_IMPORTED_MODULE_1__[\"Common\"].processText(tooltip, this.textWidth);\r\n    }\r\n\r\n    _showTooltip() {\r\n        if (this.tooltip == \"\") {\r\n            return;\r\n        }\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        var x = this.x + 20 + (this.x + this.tooltipSize[0] > 1090 ? -this.tooltipSize[0] : 0);\r\n        var y = this.y + (this.y - this.tooltipSize[1] < 100 ? 0 : -this.tooltipSize[1]);\r\n        this.floatingText = new _FloatingTooltip__WEBPACK_IMPORTED_MODULE_0__[\"FloatingTooltip\"](this.scene, this.tooltip, x, y, this.tooltipSize[0],\r\n            this.tooltipSize[1], \"courier16\", 16, 999);\r\n    }\r\n\r\n    _removeTooltip() {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n            this.floatingText = undefined;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        this.backRect.setVisible(visible);\r\n        this.img.setVisible(visible);\r\n    }\r\n\r\n    destroy() {\r\n        if (this.floatingText !== undefined) {\r\n            this.floatingText.destroy();\r\n        }\r\n        this.backRect.destroy();\r\n        this.img.destroy();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/ui/TooltipImage.js?");

/***/ }),

/***/ "./src/utils/Combat.js":
/*!*****************************!*\
  !*** ./src/utils/Combat.js ***!
  \*****************************/
/*! exports provided: Combat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Combat\", function() { return Combat; });\n/* harmony import */ var _data_Statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/Statics */ \"./src/data/Statics.js\");\n\r\n\r\n\r\nclass Combat {\r\n    static getAttackSpeedMultiplier(hit, evasion) {\r\n        hit = Math.max(1, hit);\r\n        evasion = Math.max(1, evasion);\r\n        return Math.pow(hit, _data_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].ATTACK_SPEED_POWER) / Math.pow(evasion, _data_Statics__WEBPACK_IMPORTED_MODULE_0__[\"Statics\"].ATTACK_SPEED_POWER);\r\n    }\r\n\r\n    static getAnimInfoFromKey(key) {\r\n        var animInfo = [];\r\n        switch (key) {\r\n            case \"claws\":\r\n            case \"clawscrit\":\r\n            case \"barrier\":\r\n            case \"mace\":\r\n            case \"skull\":\r\n            case \"glancing\":\r\n                animInfo.push({ frameId: 0, duration: 80 });\r\n                animInfo.push({ frameId: 1, duration: 80 });\r\n                animInfo.push({ frameId: 2, duration: 80 });\r\n                animInfo.push({ frameId: 3, duration: 80 });\r\n                break;\r\n            case \"magicmissile\":\r\n            case \"fireball\":\r\n            case \"haste\":\r\n                animInfo.push({ frameId: 0, duration: 64 });\r\n                animInfo.push({ frameId: 1, duration: 64 });\r\n                animInfo.push({ frameId: 2, duration: 64 });\r\n                animInfo.push({ frameId: 3, duration: 64 });\r\n                animInfo.push({ frameId: 4, duration: 64 });\r\n                break;\r\n            case \"entangle\":\r\n                animInfo.push({ frameId: 0, duration: 105 });\r\n                animInfo.push({ frameId: 1, duration: 105 });\r\n                animInfo.push({ frameId: 2, duration: 105 });\r\n                break;\r\n        }\r\n        return animInfo;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/utils/Combat.js?");

/***/ }),

/***/ "./src/utils/Common.js":
/*!*****************************!*\
  !*** ./src/utils/Common.js ***!
  \*****************************/
/*! exports provided: Common */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Common\", function() { return Common; });\nclass Common {\r\n    static getDistance(x1, y1, x2, y2) {\r\n        return Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2));\r\n    }\r\n\r\n    static randint(a, b) {\r\n        return Math.floor(a + Math.random() * (b - a));\r\n    }\r\n\r\n    static pointInList(x, y, list) {\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].x === x && list[i].y === y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static numberString(x) {\r\n        var val = x;\r\n        var suffix = \"\";\r\n        if (val > 10000000000000000000000000000n) {\r\n            return \"TOO BIG\";\r\n        } else if (val > 10000000000000000000000000n) {\r\n            val = BigInt(x) / 1000000000000000000000000n;\r\n            suffix = \"Sp\";\r\n        } else if (val > 10000000000000000000000n) {\r\n            val = BigInt(x) / 1000000000000000000000n;\r\n            suffix = \"Sx\";\r\n        } else if (val > 10000000000000000000n) {\r\n            val = BigInt(x) / 1000000000000000000n;\r\n            suffix = \"Qi\";\r\n        } else if (val > 10000000000000000n) {\r\n            val = BigInt(x) / 1000000000000000n;\r\n            suffix = \"Q\";\r\n        } else if (val > 10000000000000) {\r\n            val = Math.floor(x / 1000000000000);\r\n            suffix = \"T\";\r\n        } else if (val > 10000000000) {\r\n            val = Math.floor(x / 1000000000);\r\n            suffix = \"B\";\r\n        } else if (val > 10000000) {\r\n            val = Math.floor(x / 1000000);\r\n            suffix = \"M\";\r\n        } else if (val > 10000) {\r\n            val = Math.floor(x / 1000);\r\n            suffix = \"K\";\r\n        }\r\n        var ret = new Intl.NumberFormat('en-US').format(val) + suffix;\r\n        return ret;\r\n    }\r\n\r\n    static nearestPointsInList(x, y, pointList, count) {\r\n        var dists = [];\r\n        for (var i = 0; i < pointList.length; i++) {\r\n            dists.push([i, Common.getDistance(x, y, pointList[i].x, pointList[i].y)]);\r\n        }\r\n        dists.sort(function (a, b) { return a[1] - b[1] });\r\n        return dists.slice(0, count);\r\n    }\r\n\r\n    static nearestPointInList(x, y, list, ignoreSelf = false) {\r\n        var idx = 0;\r\n        var min = Common.getDistance(x, y, list[0].x, list[0].y);\r\n\r\n        for (var i = 1; i < list.length; i++) {\r\n            var dist = Common.getDistance(x, y, list[i].x, list[i].y);\r\n            // kind of hacky, but we shouldn't have cases points overlap\r\n            if (dist < min) {\r\n                if (ignoreSelf === true && dist === 0) {\r\n                    continue;\r\n                }\r\n                idx = i;\r\n                min = dist;\r\n            }\r\n        }\r\n        return [idx, min];\r\n    }\r\n\r\n    static sumList(list) {\r\n        var t = 0;\r\n        for (var i = 0; i < list.length; i++) {\r\n            t += list[i];\r\n        }\r\n        return t;\r\n    }\r\n\r\n    static canCraft(cost, inv) {\r\n        for (var i = 0; i < inv.length; i++) {\r\n            if (inv[i] < cost[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static processText(text, width) {\r\n        var list = text.split('\\n');\r\n        var res = \"\";\r\n\r\n        for (var i = 0; i < list.length; i++) {\r\n            if (list[i].length < width) {\r\n                res += list[i] + (i < list.length - 1 ? \"\\n\" : \"\");\r\n                continue;\r\n            }\r\n            var idxA = 0;\r\n            var idxB = width;\r\n\r\n            while (idxB < list[i].length) {\r\n                while (idxB > idxA && list[i][idxB] !== ' ') {\r\n                    idxB--;\r\n                }\r\n                res += list[i].substring(idxA, idxB) + \"\\n\";\r\n                idxA = idxB + 1;\r\n                idxB = Math.min(idxA + width, list[i].length);\r\n            }\r\n\r\n            if (idxA < list[i].length) {\r\n                res += list[i].substring(idxA, list[i].length);\r\n            }\r\n\r\n            if (i !== list.length - 1) {\r\n                res += \"\\n\";\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    static colorLerp(clrA, clrB, lerp) {\r\n        var a = Phaser.Display.Color.IntegerToRGB(clrA);\r\n        var b = Phaser.Display.Color.IntegerToRGB(clrB);\r\n        return Phaser.Display.Color.GetColor(\r\n            a.r + (b.r - a.r) * lerp,\r\n            a.g + (b.g - a.g) * lerp,\r\n            a.b + (b.b - a.b) * lerp);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/utils/Common.js?");

/***/ }),

/***/ "phaser":
/*!*******************************************************!*\
  !*** external {"root":"phaser","commonjs2":"phaser"} ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = undefined;\n\n//# sourceURL=webpack:///external_%7B%22root%22:%22phaser%22,%22commonjs2%22:%22phaser%22%7D?");

/***/ })

/******/ });